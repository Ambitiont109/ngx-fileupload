var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/FileUpload.html",[0,0.248,1,0.714]],["body/classes/FileUpload.html",[0,0.172,1,1.133,2,1.101,3,0.265,4,0.265,5,0.569,6,0.318,7,3.129,8,1.28,9,1.101,10,1.265,11,2.296,12,0.217,13,1.265,14,1.188,15,2.806,16,1.698,17,3.081,18,2.594,19,1.405,20,1.933,21,2.394,22,1.445,23,1.886,24,2.594,25,1.205,26,0.751,27,3.307,28,2.082,29,1.534,30,1.886,31,2.328,32,1.445,33,0.736,34,0.052,35,0.783,36,0.265,37,0.646,38,3.081,39,1.886,40,1.175,41,2.594,42,2.394,43,1.097,44,1.338,45,1.886,46,1.133,47,2.296,48,0.936,49,0.976,50,1.405,51,1.886,52,1.886,53,2.296,54,2.766,55,2.328,56,2.23,57,1.233,58,2.296,59,1.886,60,2.766,61,1.338,62,2.296,63,2.002,64,1.886,65,1.886,66,3.477,67,3.081,68,2.002,69,1.003,70,2.766,71,1.521,72,2.296,73,2.296,74,2.766,75,1.101,76,2.296,77,0.957,78,1.28,79,2.296,80,1.101,81,0.567,82,0.838,83,0.4,84,0.091,85,1.662,86,0.748,87,2.928,88,1.933,89,1.28,90,1.521,91,1.154,92,0.901,93,1.521,94,2.766,95,1.521,96,2.296,97,1.521,98,2.296,99,0.646,100,3.938,101,1.265,102,2.296,103,1.521,104,1.521,105,2.328,106,1.101,107,1.101,108,0.838,109,1.521,110,1.521,111,2.296,112,2.766,113,1.148,114,2.296,115,2.296,116,1.521,117,3.081,118,1.933,119,3.307,120,1.521,121,2.296,122,1.478,123,1.521,124,0.646,125,1.521,126,1.101,127,0.495,128,2.002,129,0.838,130,0.901,131,2.296,132,1.521,133,1.521,134,1.521,135,1.521,136,1.662,137,0.856,138,1.521,139,1.521,140,1.28,141,1.521,142,1.521,143,2.296,144,1.521,145,1.662,146,1.521,147,1.521,148,1.521,149,2.328,150,1.521,151,1.521,152,2.766,153,1.521,154,1.521,155,1.521,156,1.521,157,1.521,158,1.521,159,1.521,160,1.521,161,1.521,162,1.521,163,0.646,164,1.521,165,1.521,166,1.521,167,1.521,168,1.521,169,1.521,170,1.521,171,0.646,172,1.521,173,1.521,174,1.521,175,0.838,176,1.521,177,1.521,178,1.521,179,1.521,180,1.521,181,1.521,182,1.521,183,1.521,184,1.28,185,1.521,186,1.521,187,0.017,188,0.026,189,0.017]],["title/interfaces/FileUploadItemContext.html",[84,0.13,190,1.586]],["body/interfaces/FileUploadItemContext.html",[0,0.271,1,1.379,3,0.417,4,0.417,5,0.507,6,0.205,12,0.342,14,1.143,25,1.166,26,0.773,34,0.052,36,0.552,40,1.018,44,1.159,46,0.78,57,0.893,68,2.294,69,1.231,82,1.32,83,0.552,84,0.143,91,0.678,92,1.032,107,1.734,108,1.32,113,0.893,127,1.342,136,1.734,187,0.027,188,0.036,189,0.027,190,2.571,191,1.018,192,1.734,193,2.017,194,1.533,195,3.932,196,2.38,197,1.606,198,1.533,199,3.169,200,2.571,201,2.395,202,2.99,203,2.99,204,2.668,205,2.017,206,1.018,207,1.734,208,2.395,209,2.395,210,2.99,211,1.734,212,2.99,213,2.668,214,2.017,215,2.395,216,2.017,217,2.395,218,1.159,219,2.017,220,3.182,221,2.294,222,3.169,223,2.395,224,3.169,225,3.169,226,2.395,227,3.169,228,2.395,229,2.395,230,1.347,231,2.395,232,2.395,233,2.395,234,2.395,235,2.395,236,1.734,237,0.893,238,2.395,239,2.395,240,2.395,241,2.017,242,2.395,243,2.017,244,2.017,245,2.395,246,2.395,247,2.395,248,3.169,249,2.395,250,2.395,251,2.395,252,2.395,253,2.395,254,2.395,255,2.395,256,2.395]],["title/interfaces/IDataNode.html",[84,0.13,257,1.207]],["body/interfaces/IDataNode.html",[0,0.211,3,0.324,4,0.324,5,0.58,6,0.228,10,1.027,14,1.236,16,1.469,19,1.133,25,1.151,26,0.454,29,0.792,34,0.052,35,0.754,36,0.324,40,1.133,43,0.961,46,0.868,48,0.881,49,1.133,50,1.704,57,1.394,61,1.29,81,1.34,83,0.591,84,0.185,86,1.282,91,1.114,99,1.133,101,1.027,113,0.695,122,1.796,124,1.133,127,1.014,129,1.469,130,0.607,137,0.695,163,1.636,171,1.133,175,1.027,187,0.021,188,0.03,189,0.021,191,0.792,197,1.133,230,1.767,237,0.994,257,1.715,258,1.027,259,2.311,260,1.469,261,2.311,262,1.349,263,2.17,264,2.85,265,1.872,266,2.253,267,2.253,268,2.253,269,2.17,270,1.349,271,0.792,272,1.349,273,1.349,274,1.349,275,1.349,276,1.349,277,1.349,278,1.173,279,1.173,280,1.349,281,1.93,282,1.349,283,1.93,284,1.349,285,1.349,286,1.93,287,1.349,288,1.349,289,1.349,290,1.349,291,1.349,292,1.93,293,1.349,294,1.93,295,1.349,296,1.93,297,1.173,298,2.459,299,1.349,300,1.93,301,1.349,302,1.349,303,1.93,304,1.349,305,1.349,306,1.93,307,1.349,308,1.93,309,1.349,310,1.93,311,1.506,312,1.93,313,1.349,314,1.349,315,1.349,316,1.349,317,1.349,318,1.349,319,1.349,320,1.349,321,1.349,322,1.349,323,1.349,324,1.349]],["title/components/NgxFileUploadComponent.html",[198,1.06,325,1.207]],["body/components/NgxFileUploadComponent.html",[0,0.152,1,1.356,3,0.445,4,0.233,5,0.553,6,0.314,12,0.191,13,1.147,14,1.146,15,1.507,21,1.507,25,1.178,26,0.703,29,1.516,33,1.236,34,0.052,35,1.009,36,0.575,37,1.327,42,1.849,43,0.723,44,1.51,46,0.939,57,0.499,63,1.507,69,1.162,77,0.842,80,0.969,81,0.499,82,0.737,83,0.233,85,2.26,86,0.678,89,1.127,91,0.589,92,0.832,105,1.127,106,0.969,108,1.408,118,1.127,122,0.569,124,0.885,126,2.086,127,0.939,128,1.507,130,0.436,137,1.074,145,1.507,149,1.753,171,1.225,187,0.015,188,0.024,189,0.015,192,2.653,194,1.007,198,1.51,200,2.498,202,2.151,206,0.569,207,0.969,210,2.151,211,2.26,212,3.263,213,2.426,214,1.753,216,1.753,218,0.647,220,1.127,221,2.086,230,0.885,236,1.507,237,0.776,260,0.737,265,0.737,271,1.747,311,0.647,325,1.588,326,1.753,327,1.338,328,1.338,329,1.338,330,1.338,331,1.127,332,3.168,333,2.581,334,3.306,335,2.581,336,2.581,337,2.581,338,1.753,339,2.555,340,3.871,341,2.555,342,2.393,343,1.849,344,1.66,345,2.882,346,1.66,347,2.581,348,2.581,349,1.66,350,2.882,351,2.082,352,1.66,353,2.082,354,1.753,355,2.082,356,2.082,357,2.581,358,3.574,359,1.66,360,2.581,361,4.544,362,3.574,363,2.581,364,2.581,365,2.581,366,2.581,367,2.581,368,2.581,369,2.581,370,2.581,371,2.581,372,1.66,373,2.581,374,2.555,375,2.082,376,2.581,377,1.66,378,2.882,379,2.082,380,2.082,381,1.66,382,2.581,383,1.338,384,3.168,385,1.66,386,1.66,387,1.338,388,1.66,389,1.66,390,2.581,391,1.66,392,1.66,393,1.66,394,2.581,395,2.26,396,1.66,397,1.66,398,1.66,399,1.127,400,1.66,401,1.66,402,1.66,403,1.66,404,1.66,405,1.66,406,1.66,407,2.581,408,1.66,409,2.082,410,1.66,411,1.66,412,1.66,413,1.66,414,1.66,415,1.66,416,1.66,417,1.66,418,1.66,419,2.581,420,2.581,421,2.581,422,2.581,423,1.338,424,2.082,425,1.338,426,1.338,427,1.338,428,1.338,429,1.127,430,3.306,431,4.014,432,2.882,433,2.082,434,2.082,435,1.66,436,2.082,437,2.581,438,3.815,439,3.568,440,2.082,441,1.66,442,2.581,443,1.66,444,1.66,445,1.338,446,1.66,447,1.66,448,1.66,449,2.082,450,2.555,451,1.338,452,2.882,453,2.555,454,2.555,455,2.882,456,1.66,457,2.082,458,2.082,459,2.555,460,2.082,461,2.882,462,1.66,463,1.66,464,2.555,465,2.555,466,2.555,467,2.555,468,1.66,469,1.338,470,1.66,471,1.66,472,1.338,473,3.168,474,2.882,475,2.555,476,1.66,477,1.338,478,1.338,479,2.555,480,1.338,481,1.338,482,1.66,483,1.338,484,2.082,485,1.338,486,1.66,487,1.338,488,1.338,489,1.66,490,1.66,491,2.581,492,1.338,493,1.66,494,1.66,495,0.969,496,2.082,497,2.082,498,0.737,499,2.882,500,1.338,501,1.338,502,1.127,503,0.647,504,1.127,505,1.338]],["title/directives/NgxFileUploadDirective.html",[498,1.207,503,1.06]],["body/directives/NgxFileUploadDirective.html",[0,0.155,1,0.95,3,0.238,4,0.238,5,0.575,6,0.334,9,0.991,12,0.195,13,1.168,14,1.16,15,2.112,21,1.534,22,1.334,24,2.809,25,1.16,26,0.517,28,1.334,29,1.631,31,1.784,33,0.663,34,0.052,35,0.826,36,0.451,37,1.102,41,1.784,42,1.876,43,0.733,44,1.254,46,0.69,48,0.6,49,1.102,55,1.153,63,1.534,69,1.133,75,0.991,77,0.862,78,1.153,80,0.991,81,0.51,82,0.755,83,0.238,85,2.112,86,0.69,87,1.153,88,1.153,91,1.067,92,0.95,106,0.991,108,2.2,113,0.79,122,0.901,124,0.901,126,2.112,127,0.95,128,1.534,130,1.171,137,1.088,145,2.112,171,0.582,187,0.024,188,0.024,189,0.016,198,0.663,200,2.284,203,2.457,204,1.784,205,1.153,206,0.582,207,0.991,211,1.534,219,1.784,221,1.534,230,0.901,236,2.415,237,0.51,241,1.153,243,1.784,244,2.457,263,0.755,271,1.102,278,1.334,279,1.334,331,1.153,334,3.838,338,1.784,339,2.592,341,2.592,342,2.112,343,1.876,345,3.337,350,2.592,351,2.119,353,2.119,354,1.784,355,2.119,356,2.119,374,2.592,375,1.37,378,2.119,379,3.156,380,3.48,383,2.119,395,1.876,409,1.37,429,1.784,469,3.48,498,1.739,502,1.153,503,1.412,504,2.457,506,3.897,507,1.37,508,3.215,509,3.618,510,3.618,511,3.618,512,3.618,513,2.119,514,2.119,515,2.628,516,1.698,517,3.215,518,3.618,519,2.519,520,2.263,521,1.698,522,1.698,523,1.698,524,2.628,525,1.698,526,1.698,527,2.592,528,1.37,529,1.698,530,2.628,531,2.628,532,1.698,533,3.618,534,1.698,535,2.628,536,1.698,537,1.698,538,1.698,539,2.628,540,3.618,541,1.698,542,2.628,543,2.628,544,1.698,545,2.628,546,1.698,547,1.698,548,0.862,549,1.698,550,1.698,551,1.698,552,1.698,553,1.698,554,2.628,555,3.215,556,1.698,557,2.628,558,1.698,559,1.698,560,1.698,561,1.698,562,1.698,563,1.698,564,1.698,565,1.698,566,1.698,567,1.698,568,1.698,569,1.698,570,1.698,571,1.698,572,1.698,573,3.215,574,1.698,575,1.698,576,1.698,577,1.698,578,1.698,579,1.698,580,1.698,581,3.618,582,1.698,583,1.698,584,1.698,585,2.628,586,1.698,587,1.698,588,1.698,589,1.698,590,1.698,591,1.698,592,1.698,593,1.698,594,1.698,595,1.698,596,1.698,597,1.698,598,1.698,599,1.698,600,1.698,601,1.698,602,2.628,603,1.698,604,1.698,605,1.698,606,1.698,607,1.698,608,1.698,609,1.698,610,1.698,611,1.698,612,1.698,613,1.37,614,1.698,615,1.698,616,1.698,617,1.698,618,1.698,619,1.698,620,1.698,621,1.698,622,1.698,623,1.698,624,1.698,625,1.698,626,1.698,627,1.698,628,1.698]],["title/components/NgxFileUploadItemComponent.html",[198,1.06,218,1.06]],["body/components/NgxFileUploadItemComponent.html",[0,0.157,1,1.388,3,0.241,4,0.241,5,0.453,6,0.317,9,1.004,12,0.305,14,1.07,20,1.801,25,1.218,26,0.522,29,1.534,33,1.035,34,0.052,35,0.898,36,0.455,37,0.909,40,1.11,43,0.605,44,1.264,46,0.452,48,0.392,57,0.974,68,2.297,69,1.092,82,0.764,83,0.372,84,0.083,91,0.392,92,0.697,107,1.004,108,1.179,113,0.517,127,1.138,136,1.549,137,0.797,140,1.167,163,0.909,184,1.167,187,0.016,188,0.024,189,0.016,190,1.891,192,2.681,193,1.167,194,1.035,195,2.139,196,1.347,197,0.909,198,1.264,199,2.612,200,1.891,201,1.386,202,2.473,203,2.473,204,1.801,205,1.167,206,0.589,207,1.004,208,1.386,209,1.386,210,2.823,211,2.297,212,3.185,213,3.432,214,1.801,215,2.139,216,1.801,217,2.612,218,1.421,219,1.801,220,3.37,221,2.297,222,3.173,223,2.612,224,3.173,225,2.612,226,2.139,227,3.354,228,2.612,229,2.612,230,0.909,231,1.386,232,1.386,233,1.386,234,1.386,235,2.139,236,2.126,237,0.797,238,2.139,239,2.139,240,2.139,241,1.167,242,1.386,243,1.801,244,1.167,245,1.386,246,1.386,247,1.386,248,2.612,249,1.386,250,1.386,251,1.386,252,1.386,253,1.386,254,1.386,255,1.386,256,1.386,260,1.179,265,1.618,271,1.485,297,1.347,311,1.421,325,0.764,326,1.801,327,1.386,328,1.386,329,1.386,331,1.167,338,1.801,342,1.004,354,1.167,395,1.549,423,1.386,424,2.937,425,1.386,426,1.386,427,1.386,428,1.386,429,1.167,430,3.173,431,3.704,432,2.139,433,1.386,434,2.937,436,1.386,438,3.704,439,3.173,440,2.612,445,2.139,449,3.173,450,3.173,451,2.139,452,2.937,453,1.386,454,1.386,455,1.386,457,2.139,458,1.386,459,1.386,460,1.386,461,1.386,464,2.937,465,3.173,466,3.173,467,2.612,472,2.139,474,2.139,475,1.386,477,2.612,478,2.139,479,2.937,480,3.173,481,1.386,483,1.386,484,3.495,485,2.139,487,2.139,488,2.139,492,1.386,495,1.004,496,2.139,497,2.139,498,0.764,499,2.937,500,1.386,501,1.386,502,1.167,503,0.671,504,1.167,505,1.386,513,2.139,514,2.139,527,1.386,528,1.386,629,2.653,630,2.653,631,1.719,632,1.719,633,1.719,634,1.719,635,1.719,636,1.719,637,2.653,638,2.653,639,2.139,640,2.653,641,3.239,642,3.239,643,1.719,644,1.719,645,1.719,646,1.719,647,1.719,648,1.719,649,3.642,650,1.719,651,1.719,652,1.719,653,3.239,654,2.653,655,1.719,656,1.719,657,1.719,658,1.719,659,2.653,660,1.719,661,1.719,662,1.719,663,1.719,664,1.719,665,1.719,666,1.719,667,1.719,668,1.719,669,1.719,670,2.653,671,3.239,672,2.653,673,2.653,674,2.653,675,2.653,676,2.653,677,2.653,678,2.653,679,1.719,680,1.719,681,1.719,682,1.719,683,2.653,684,1.719,685,1.719,686,1.719,687,1.719,688,1.719,689,1.719,690,1.719,691,1.719,692,1.719,693,1.719,694,1.719,695,1.719]],["title/modules/NgxFileUploadModule.html",[696,1.844,697,1.586]],["body/modules/NgxFileUploadModule.html",[0,0.311,1,0.895,3,0.478,4,0.478,5,0.494,6,0.235,34,0.052,56,1.99,69,1.402,75,1.99,83,0.478,187,0.031,188,0.039,189,0.031,206,1.168,218,2.14,325,2.437,399,2.314,495,1.99,503,2.14,696,2.314,697,3.215,698,2.314,699,1.99,700,3.793,701,2.749,702,2.749,703,3.793,704,2.749,705,2.749,706,2.749,707,3.464,708,3.409,709,3.409,710,4.296,711,4.296,712,2.749,713,4.296,714,4.296,715,2.749,716,3.409,717,4.296,718,2.749,719,2.749,720,4.296,721,3.409,722,3.409,723,3.409,724,3.409,725,3.409]],["title/interfaces/NgxFileUploadValidator.html",[84,0.13,520,1.379]],["body/interfaces/NgxFileUploadValidator.html",[3,0.553,4,0.553,5,0.61,6,0.324,12,0.453,13,2.086,29,1.35,32,2,33,1.537,34,0.051,35,0.899,36,0.553,37,1.35,43,0.899,48,0.899,50,1.35,69,1.035,83,0.704,84,0.225,86,1.035,92,1.035,99,1.35,130,1.035,187,0.036,188,0.043,189,0.036,191,1.35,206,1.35,519,2.299,520,2.383,548,2,613,3.785,726,2.299,727,3.785,728,3.939,729,2.927,730,3.176,731,2.674]],["title/interfaces/Response.html",[84,0.13,269,1.207]],["body/interfaces/Response.html",[0,0.209,3,0.32,4,0.32,5,0.579,6,0.158,10,1.015,12,0.263,14,1.234,16,1.456,19,1.123,25,1.148,26,0.449,34,0.052,35,0.748,36,0.538,40,1.123,43,0.956,46,0.861,48,0.875,49,1.123,50,1.699,57,1.388,61,1.279,81,1.334,83,0.588,84,0.184,86,1.25,91,1.111,99,1.123,101,1.015,113,0.686,122,1.792,124,1.123,127,1.007,129,1.456,130,0.6,137,1.259,163,1.63,171,1.123,175,1.862,187,0.021,188,0.03,189,0.021,191,0.782,194,1.279,197,1.123,230,1.763,237,0.985,257,1.862,258,1.015,260,1.015,262,1.333,263,2.163,264,2.936,265,1.862,266,2.238,267,2.238,268,2.238,269,2.202,270,1.333,271,0.782,272,1.333,273,1.333,274,1.333,275,1.333,276,1.333,277,1.333,278,1.159,279,1.159,280,1.333,281,1.913,282,1.333,283,1.913,284,1.333,285,1.333,286,1.913,287,1.333,288,1.333,289,1.333,290,1.333,291,1.333,292,1.913,293,1.333,294,1.913,295,1.333,296,1.913,297,1.159,298,2.446,299,1.333,300,1.913,301,1.333,302,1.333,303,1.913,304,1.333,305,1.333,306,1.913,307,1.333,308,1.913,309,1.333,310,1.913,311,1.496,312,1.913,313,1.333,314,1.333,315,1.333,316,1.333,317,1.333,318,1.333,319,1.333,320,1.333,321,1.333,322,1.333,323,1.333,324,1.333]],["title/classes/UploadControl.html",[0,0.248,196,1.379]],["body/classes/UploadControl.html",[0,0.336,1,1.391,2,2.146,3,0.516,4,0.516,5,0.518,6,0.359,12,0.423,13,2.001,14,1.259,18,3.443,19,1.738,22,2.286,25,0.839,29,1.738,33,1.435,34,0.051,35,0.839,36,0.516,37,1.26,43,1.11,44,1.899,69,0.966,83,0.516,91,0.839,187,0.034,188,0.041,189,0.034,196,2.286,732,4.196,733,2.965,734,5.072,735,3.677,736,3.677,737,3.677,738,3.677,739,3.677,740,3.677,741,3.677,742,3.677]],["title/interfaces/UploadData.html",[84,0.13,197,0.931]],["body/interfaces/UploadData.html",[0,0.198,3,0.304,4,0.304,5,0.572,6,0.15,10,0.963,12,0.249,14,1.227,16,1.932,19,1.082,25,1.134,26,0.426,34,0.052,35,0.992,36,0.698,40,1.082,43,0.933,46,0.829,48,0.85,49,1.082,50,1.79,57,1.471,61,1.232,81,1.408,83,0.574,84,0.179,86,1.323,91,1.095,99,1.082,101,0.963,113,0.652,122,1.777,124,1.082,127,0.978,129,1.403,130,0.569,137,0.652,163,1.704,171,1.082,175,0.963,187,0.02,188,0.029,189,0.02,191,0.743,194,1.232,197,1.276,230,1.746,237,0.949,257,1.403,258,0.963,260,0.963,262,1.265,263,2.238,264,3.026,265,2.081,266,2.648,267,2.648,268,2.648,269,2.133,270,1.265,271,0.743,272,1.265,273,1.265,274,1.265,275,1.265,276,1.265,277,1.265,278,1.101,279,1.101,280,1.265,281,1.843,282,1.265,283,1.843,284,1.265,285,1.265,286,1.843,287,1.265,288,1.265,289,1.265,290,1.265,291,1.265,292,1.843,293,1.265,294,1.843,295,1.265,296,1.843,297,1.101,298,2.387,299,1.265,300,1.843,301,1.265,302,1.265,303,1.843,304,1.265,305,1.265,306,1.843,307,1.265,308,1.843,309,1.265,310,1.843,311,1.453,312,1.843,313,1.265,314,1.265,315,1.265,316,1.265,317,1.265,318,1.265,319,1.265,320,1.265,321,1.265,322,1.265,323,1.265,324,1.265]],["title/classes/UploadModel.html",[0,0.248,26,0.534]],["body/classes/UploadModel.html",[0,0.161,2,1.03,3,0.248,4,0.248,5,0.599,6,0.363,9,1.03,10,1.202,12,0.203,13,1.202,14,1.209,16,1.202,19,0.927,20,1.837,22,0.896,25,1.189,26,0.532,29,1.794,33,1.761,34,0.052,35,1.078,36,0.633,37,1.547,40,1.265,43,1.217,44,1.707,46,0.865,48,0.908,49,0.927,50,1.765,57,1.444,61,1.056,81,1.263,83,0.518,84,0.158,86,1.262,91,1.03,99,1.265,101,0.784,113,0.53,122,1.726,124,0.927,127,1.103,129,1.463,130,0.463,137,0.53,163,1.586,171,1.265,175,0.784,187,0.016,188,0.025,189,0.016,197,1.128,230,1.753,237,0.813,257,1.202,258,0.784,260,0.784,262,1.03,263,2.193,264,2.846,265,1.867,266,2.155,267,2.324,268,2.324,269,2.217,270,1.03,271,0.605,272,1.03,273,1.03,274,1.03,275,1.03,276,1.03,277,1.03,278,1.374,279,1.374,280,1.579,281,1.579,282,1.579,283,2.324,284,1.579,285,1.03,286,2.324,287,1.03,288,1.579,289,1.921,290,1.03,291,1.03,292,1.579,293,1.03,294,1.579,295,1.03,296,1.579,297,1.374,298,2.634,299,1.03,300,1.579,301,1.579,302,1.03,303,1.579,304,1.921,305,1.03,306,1.579,307,1.03,308,1.579,309,1.579,310,1.579,311,1.284,312,1.579,313,1.03,314,1.03,315,1.03,316,1.03,317,2.155,318,1.03,319,1.03,320,1.03,321,1.03,322,1.03,323,1.03,324,1.03,743,1.764,744,1.764,745,1.764,746,1.764,747,1.764,748,1.764,749,1.764,750,1.764,751,1.764,752,1.764,753,1.764,754,1.764,755,1.764,756,1.764,757,1.764,758,1.764,759,1.764,760,1.764,761,1.764,762,1.764,763,1.764,764,1.764,765,1.764,766,1.764,767,1.764,768,1.764,769,1.764,770,1.764,771,1.764,772,1.764,773,1.764,774,1.764,775,1.764,776,1.764,777,1.764,778,1.764,779,1.764,780,1.764,781,1.764,782,1.764]],["title/interfaces/UploadOptions.html",[28,1.379,84,0.13]],["body/interfaces/UploadOptions.html",[0,0.193,1,0.963,3,0.296,4,0.296,5,0.548,6,0.146,7,1.433,8,1.433,10,0.938,11,1.703,12,0.243,14,1.06,15,2.51,16,0.938,17,1.703,18,1.433,19,1.061,21,1.807,22,1.072,24,2.102,25,1.186,26,0.609,27,2.957,28,2.05,31,2.102,32,1.072,34,0.052,35,0.707,36,0.567,37,1.061,38,2.957,40,1.061,41,2.49,42,2.358,43,0.707,46,1.13,47,1.703,48,0.922,49,0.724,50,1.257,53,1.703,54,2.497,55,2.102,56,1.807,57,1.102,58,1.703,60,2.497,61,1.208,62,1.703,63,1.807,66,3.257,67,2.957,68,1.807,69,1.061,70,2.957,71,1.703,72,2.497,73,2.497,74,2.957,75,1.232,76,2.497,77,1.072,78,1.433,79,2.497,80,1.232,81,0.635,82,0.938,83,0.435,84,0.101,85,2.51,86,1.061,87,3.3,88,2.102,89,1.433,90,1.703,91,1.178,92,0.963,93,1.703,94,2.957,95,1.703,96,2.497,97,1.703,98,2.497,99,0.724,100,4.039,101,1.376,102,2.497,103,1.703,104,1.703,105,2.49,106,1.232,107,1.232,108,0.938,109,1.703,110,1.703,111,2.497,112,2.957,113,1.214,114,2.497,115,2.497,116,1.703,117,3.257,118,2.102,119,3.468,120,1.703,121,2.497,122,1.54,123,1.703,124,0.724,125,1.703,126,1.232,127,0.555,128,2.14,129,0.938,130,0.963,131,2.497,132,1.703,133,1.703,134,1.703,135,1.703,136,1.807,137,0.931,138,1.703,139,1.703,140,1.433,141,1.703,142,1.703,143,2.497,144,1.703,145,1.807,146,1.703,147,1.703,148,1.703,149,2.49,150,1.703,151,1.703,152,2.957,153,1.703,154,1.703,155,1.703,156,1.703,157,1.703,158,1.703,159,1.703,160,1.703,161,1.703,162,1.703,163,0.724,164,1.703,165,1.703,166,1.703,167,1.703,168,1.703,169,1.703,170,1.703,171,0.724,172,1.703,173,1.703,174,1.703,175,0.938,176,1.703,177,1.703,178,1.703,179,1.703,180,1.703,181,1.703,182,1.703,183,1.703,184,1.433,185,1.703,186,1.703,187,0.019,188,0.028,189,0.019,191,0.724,194,1.208,783,3.096]],["title/interfaces/ValidationResult.html",[84,0.13,729,1.586]],["body/interfaces/ValidationResult.html",[3,0.556,4,0.556,5,0.542,6,0.274,12,0.456,32,2.011,34,0.051,36,0.661,48,1.187,50,1.722,69,1.04,83,0.705,84,0.226,86,1.32,92,1.04,99,1.782,130,1.04,187,0.036,188,0.043,189,0.036,191,1.358,194,1.837,206,1.358,519,2.312,520,2.011,548,2.011,726,2.312,727,3.194,729,2.934,730,3.194,731,2.689]],["title/coverage.html",[784,2.985]],["body/coverage.html",[0,0.438,1,1.258,5,0.408,6,0.384,7,2.99,8,2.99,26,0.697,28,1.801,34,0.051,36,0.498,84,0.256,92,0.932,187,0.032,188,0.04,189,0.032,190,2.07,192,2.795,193,2.99,196,1.801,197,1.216,198,1.718,218,1.384,257,1.576,258,2.226,269,1.576,271,1.858,311,1.868,325,1.576,330,2.86,498,1.576,503,1.384,506,2.86,507,2.86,520,1.801,548,1.801,726,2.795,729,2.07,732,2.86,733,2.86,784,2.86,785,3.547,786,3.547,787,3.547,788,3.547,789,5.008,790,3.547,791,3.547,792,3.547,793,3.547,794,4.403,795,3.547,796,3.547,797,3.547,798,3.547,799,3.547,800,3.547,801,3.547,802,3.547]],["title/dependencies.html",[699,1.906,803,2.272]],["body/dependencies.html",[34,0.052,77,2.046,187,0.037,188,0.043,189,0.037,206,1.381,387,3.25,699,2.352,712,3.25,715,3.836,718,3.25,719,3.25,804,5.503,805,4.029,806,4.029,807,3.836,808,4.029,809,4.029,810,4.029,811,4.029,812,4.029,813,4.029,814,4.029,815,4.029,816,4.029,817,4.029,818,4.029]],["title/miscellaneous/enumerations.html",[819,1.326,820,2.633]],["body/miscellaneous/enumerations.html",[6,0.283,12,0.472,19,1.647,34,0.051,48,1.097,49,1.647,61,1.875,81,1.445,163,1.647,187,0.037,188,0.044,189,0.037,237,1.445,258,1.822,263,2.136,343,3.199,819,2.393,820,3.307,821,4.1]],["title/index.html",[12,0.313,822,2.191]],["body/index.html",[2,2.274,34,0.05,56,2.274,187,0.036,188,0.043,189,0.036,191,1.335,218,2.117,325,2.411,326,2.645,395,2.721,399,2.645,495,2.274,498,1.731,503,2.117,639,3.141,696,3.165,697,3.244,699,2.274,700,3.141,701,3.141,702,3.141,703,3.141,704,3.141,705,3.141,706,3.141,707,3.76,822,3.141,823,3.895,824,3.895]],["title/modules.html",[698,2.513]],["body/modules.html",[34,0.045,187,0.04,188,0.045,189,0.04,697,2.542,698,2.957,807,3.512,825,4.355,826,4.355,827,4.355]],["title/miscellaneous/variables.html",[819,1.326,828,2.633]],["body/miscellaneous/variables.html",[6,0.295,12,0.492,32,2.17,34,0.047,92,1.123,187,0.039,188,0.045,189,0.039,342,2.496,343,2.496,519,2.496,548,2.5,726,2.496,731,2.903,819,2.496,828,3.448,829,4.275]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":271,"title":{},"body":{"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"coverage.html":{}}}],["0.9.1",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":395,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"index.html":{}}}],["1.10.0",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":311,"title":{},"body":{"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"coverage.html":{}}}],["12.1.5",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["12/12",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":657,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["1px",{"_index":439,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["1rem",{"_index":451,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["2",{"_index":639,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{},"index.html":{}}}],["2.5rem",{"_index":470,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["25",{"_index":688,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["25,safari5.1",{"_index":661,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["25rem",{"_index":641,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["2e2e2e",{"_index":486,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["2rem",{"_index":694,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["3",{"_index":823,"title":{},"body":{"index.html":{}}}],["3/3",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["3rem",{"_index":491,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["40",{"_index":473,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["4rem",{"_index":475,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["5",{"_index":682,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["50",{"_index":480,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["50%,#f7f7f7",{"_index":659,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["5rem",{"_index":450,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["6",{"_index":662,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["6.5.2",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":824,"title":{},"body":{"index.html":{}}}],["7/7",{"_index":788,"title":{},"body":{"coverage.html":{}}}],["75rem",{"_index":677,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["8.1.0",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["8/9",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["8rem",{"_index":485,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["9.0.2",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["abort",{"_index":62,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["absolute",{"_index":680,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["accessors",{"_index":20,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadItemComponent.html":{},"classes/UploadModel.html":{}}}],["action",{"_index":482,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["actions",{"_index":675,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["actual_component",{"_index":505,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["add",{"_index":469,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["added",{"_index":378,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["affect",{"_index":239,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["again",{"_index":55,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["align",{"_index":459,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["allowed",{"_index":692,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["angular",{"_index":718,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":387,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"dependencies.html":{}}}],["angular/common",{"_index":712,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":75,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/UploadOptions.html":{}}}],["angular/compiler",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":206,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":715,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":385,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["animate(\".5s",{"_index":397,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["animation",{"_index":361,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["animationend",{"_index":335,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["animationend($event",{"_index":357,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["animationevent",{"_index":358,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["animations",{"_index":391,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["anymore",{"_index":615,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["anything",{"_index":240,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["arguments",{"_index":527,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["array.from(event.datatransfer.files",{"_index":584,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["array.from(this.fileselect.files",{"_index":624,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["array.isarray(validation",{"_index":563,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["assets//scss/variables",{"_index":427,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["assets/fonts",{"_index":426,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["assets/scss/icons",{"_index":428,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["auto",{"_index":435,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["avoid",{"_index":366,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["background",{"_index":484,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["basis",{"_index":448,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["begin",{"_index":545,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["behaviorsubject",{"_index":76,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["behaviorsubject(this.upload",{"_index":97,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["bind",{"_index":229,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["block",{"_index":483,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["body",{"_index":137,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["boolean",{"_index":50,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["bootstrap",{"_index":701,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["border",{"_index":438,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["bottom",{"_index":453,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["bound",{"_index":225,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["box",{"_index":442,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["break",{"_index":152,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["broken",{"_index":543,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["browse",{"_index":827,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":807,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":716,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["browseranimationsmodule",{"_index":714,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["browsers",{"_index":651,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["build",{"_index":125,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["button",{"_index":687,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["byte",{"_index":284,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["bytes",{"_index":297,"title":{},"body":{"interfaces/IDataNode.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["cancel",{"_index":15,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["cancelall",{"_index":510,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["canceled",{"_index":237,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"miscellaneous/enumerations.html":{}}}],["case",{"_index":149,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"interfaces/UploadOptions.html":{}}}],["causes",{"_index":410,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["center",{"_index":461,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["change",{"_index":21,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["changed",{"_index":68,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/UploadOptions.html":{}}}],["child",{"_index":455,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["chrome10",{"_index":660,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["chrome26",{"_index":667,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["class",{"_index":0,"title":{"classes/FileUpload.html":{},"classes/UploadControl.html":{},"classes/UploadModel.html":{}},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/FileUpload.html":{},"classes/UploadControl.html":{},"classes/UploadModel.html":{},"index.html":{}}}],["clean",{"_index":421,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["cleanall",{"_index":511,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["clear",{"_index":625,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["click",{"_index":236,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["click(event",{"_index":528,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["cluster_ngxfileuploadmodule",{"_index":704,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["cluster_ngxfileuploadmodule_declarations",{"_index":705,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["cluster_ngxfileuploadmodule_exports",{"_index":706,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["code",{"_index":175,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["color",{"_index":464,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["colors",{"_index":488,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["column",{"_index":433,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["commonmodule",{"_index":711,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["complete",{"_index":41,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["completed",{"_index":171,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["completes",{"_index":157,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["completeupload",{"_index":180,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["component",{"_index":198,"title":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":500,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["components",{"_index":326,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"index.html":{}}}],["components/ngx",{"_index":720,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["const",{"_index":130,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"classes/UploadControl.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["constructor(file",{"_index":280,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["constructor(fileupload",{"_index":735,"title":{},"body":{"classes/UploadControl.html":{}}}],["constructor(http",{"_index":23,"title":{},"body":{"classes/FileUpload.html":{}}}],["constructor(httpclient",{"_index":516,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["contains",{"_index":47,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["content",{"_index":463,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["context",{"_index":224,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["control",{"_index":209,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["control.ts",{"_index":733,"title":{},"body":{"classes/UploadControl.html":{},"coverage.html":{}}}],["control.ts:13",{"_index":738,"title":{},"body":{"classes/UploadControl.html":{}}}],["control.ts:17",{"_index":739,"title":{},"body":{"classes/UploadControl.html":{}}}],["control.ts:3",{"_index":736,"title":{},"body":{"classes/UploadControl.html":{}}}],["control.ts:9",{"_index":737,"title":{},"body":{"classes/UploadControl.html":{}}}],["coverage",{"_index":784,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":31,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["creates",{"_index":278,"title":{},"body":{"interfaces/IDataNode.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["createupload(file",{"_index":598,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["createuploadbody",{"_index":138,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["ctrl",{"_index":195,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["current",{"_index":40,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["cursor",{"_index":457,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["d2d2d2",{"_index":441,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["dark",{"_index":467,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["dashed",{"_index":471,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["data",{"_index":127,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["declarations",{"_index":700,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["default",{"_index":342,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"classes/UploadControl.html":{},"classes/UploadModel.html":{}}}],["delay",{"_index":389,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["delay(1500",{"_index":414,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["delete",{"_index":179,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["dependencies",{"_index":699,"title":{"dependencies.html":{}},"body":{"modules/NgxFileUploadModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"classes/UploadModel.html":{}}}],["destroyed",{"_index":555,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["diffrent",{"_index":348,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["direction",{"_index":432,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["directive",{"_index":498,"title":{"directives/NgxFileUploadDirective.html":{}},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"coverage.html":{},"index.html":{}}}],["directives",{"_index":502,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["directives/ngx",{"_index":722,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["disabled",{"_index":492,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["display",{"_index":430,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["documentation",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":328,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["done",{"_index":362,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["dont",{"_index":238,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["download",{"_index":54,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["downloads",{"_index":539,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["drag",{"_index":379,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["drag/drop",{"_index":419,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["dragevent",{"_index":533,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["dragover",{"_index":515,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["dragover(event",{"_index":532,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["drop",{"_index":380,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["drop(event",{"_index":536,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["dynamic",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["e4e4e4",{"_index":642,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["ease",{"_index":398,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["edit",{"_index":644,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["editor/#ffffff+50,f7f7f7+100",{"_index":648,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["element",{"_index":497,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["elementref",{"_index":547,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["ellipsis",{"_index":674,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["emits",{"_index":89,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"interfaces/UploadOptions.html":{}}}],["enabled",{"_index":88,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["endpoint",{"_index":524,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["ensure",{"_index":235,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["enter",{"_index":365,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["enum",{"_index":262,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["enumerations",{"_index":820,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":48,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"miscellaneous/enumerations.html":{}}}],["error(iserror",{"_index":299,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["error.message",{"_index":162,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["errors",{"_index":58,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["event",{"_index":108,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/UploadOptions.html":{}}}],["event.loaded",{"_index":167,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["event.preventdefault",{"_index":581,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["event.stoppropagation",{"_index":244,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["event.totaltime",{"_index":404,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["event.type",{"_index":148,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["eventemitter",{"_index":203,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["events",{"_index":136,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/UploadOptions.html":{}}}],["example",{"_index":509,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["export",{"_index":83,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["exportas",{"_index":550,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["exports",{"_index":703,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["f7f7f7",{"_index":655,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["false",{"_index":124,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["fdfdfd",{"_index":649,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["ff16",{"_index":666,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["ff3.6",{"_index":656,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["field",{"_index":345,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["filemodel",{"_index":602,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["filename",{"_index":286,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["files",{"_index":350,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["files.map((file",{"_index":592,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileselect",{"_index":559,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["filesize",{"_index":283,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["filetype",{"_index":289,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["fileuplad",{"_index":723,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["fileuplad.ts",{"_index":507,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"coverage.html":{}}}],["fileuplad.ts:104",{"_index":544,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:111",{"_index":538,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:121",{"_index":541,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:134",{"_index":534,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:143",{"_index":537,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:157",{"_index":529,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:31",{"_index":526,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:41",{"_index":523,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:48",{"_index":525,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:55",{"_index":522,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:75",{"_index":521,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileupload",{"_index":1,"title":{"classes/FileUpload.html":{}},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"classes/UploadControl.html":{},"interfaces/UploadOptions.html":{},"coverage.html":{}}}],["fileupload'},{'name",{"_index":501,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["fileupload(this.httpclient",{"_index":604,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileupload.component",{"_index":724,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["fileupload.component.html",{"_index":333,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.scss",{"_index":332,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.ts",{"_index":330,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"coverage.html":{}}}],["fileupload.component.ts:27",{"_index":346,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.ts:34",{"_index":349,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.ts:41",{"_index":352,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.ts:48",{"_index":344,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.ts:53",{"_index":381,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.ts:68",{"_index":359,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.ts:77",{"_index":377,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.ts:85",{"_index":372,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload/components/ngx",{"_index":192,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"coverage.html":{}}}],["fileupload/directives/ngx",{"_index":506,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"coverage.html":{}}}],["fileupload/model/upload.ts",{"_index":258,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["fileupload/model/upload.ts:105",{"_index":760,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:112",{"_index":758,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:119",{"_index":764,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:126",{"_index":762,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:133",{"_index":768,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:140",{"_index":766,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:147",{"_index":772,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:154",{"_index":770,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:158",{"_index":776,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:165",{"_index":774,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:169",{"_index":780,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:173",{"_index":778,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:177",{"_index":782,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:186",{"_index":744,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:23",{"_index":261,"title":{},"body":{"interfaces/IDataNode.html":{}}}],["fileupload/model/upload.ts:51",{"_index":743,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:63",{"_index":746,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:70",{"_index":748,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:77",{"_index":750,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:84",{"_index":752,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:91",{"_index":756,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:98",{"_index":754,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/ngx",{"_index":708,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["fileupload/services/file",{"_index":7,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{},"coverage.html":{}}}],["fileupload/services/upload",{"_index":732,"title":{},"body":{"classes/UploadControl.html":{},"coverage.html":{}}}],["fileupload/services/validation.ts",{"_index":726,"title":{},"body":{"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fileupload/services/validation.ts:11",{"_index":728,"title":{},"body":{"interfaces/NgxFileUploadValidator.html":{}}}],["fileuploaditemcontext",{"_index":190,"title":{"interfaces/FileUploadItemContext.html":{}},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{},"coverage.html":{}}}],["fill",{"_index":614,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["filter",{"_index":79,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["first",{"_index":490,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["flex",{"_index":431,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["font",{"_index":424,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["footer",{"_index":481,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["form",{"_index":126,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["formdata",{"_index":87,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["formdata.append(label",{"_index":142,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["formdataname",{"_index":339,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["fromstate",{"_index":367,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["get($colors",{"_index":466,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["get($map",{"_index":487,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["getchange",{"_index":64,"title":{},"body":{"classes/FileUpload.html":{}}}],["geterror",{"_index":765,"title":{},"body":{"classes/UploadModel.html":{}}}],["getfile",{"_index":745,"title":{},"body":{"classes/UploadModel.html":{}}}],["getfilename",{"_index":749,"title":{},"body":{"classes/UploadModel.html":{}}}],["getfilesize",{"_index":747,"title":{},"body":{"classes/UploadModel.html":{}}}],["getfiletype",{"_index":751,"title":{},"body":{"classes/UploadModel.html":{}}}],["getisvalid",{"_index":773,"title":{},"body":{"classes/UploadModel.html":{}}}],["getmessage",{"_index":777,"title":{},"body":{"classes/UploadModel.html":{}}}],["getprogress",{"_index":781,"title":{},"body":{"classes/UploadModel.html":{}}}],["getresponse",{"_index":753,"title":{},"body":{"classes/UploadModel.html":{}}}],["gets",{"_index":554,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["getstate",{"_index":757,"title":{},"body":{"classes/UploadModel.html":{}}}],["getsuccess",{"_index":769,"title":{},"body":{"classes/UploadModel.html":{}}}],["getuploaded",{"_index":761,"title":{},"body":{"classes/UploadModel.html":{}}}],["gradient",{"_index":646,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["gradient(to",{"_index":663,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["gradient(top",{"_index":654,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["green",{"_index":693,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["grow",{"_index":447,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["handle",{"_index":145,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["handlefileselect(files",{"_index":591,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["handlehttperror(error",{"_index":161,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["handlehttpevent(event",{"_index":146,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["handleprogress(event",{"_index":164,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["handleresponse(res",{"_index":172,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["handlesent",{"_index":169,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["handleuploadchange",{"_index":336,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["handleuploadchange(upload",{"_index":371,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["haserror",{"_index":16,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["header",{"_index":670,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["height",{"_index":477,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["here",{"_index":420,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["hidden",{"_index":445,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["host",{"_index":429,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["hostlistener",{"_index":205,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["hostlistener(\"click",{"_index":241,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["hostlistener(\"dragover",{"_index":579,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["hostlistener(\"drop",{"_index":582,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["hostlisteners",{"_index":514,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["html",{"_index":496,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["htmlinputelement",{"_index":560,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["http",{"_index":38,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["httpclient",{"_index":24,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["httpclientmodule",{"_index":713,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["httperrorresponse",{"_index":74,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["httpevent",{"_index":70,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["httpeventtype",{"_index":71,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["httpeventtype.response",{"_index":155,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["httpeventtype.sent",{"_index":150,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["httpeventtype.uploadprogress",{"_index":153,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["httpprogressevent",{"_index":72,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["httpresponse",{"_index":73,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["https://colorzilla.com/gradient",{"_index":647,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["https://github.com/angular/angular/issues/23535",{"_index":403,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["icon",{"_index":468,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["icons",{"_index":423,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["idatanode",{"_index":257,"title":{"interfaces/IDataNode.html":{}},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"coverage.html":{}}}],["identifier",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":415,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["ie10",{"_index":665,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["implements",{"_index":219,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["import",{"_index":69,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"classes/UploadControl.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["imports",{"_index":725,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":259,"title":{},"body":{"interfaces/IDataNode.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["inheritdoc",{"_index":251,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["inject",{"_index":546,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["inject(ngx_fileupload_validator",{"_index":561,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["injected",{"_index":556,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["injectiontoken",{"_index":730,"title":{},"body":{"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{}}}],["injectiontoken(\"upload",{"_index":731,"title":{},"body":{"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{},"miscellaneous/variables.html":{}}}],["inner",{"_index":686,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["input",{"_index":200,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["input(\"ngxfileupload",{"_index":552,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["input[type=\"file",{"_index":622,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["inputfield",{"_index":620,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["inputs",{"_index":338,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["instance",{"_index":279,"title":{},"body":{"interfaces/IDataNode.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["interface",{"_index":84,"title":{"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["interfaces",{"_index":191,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"index.html":{}}}],["invalid",{"_index":49,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"miscellaneous/enumerations.html":{}}}],["iscancelable",{"_index":117,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["iserror",{"_index":301,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["isinvalid",{"_index":17,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["issuccess",{"_index":266,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["isvalid",{"_index":267,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["isvalid(valid",{"_index":305,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["item",{"_index":213,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["item.component",{"_index":721,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["item.component.html",{"_index":215,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["item.component.scss",{"_index":217,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["item.component.ts",{"_index":193,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:25",{"_index":634,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["item.component.ts:31",{"_index":631,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["item.component.ts:36",{"_index":633,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["item.component.ts:47",{"_index":630,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["item.component.ts:60",{"_index":632,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["item.component.ts:69",{"_index":629,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["items",{"_index":460,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["itemtemplate",{"_index":340,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["itemtpl",{"_index":223,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["justify",{"_index":462,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["key",{"_index":260,"title":{},"body":{"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["label",{"_index":140,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/UploadOptions.html":{}}}],["last",{"_index":454,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["leave",{"_index":370,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["left",{"_index":683,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["legend",{"_index":495,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["lib/.../upload.ts",{"_index":821,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lib/.../validation.ts",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/ngx",{"_index":6,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["light",{"_index":489,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["lighten(#2e2e2e",{"_index":493,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["lighten(#3e3e3e",{"_index":494,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["lighten(map",{"_index":472,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["line",{"_index":476,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["linear",{"_index":653,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["list",{"_index":409,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["listen",{"_index":595,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["listener",{"_index":530,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["literal",{"_index":783,"title":{},"body":{"interfaces/UploadOptions.html":{}}}],["ln",{"_index":617,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["manager",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["mandatory",{"_index":351,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["map",{"_index":465,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["margin",{"_index":452,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["matching",{"_index":188,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["math.round(progress",{"_index":313,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["means",{"_index":369,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["message",{"_index":268,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["message(msg",{"_index":307,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["metadata",{"_index":331,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/NgxFileUploadValidator.html":{},"classes/UploadControl.html":{},"classes/UploadModel.html":{}}}],["mime",{"_index":288,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["miscellaneous",{"_index":819,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":316,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["model/upload",{"_index":82,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/UploadOptions.html":{}}}],["module",{"_index":696,"title":{"modules/NgxFileUploadModule.html":{}},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["modules",{"_index":698,"title":{"modules.html":{}},"body":{"modules/NgxFileUploadModule.html":{},"modules.html":{}}}],["mouseevent",{"_index":243,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["move",{"_index":315,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["moz",{"_index":652,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["msg",{"_index":309,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["new",{"_index":92,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":107,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/UploadOptions.html":{}}}],["ngmathpipesmodule",{"_index":717,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["ngmodule",{"_index":710,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["ngondestroy",{"_index":567,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["ngoninit",{"_index":252,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["ngx",{"_index":212,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["ngx_fileupload_validator",{"_index":548,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxfileupload",{"_index":504,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["ngxfileuploadcomponent",{"_index":325,"title":{"components/NgxFileUploadComponent.html":{}},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"coverage.html":{},"index.html":{}}}],["ngxfileuploaddirective",{"_index":503,"title":{"directives/NgxFileUploadDirective.html":{}},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"coverage.html":{},"index.html":{}}}],["ngxfileuploaditemcomponent",{"_index":218,"title":{"components/NgxFileUploadItemComponent.html":{}},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"coverage.html":{},"index.html":{}}}],["ngxfileuploadmodule",{"_index":697,"title":{"modules/NgxFileUploadModule.html":{}},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{},"modules.html":{}}}],["ngxfileuploadref",{"_index":551,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["ngxfileuploadvalidator",{"_index":520,"title":{"interfaces/NgxFileUploadValidator.html":{}},"body":{"directives/NgxFileUploadDirective.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["none",{"_index":690,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["notification",{"_index":184,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/UploadOptions.html":{}}}],["notified",{"_index":531,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["notify",{"_index":67,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["notifyobservers",{"_index":185,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["nowrap",{"_index":673,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["null",{"_index":113,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["number",{"_index":264,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["object",{"_index":356,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["observable",{"_index":66,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["observe",{"_index":135,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["observers",{"_index":94,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["of(upload).pipe",{"_index":413,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["old",{"_index":650,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["once",{"_index":540,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["onclick(event",{"_index":586,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["ondestroy",{"_index":508,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["onfiledragover(event",{"_index":580,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["onfiledrop(event",{"_index":583,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["onfileselect(event",{"_index":623,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["oninit",{"_index":199,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["onitemclick(event",{"_index":242,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["onuploadsadd",{"_index":337,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["onuploadsadd(uploads",{"_index":376,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["opacity",{"_index":394,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["opera12",{"_index":668,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["optional",{"_index":37,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"classes/UploadControl.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["options",{"_index":27,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["otherwise",{"_index":626,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["out",{"_index":399,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["outline",{"_index":689,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["output",{"_index":204,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["outputs",{"_index":513,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["over",{"_index":535,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["overflow",{"_index":434,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["overview",{"_index":822,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":803,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":449,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"classes/UploadControl.html":{},"classes/UploadModel.html":{}}}],["pass",{"_index":347,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["path",{"_index":425,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["permalink",{"_index":643,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["pipe(takeuntil(this.destroyed",{"_index":609,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["pipes",{"_index":719,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"dependencies.html":{}}}],["plain",{"_index":355,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["pointer",{"_index":458,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["position",{"_index":678,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["post",{"_index":353,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["pre",{"_index":612,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["prevalidateupload(upload",{"_index":616,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["private",{"_index":91,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["progress",{"_index":163,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"miscellaneous/enumerations.html":{}}}],["progressbar",{"_index":676,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["properties",{"_index":194,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["providers",{"_index":702,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["public",{"_index":14,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["push",{"_index":373,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["queue",{"_index":375,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["queued",{"_index":61,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"miscellaneous/enumerations.html":{}}}],["radius",{"_index":479,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["raw",{"_index":282,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["red",{"_index":695,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["register",{"_index":621,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["relative",{"_index":679,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["remove",{"_index":374,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["removeupload(upload",{"_index":412,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["render",{"_index":222,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["rendered",{"_index":226,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["renderer",{"_index":517,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["renderer2",{"_index":518,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["reportprogress",{"_index":134,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["repository",{"_index":597,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["represents",{"_index":10,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["request",{"_index":63,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["rerendering",{"_index":411,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["res.body",{"_index":177,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["res.ok",{"_index":173,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["res.status",{"_index":176,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["reset",{"_index":56,"title":{},"body":{"classes/FileUpload.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/UploadOptions.html":{},"index.html":{}}}],["response",{"_index":269,"title":{"interfaces/Response.html":{}},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"coverage.html":{}}}],["response(response",{"_index":291,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["restart",{"_index":53,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["result",{"_index":187,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":189,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":18,"title":{},"body":{"classes/FileUpload.html":{},"classes/UploadControl.html":{},"interfaces/UploadOptions.html":{}}}],["return",{"_index":122,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["returns",{"_index":43,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["reverse",{"_index":437,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["right",{"_index":691,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["row",{"_index":436,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["rxjs",{"_index":77,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":80,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["safari7",{"_index":669,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["same",{"_index":160,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["search",{"_index":542,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["see",{"_index":402,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["selected",{"_index":588,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["selector",{"_index":211,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["send",{"_index":128,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["sends",{"_index":401,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["server",{"_index":60,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["service",{"_index":32,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"miscellaneous/variables.html":{}}}],["services/file",{"_index":207,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["services/upload",{"_index":208,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["services/validation",{"_index":549,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["set",{"_index":230,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["seterror(iserror",{"_index":767,"title":{},"body":{"classes/UploadModel.html":{}}}],["setisvalid(valid",{"_index":775,"title":{},"body":{"classes/UploadModel.html":{}}}],["setmessage(msg",{"_index":779,"title":{},"body":{"classes/UploadModel.html":{}}}],["setresponse(response",{"_index":755,"title":{},"body":{"classes/UploadModel.html":{}}}],["sets",{"_index":227,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["setstate(state",{"_index":759,"title":{},"body":{"classes/UploadModel.html":{}}}],["setsuccess(issuccess",{"_index":771,"title":{},"body":{"classes/UploadModel.html":{}}}],["settemplate(tpl",{"_index":636,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["setupload(fileupload",{"_index":635,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["setuploaded(bytes",{"_index":763,"title":{},"body":{"classes/UploadModel.html":{}}}],["share",{"_index":645,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["shrink",{"_index":446,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["single",{"_index":11,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["size",{"_index":265,"title":{},"body":{"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["sizing",{"_index":443,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["skipped",{"_index":364,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["solid",{"_index":440,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["something",{"_index":95,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["space",{"_index":672,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["start",{"_index":19,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":168,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["state",{"_index":57,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["state(\"visible",{"_index":393,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["state(state",{"_index":293,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["statements",{"_index":787,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":246,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["stop",{"_index":734,"title":{},"body":{"classes/UploadControl.html":{}}}],["stopped",{"_index":90,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["stream",{"_index":93,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["streams",{"_index":178,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["string",{"_index":86,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["style",{"_index":384,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["styles",{"_index":327,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["styleurls",{"_index":216,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["sub",{"_index":607,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["sub.unsubscribe",{"_index":611,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["subject",{"_index":42,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["subjects",{"_index":400,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["subscribe",{"_index":106,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["subscribtions",{"_index":553,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["success",{"_index":304,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["success(issuccess",{"_index":302,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["successful",{"_index":298,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["support",{"_index":825,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":826,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":147,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["switchmap",{"_index":390,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["table",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":388,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["takeuntil",{"_index":78,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["takeuntil(this.cancel",{"_index":104,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["template",{"_index":220,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["template(tpl",{"_index":247,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["templateref",{"_index":202,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["templateurl",{"_index":214,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["text",{"_index":478,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["this.add",{"_index":564,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.add.emit(uploads",{"_index":594,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.animation$.next(true",{"_index":405,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["this.animation$.pipe(take(1",{"_index":418,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["this.cancel",{"_index":183,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.cancel$.complete",{"_index":182,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.cancel$.next(true",{"_index":120,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.changed.emit(upload",{"_index":256,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["this.completeupload",{"_index":121,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.context",{"_index":233,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["this.context.data",{"_index":254,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["this.createfieldinputfield",{"_index":566,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.createupload(file",{"_index":593,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.createuploadbody",{"_index":132,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.destroyed$.complete",{"_index":570,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.destroyed$.next(true",{"_index":568,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.error",{"_index":321,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.file.name",{"_index":287,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.file.size",{"_index":285,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.file.type",{"_index":290,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.filename",{"_index":319,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.fileselect",{"_index":565,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.fileselect.click",{"_index":587,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.fileselect.files",{"_index":628,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.fileselect.value",{"_index":627,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.filesize",{"_index":312,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.fileupload",{"_index":232,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["this.fileupload.cancel",{"_index":742,"title":{},"body":{"classes/UploadControl.html":{}}}],["this.fileupload.change.subscribe",{"_index":253,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["this.fileupload.retry",{"_index":740,"title":{},"body":{"classes/UploadControl.html":{}}}],["this.fileupload.start",{"_index":741,"title":{},"body":{"classes/UploadControl.html":{}}}],["this.formdataname",{"_index":601,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.handlefileselect(files",{"_index":585,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.handlehttperror(error",{"_index":110,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.handlehttpevent(event",{"_index":109,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.handleprogress(event",{"_index":154,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.handleresponse(event",{"_index":156,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.handlesent",{"_index":151,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.http.post(this.options.url",{"_index":133,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.isvalid",{"_index":323,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.itemtpl",{"_index":250,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["this.message",{"_index":324,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.notifyobservers",{"_index":119,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.onfileselect(e",{"_index":619,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.options",{"_index":98,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.options.formdata.enabled",{"_index":139,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.options.formdata.name",{"_index":141,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.prevalidateupload(filemodel",{"_index":605,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.progress",{"_index":320,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.removeupload(fileupload",{"_index":408,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["this.start",{"_index":116,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.state",{"_index":318,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.success",{"_index":322,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.upload",{"_index":96,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload$.asobservable",{"_index":123,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload$.complete",{"_index":181,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload$.next(this.upload",{"_index":186,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.error",{"_index":112,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.file",{"_index":143,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.filename",{"_index":144,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.isvalid",{"_index":102,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.message",{"_index":115,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.response",{"_index":174,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.state",{"_index":100,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.success",{"_index":114,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.uploaded",{"_index":166,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.uploaded",{"_index":310,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.uploadedsize",{"_index":296,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.uploadedstate",{"_index":294,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.uploaderror",{"_index":300,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.uploadfile",{"_index":281,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.uploadfile().pipe",{"_index":103,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.uploadmessage",{"_index":308,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.uploadresponse",{"_index":292,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.uploads",{"_index":569,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.uploads.foreach((upload",{"_index":571,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.uploads.indexof(upload",{"_index":416,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["this.uploads.length",{"_index":573,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.uploads.push(...uploads",{"_index":406,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["this.uploads.push(upload",{"_index":606,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.uploads.splice(idx",{"_index":417,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["this.uploads.splice(this.uploads.indexof(upload",{"_index":610,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.uploads[i",{"_index":575,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.uploads[i].cancel",{"_index":574,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.uploadsuccess",{"_index":303,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.uploadvalid",{"_index":306,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.url",{"_index":599,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.useformdata",{"_index":600,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.validators",{"_index":562,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.validators.length",{"_index":618,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["time",{"_index":363,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["todo",{"_index":314,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["tojson",{"_index":317,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["tpl",{"_index":248,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["transform",{"_index":684,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["transition",{"_index":386,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["transition(\":leave",{"_index":396,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["translatex",{"_index":685,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["tree",{"_index":329,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["trigger",{"_index":383,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["trigger(\"removeupload",{"_index":392,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["triggers",{"_index":360,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["true",{"_index":46,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["try",{"_index":159,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["tslib",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":36,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["type=\"file",{"_index":590,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["undefined",{"_index":249,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["up",{"_index":422,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["uplaod",{"_index":596,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["upload",{"_index":25,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["upload(fileupload",{"_index":231,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["upload.cancel",{"_index":578,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["upload.change",{"_index":608,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["upload.haserror",{"_index":577,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["upload.isinvalid",{"_index":576,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["upload.module.ts",{"_index":709,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["upload.start",{"_index":572,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["upload.state",{"_index":407,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["upload.tojson",{"_index":255,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["upload.ts",{"_index":8,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{},"coverage.html":{}}}],["upload.ts:105",{"_index":45,"title":{},"body":{"classes/FileUpload.html":{}}}],["upload.ts:109",{"_index":51,"title":{},"body":{"classes/FileUpload.html":{}}}],["upload.ts:33",{"_index":30,"title":{},"body":{"classes/FileUpload.html":{}}}],["upload.ts:51",{"_index":59,"title":{},"body":{"classes/FileUpload.html":{}}}],["upload.ts:69",{"_index":52,"title":{},"body":{"classes/FileUpload.html":{}}}],["upload.ts:82",{"_index":39,"title":{},"body":{"classes/FileUpload.html":{}}}],["upload.ts:98",{"_index":65,"title":{},"body":{"classes/FileUpload.html":{}}}],["uploadall",{"_index":512,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["uploadbody",{"_index":131,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["uploadcontrol",{"_index":196,"title":{"classes/UploadControl.html":{}},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{},"classes/UploadControl.html":{},"coverage.html":{}}}],["uploadcontrol(fileupload",{"_index":234,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["uploaddata",{"_index":197,"title":{"interfaces/UploadData.html":{}},"body":{"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"coverage.html":{}}}],["uploaddata.message",{"_index":640,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["uploaddata.name",{"_index":637,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["uploaddata.size",{"_index":638,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["uploaded",{"_index":263,"title":{},"body":{"interfaces/IDataNode.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"miscellaneous/enumerations.html":{}}}],["uploaded(bytes",{"_index":295,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["uploadedsize",{"_index":270,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["uploadedstate",{"_index":272,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["uploaderror",{"_index":273,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["uploades",{"_index":382,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["uploadfile",{"_index":129,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["uploadmessage",{"_index":277,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["uploadmodel",{"_index":26,"title":{"classes/UploadModel.html":{}},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"coverage.html":{}}}],["uploadmodel(file",{"_index":603,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["uploadoptions",{"_index":28,"title":{"interfaces/UploadOptions.html":{}},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{},"coverage.html":{}}}],["uploadresponse",{"_index":275,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["uploads",{"_index":334,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["uploadstate",{"_index":81,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"miscellaneous/enumerations.html":{}}}],["uploadstate.canceled",{"_index":105,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"interfaces/UploadOptions.html":{}}}],["uploadstate.error",{"_index":111,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["uploadstate.progress",{"_index":165,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["uploadstate.queued",{"_index":101,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["uploadstate.start",{"_index":170,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["uploadstate.uploaded",{"_index":118,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"interfaces/UploadOptions.html":{}}}],["uploadsuccess",{"_index":274,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["uploadvalid",{"_index":276,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["url",{"_index":85,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["use",{"_index":354,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["used",{"_index":221,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["useformdata",{"_index":341,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["user",{"_index":158,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["valid",{"_index":99,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["validate",{"_index":613,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"interfaces/NgxFileUploadValidator.html":{}}}],["validate(file",{"_index":727,"title":{},"body":{"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{}}}],["validation",{"_index":519,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{},"miscellaneous/variables.html":{}}}],["validationresult",{"_index":729,"title":{"interfaces/ValidationResult.html":{}},"body":{"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["validators",{"_index":557,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["value",{"_index":343,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":499,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["variable",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":828,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":589,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["view",{"_index":210,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["viewchild",{"_index":201,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["viewchild(\"defaultuploaditem",{"_index":245,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["visible",{"_index":368,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["void",{"_index":44,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"classes/UploadControl.html":{},"classes/UploadModel.html":{}}}],["w3c",{"_index":664,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["want",{"_index":228,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["webdriver",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["webkit",{"_index":658,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["white",{"_index":671,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["width",{"_index":474,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["window",{"_index":558,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["wrapper",{"_index":456,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["x",{"_index":444,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["z",{"_index":681,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["zone.js",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":707,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/FileUpload.html":{"url":"classes/FileUpload.html","title":"class - FileUpload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileUpload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/services/file-upload.ts\n        \n\n            \n                Description\n            \n            \n                represents a single fileupload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                hasError\n                            \n                            \n                                    Public\n                                isInvalid\n                            \n                            \n                                    Public\n                                retry\n                            \n                            \n                                    Public\n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    change\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(http: HttpClient, upload: UploadModel, options: UploadOptions)\n                    \n                \n                        \n                            \n                                Defined in lib/ngx-fileupload/services/file-upload.ts:33\n                            \n                        \n\n                \n                    \n                            create FileUpload service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        upload\n                                                  \n                                                        \n                                                                        UploadModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        UploadOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/file-upload.ts:82\n                \n            \n\n\n            \n                \n                    cancel current file upload, this will complete change subject\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasError()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/file-upload.ts:105\n                \n            \n\n\n            \n                \n                    returns true if upload contains an error or is invalid\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isInvalid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isInvalid()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/file-upload.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            retry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    retry()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/file-upload.ts:69\n                \n            \n\n\n            \n                \n                    restart download again\nreset state, and reset errors\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/file-upload.ts:51\n                \n            \n\n\n            \n                \n                    upload file to server but only\nif file is not queued, abort request on cancel\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n\n                \n                    \n                        getchange()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/services/file-upload.ts:98\n                                \n                            \n                    \n                        \n                                returns observable which notify if file upload state\nhas been changed\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpEvent, HttpEventType, HttpProgressEvent, HttpResponse, HttpErrorResponse } from \"@angular/common/http\";\nimport { Subject, BehaviorSubject, Observable } from \"rxjs\";\nimport { takeUntil, filter } from \"rxjs/operators\";\nimport { UploadModel, UploadState} from \"../model/upload\";\n\nexport interface UploadOptions {\n    url: string;\n\n    formData?: {\n        enabled: boolean;\n        name?: string;\n    };\n}\n\n/**\n * represents a single fileupload\n */\nexport class FileUpload {\n\n    /**\n     * if cancel$ emits true, current upload will stopped\n     */\n    private cancel$: Subject = new Subject();\n\n    /**\n     * upload stream to notify observers if something has been changed\n     */\n    private upload$: BehaviorSubject;\n\n    private options: UploadOptions = {\n        url: \"\",\n        formData: { enabled: true, name: \"file\" }\n    };\n\n    /**\n     * create FileUpload service\n     */\n    public constructor(\n        private http: HttpClient,\n        private upload: UploadModel,\n        options: UploadOptions\n    ) {\n        this.upload$ = new BehaviorSubject(this.upload);\n        this.options = {...this.options, ...options};\n    }\n\n    /**\n     * upload file to server but only\n     * if file is not queued, abort request on cancel\n     */\n    public start() {\n        /** only start upload if state is not queued and is valid */\n        if (this.upload.state === UploadState.QUEUED && this.upload.isValid) {\n            this.uploadFile().pipe(\n                takeUntil(this.cancel$),\n                filter(() => this.upload.state !== UploadState.CANCELED)\n            )\n            .subscribe({\n                next: (event: HttpEvent) => this.handleHttpEvent(event),\n                error: (error: HttpErrorResponse) => this.handleHttpError(error)\n            });\n        }\n    }\n\n    /**\n     * restart download again\n     * reset state, and reset errors\n     */\n    public retry() {\n        if (this.upload.state === UploadState.ERROR) {\n            this.upload.state   = UploadState.QUEUED;\n            this.upload.error   = null;\n            this.upload.success = null;\n            this.upload.message = \"\";\n            this.start();\n        }\n    }\n\n    /**\n     * cancel current file upload, this will complete change subject\n     */\n    public cancel() {\n        let isCancelAble = this.upload.state !== UploadState.CANCELED;\n        isCancelAble     = isCancelAble && this.upload.state !== UploadState.UPLOADED;\n\n        if (isCancelAble) {\n            this.upload.state = UploadState.CANCELED;\n            this.notifyObservers();\n            this.cancel$.next(true);\n            this.completeUpload();\n        }\n    }\n\n    /**\n     * returns observable which notify if file upload state\n     * has been changed\n     */\n    public get change(): Observable {\n        return this.upload$.asObservable();\n    }\n\n    /**\n     * returns true if upload contains an error or is invalid\n     */\n    public hasError(): boolean {\n        return this.upload.error;\n    }\n\n    public isInvalid(): boolean {\n        return this.upload.isValid === false;\n    }\n\n    /**\n     * build form data and send request to server\n     */\n    private uploadFile(): Observable> {\n\n        const uploadBody = this.createUploadBody();\n        return this.http.post(this.options.url, uploadBody, {\n            reportProgress: true,\n            observe: \"events\"\n        });\n    }\n\n    /**\n     * create upload body which will should be send\n     */\n    private createUploadBody(): FormData | File {\n        if (this.options.formData.enabled) {\n            const formData = new FormData();\n            const label    = this.options.formData.name;\n            formData.append(label, this.upload.file, this.upload.fileName);\n            return formData;\n        }\n        return this.upload.file;\n    }\n\n    /**\n     * handle all http events\n     */\n    private handleHttpEvent(event: HttpEvent) {\n        switch (event.type) {\n            case HttpEventType.Sent: this.handleSent(); break;\n            case HttpEventType.UploadProgress: this.handleProgress(event); break;\n            case HttpEventType.Response: this.handleResponse(event); break;\n        }\n    }\n\n    /**\n     * got http error, this not completes the upload\n     * since the user can try do the same upload again\n     */\n    private handleHttpError(error: HttpErrorResponse) {\n        this.upload.state = UploadState.ERROR;\n        this.upload.error = true;\n        this.upload.message = error.message;\n        this.notifyObservers();\n    }\n\n    /**\n     * handle file upload in progress\n     */\n    private handleProgress(event: HttpProgressEvent) {\n        this.upload.state = UploadState.PROGRESS;\n        this.upload.uploaded = event.loaded;\n        this.notifyObservers();\n    }\n\n    /**\n     * upload has been started\n     */\n    private handleSent() {\n        this.upload.state = UploadState.START;\n        this.notifyObservers();\n    }\n\n    /**\n     * upload has been completed\n     */\n    private handleResponse(res: HttpResponse) {\n\n        this.upload.state   = UploadState.UPLOADED;\n        this.upload.success = res.ok;\n        this.upload.response = {\n            code: res.status,\n            body: res.body\n        };\n\n        this.notifyObservers();\n        this.completeUpload();\n    }\n\n    /**\n     * complete download, complete streams and delete them\n     * notify observers\n     */\n    private completeUpload() {\n        this.upload$.complete();\n        this.cancel$.complete();\n        this.cancel$ = null;\n        this.upload$ = null;\n    }\n\n    /**\n     * send notification to observers\n     */\n    private notifyObservers() {\n        this.upload$.next(this.upload);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileUploadItemContext.html":{"url":"interfaces/FileUploadItemContext.html","title":"interface - FileUploadItemContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileUploadItemContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/components/ngx-fileupload-item.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ctrl\n                                \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ctrl\n                                    \n                                \n                                \n                                    \n                                        ctrl:         UploadControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UploadControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         UploadData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UploadData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, ViewChild, TemplateRef, EventEmitter, Output, HostListener } from \"@angular/core\";\nimport { FileUpload } from \"../services/file-upload\";\nimport { UploadControl } from \"../services/upload-control\";\nimport { UploadModel, UploadData } from \"../model/upload\";\n\nexport interface FileUploadItemContext {\n    data: UploadData;\n    ctrl: UploadControl;\n}\n\n/**\n * view for upload\n */\n@Component({\n    selector: \"ngx-fileupload-item\",\n    templateUrl: \"ngx-fileupload-item.component.html\",\n    styleUrls: [\"./ngx-fileupload-item.component.scss\"],\n})\nexport class NgxFileUploadItemComponent implements OnInit {\n\n    /**\n     * item template which should used to render upload data\n     */\n    public itemTpl: TemplateRef;\n\n    /**\n     * upload state has been changed\n     */\n    @Output()\n    public changed: EventEmitter = new EventEmitter();\n\n    /**\n     * template context which is bound to rendered template\n     */\n    public context: FileUploadItemContext;\n\n    /**\n     * file upload which should bound to this view\n     */\n    private fileUpload: FileUpload;\n\n    /**\n     * sets upload we want to bind with current view\n     */\n    @Input()\n    public set upload(fileUpload: FileUpload) {\n        this.fileUpload = fileUpload;\n        this.context = {\n            data: null,\n            ctrl: new UploadControl(fileUpload)\n        };\n    }\n\n    /**\n     * ensure all click events will canceled\n     * so we dont affect anything other\n     */\n    @HostListener(\"click\", [\"$event\"])\n    public onItemClick(event: MouseEvent) {\n        event.stopPropagation();\n    }\n\n    /**\n     * sets template which should used to render file data\n     */\n    @ViewChild(\"defaultUploadItem\", {static: true})\n    @Input()\n    public set template(tpl: TemplateRef) {\n        if (tpl !== undefined) {\n            this.itemTpl = tpl;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.fileUpload.change.subscribe({\n            next: (upload: UploadModel) => {\n                this.context.data = upload.toJson();\n                this.changed.emit(upload);\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDataNode.html":{"url":"interfaces/IDataNode.html","title":"interface - IDataNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDataNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/model/upload.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in lib/ngx-fileupload/model/upload.ts:23\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export enum UploadState {\n    QUEUED    = \"queued\",\n    START     = \"start\",\n    PROGRESS  = \"progress\",\n    UPLOADED  = \"uploaded\",\n    CANCELED  = \"canceled\",\n    ERROR     = \"error\",\n    INVALID   = \"invalid\"\n}\n\nexport interface UploadData {\n    state: UploadState;\n    uploaded: number;\n    size: number;\n    name: string;\n    progress: number;\n    hasError: boolean;\n    isSuccess: boolean;\n    isValid: boolean;\n    message: string;\n}\n\nexport interface IDataNode {\n    [key: string]: any;\n}\n\ninterface Response {\n    code: number;\n    body: IDataNode;\n}\n\n/**\n * Represents a file which will be uploaded\n */\nexport class UploadModel {\n\n    private uploadFile: File;\n\n    private uploadedSize = 0;\n\n    private uploadedState: UploadState = UploadState.QUEUED;\n\n    private uploadError = false;\n\n    private uploadSuccess = false;\n\n    private uploadResponse: Response = null;\n\n    private uploadValid = true;\n\n    private uploadMessage = \"\";\n\n    /**\n     * Creates an instance of UploadFile.\n     */\n    public constructor(file: File) {\n        this.uploadFile = file;\n    }\n\n    /**\n     * get raw file\n     */\n    public get file(): File {\n        return this.uploadFile;\n    }\n\n    /**\n     * returns filesize in byte\n     */\n    public get fileSize(): number {\n        return this.file.size;\n    }\n\n    /**\n     * returns filename\n     */\n    public get fileName(): string {\n        return this.file.name;\n    }\n\n    /**\n     * returns mime type of file\n     */\n    public get fileType(): string {\n        return this.file.type;\n    }\n\n    /**\n     * set response data if upload has been completed\n     */\n    public set response(response: Response) {\n        this.uploadResponse = response;\n    }\n\n    /**\n     * get response data if upload has been completed\n     */\n    public get response(): Response {\n        return this.uploadResponse;\n    }\n\n    /**\n     * set current upload state\n     */\n    public set state(state: UploadState) {\n        this.uploadedState = state;\n    }\n\n    /**\n     * get current upload state\n     */\n    public get state(): UploadState {\n        return this.uploadedState;\n    }\n\n    /**\n     * set uploaded size\n     */\n    public set uploaded(bytes: number) {\n        this.uploadedSize = bytes;\n    }\n\n    /**\n     * get uploaded size\n     */\n    public get uploaded(): number {\n        return this.uploadedSize;\n    }\n\n    /**\n     * set upload was successful\n     */\n    public set error(isError: boolean) {\n        this.uploadError = isError;\n    }\n\n    /**\n     * get upload was successful\n     */\n    public get error(): boolean {\n        return this.uploadError;\n    }\n\n    /**\n     * set upload was successful\n     */\n    public set success(isSuccess: boolean) {\n        this.uploadSuccess = isSuccess;\n    }\n\n    /**\n     * get upload was successful\n     */\n    public get success(): boolean {\n        return this.uploadSuccess;\n    }\n\n    public set isValid(valid: boolean) {\n        this.uploadValid = valid;\n    }\n\n    /**\n     * returns true if upload is valid\n     */\n    public get isValid(): boolean {\n        return this.uploadValid;\n    }\n\n    public set message(msg: string) {\n        this.uploadMessage = msg;\n    }\n\n    public get message(): string {\n        return this.uploadMessage;\n    }\n\n    public get progress(): number {\n        const progress = this.uploaded * 100 / this.fileSize;\n        return Math.round(progress > 100 ? 100 : progress);\n    }\n\n    /**\n     * return file upload data\n     * @todo move to model\n     */\n    public toJson(): UploadData {\n        return {\n            state     : this.state,\n            uploaded  : this.uploaded,\n            size      : this.fileSize,\n            name      : this.fileName,\n            progress  : this.progress,\n            hasError  : this.error,\n            isSuccess : this.success,\n            isValid   : this.isValid,\n            message   : this.message\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxFileUploadComponent.html":{"url":"components/NgxFileUploadComponent.html","title":"component - NgxFileUploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxFileUploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    lib/ngx-fileupload/components/ngx-fileupload.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-fileupload\n            \n\n            \n                styleUrls\n                ./ngx-fileupload.component.scss\n            \n\n\n\n            \n                templateUrl\n                ngx-fileupload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                uploads\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationEnd\n                            \n                            \n                                    Public\n                                handleUploadChange\n                            \n                            \n                                    Public\n                                onUploadsAdd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formDataName\n                            \n                            \n                                itemTemplate\n                            \n                            \n                                url\n                            \n                            \n                                useFormData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formDataName\n                    \n                \n                \n                    \n                        Default value : \"file\"\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload.component.ts:48\n                            \n                        \n                \n                    \n                        form data field name with which form data will be send\nby default this will be file\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemTemplate\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload.component.ts:27\n                            \n                        \n                \n                    \n                        optional pass diffrent itemtemplate\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload.component.ts:34\n                            \n                        \n                \n                    \n                        input which url should be used to upload files,\nthis field is mandatory\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        useFormData\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload.component.ts:41\n                            \n                        \n                \n                    \n                        if set to false upload post request body will use\nplain file object in body\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            animationEnd\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animationEnd($event: AnimationEvent)\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/components/ngx-fileupload.component.ts:68\n                \n            \n\n\n            \n                \n                    triggers on animation done, if time used is 0\nthen this is a skipped animation (in this case :enter)\nto avoid this fromState have to be visible to void\nthat means component leave animation has been completed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                AnimationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleUploadChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleUploadChange(upload: UploadModel, fileUpload: FileUpload)\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/components/ngx-fileupload.component.ts:85\n                \n            \n\n\n            \n                \n                    handle upload change event,\nif upload has been completed or canceled push them into remove queue\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    upload\n                                    \n                                                UploadModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileUpload\n                                    \n                                                FileUpload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onUploadsAdd\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onUploadsAdd(uploads: FileUpload[])\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/components/ngx-fileupload.component.ts:77\n                \n            \n\n\n            \n                \n                    new uploads added with drag and drop\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uploads\n                                    \n                                                FileUpload[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploads\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FileUpload[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload.component.ts:53\n                            \n                        \n\n                \n                    \n                        all file uploades, which will be added to upload-item view\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, TemplateRef, Input } from \"@angular/core\";\nimport { trigger, state, style, animate, transition, AnimationEvent } from \"@angular/animations\";\nimport { FileUpload } from \"../services/file-upload\";\nimport { UploadModel, UploadState } from \"../model/upload\";\nimport { Subject, of } from \"rxjs\";\nimport { take, delay, switchMap } from \"rxjs/operators\";\n\n@Component({\n    selector: \"ngx-fileupload\",\n    styleUrls: [\"./ngx-fileupload.component.scss\"],\n    templateUrl: \"ngx-fileupload.component.html\",\n    animations: [\n        trigger(\"removeUpload\", [\n            state(\"visible\", style({ opacity: 1 })),\n            transition(\":leave\" , [\n                animate(\".5s ease-out\", style({ opacity: 0 }))\n            ])\n        ])\n    ],\n})\nexport class NgxFileUploadComponent {\n\n    /**\n     * optional pass diffrent itemtemplate\n     */\n    @Input()\n    public itemTemplate: TemplateRef;\n\n    /**\n     * input which url should be used to upload files,\n     * this field is mandatory\n     */\n    @Input()\n    public url: string;\n\n    /**\n     * if set to false upload post request body will use\n     * plain file object in body\n     */\n    @Input()\n    public useFormData = true;\n\n    /**\n     * form data field name with which form data will be send\n     * by default this will be file\n     */\n    @Input()\n    public formDataName = \"file\";\n\n    /**\n     * all file uploades, which will be added to upload-item view\n     */\n    public uploads: FileUpload[] = [];\n\n    /**\n     * subjects sends true if an animation has been done\n     */\n    private animation$: Subject = new Subject();\n\n    /**\n     * triggers on animation done, if time used is 0\n     * then this is a skipped animation (in this case :enter)\n     * to avoid this fromState have to be visible to void\n     * that means component leave animation has been completed\n     *\n     * @see https://github.com/angular/angular/issues/23535\n     */\n    public animationEnd($event: AnimationEvent) {\n        if ($event.totalTime !== 0) {\n            this.animation$.next(true);\n        }\n    }\n\n    /**\n     * new uploads added with drag and drop\n     */\n    public onUploadsAdd(uploads: FileUpload[]) {\n        this.uploads.push(...uploads);\n    }\n\n    /**\n     * handle upload change event,\n     * if upload has been completed or canceled push them into remove queue\n     */\n    public handleUploadChange(upload: UploadModel, fileUpload: FileUpload) {\n        if (upload.state === UploadState.CANCELED || upload.state === UploadState.UPLOADED) {\n            this.removeUpload(fileUpload);\n        }\n    }\n\n    /**\n     * remove upload from list, this causes rerendering of the view\n     * which emits true after animation has been done.\n     */\n    private removeUpload(upload: FileUpload) {\n        of(upload).pipe(\n            delay(1500),\n            switchMap(() => {\n                const idx = this.uploads.indexOf(upload);\n                this.uploads.splice(idx, 1);\n                return this.animation$.pipe(take(1));\n            })\n        )\n        .subscribe();\n    }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n            Drag/Drop files here or click\n        \n    \n\n    \n        \n            \n        \n    \n\n\n    Cancel\n    Clean Up\n    Upload\n\n\n    \n\n    \n                \n                    ./ngx-fileupload.component.scss\n                \n                $ngx-fileupload-icons--font-path: '../assets/fonts' !default;\n\n@import '../assets//scss/variables';\n@import '../assets/scss/icons';\n\n:host {\n\n    display: flex;\n    flex-direction: column;\n\n    .fileupload {\n        overflow: auto;\n        display: flex;\n        flex-direction: row-reverse;\n        flex: 1;\n        border: 1px solid #D2D2D2;\n    }\n\n    .file-upload--list {\n        box-sizing: border-box;\n        flex: 1;\n        overflow-x: hidden;\n        flex-shrink: 0;\n        flex-grow: 0;\n        flex-basis: 100%;\n        padding: .5rem 1rem;\n    }\n\n    ngx-fileupload-item {\n        margin-bottom: .5rem;\n\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n\n    .file-upload--info-wrapper {\n        cursor: pointer;\n        display: flex;\n        flex: 1;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .file-upload--info {\n\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        color: map-get($colors, \"dark\");\n\n        .ngx-fileupload-icon--add {\n            font-size: 2.5rem;\n            border: 1px dashed lighten(map-get($colors, \"dark\"), 40%);\n            width: 4rem;\n            line-height: 4rem;\n            text-align: center;\n            border-radius: 50%;\n            margin-bottom: .5rem;\n        }\n    }\n\n    .upload--footer {\n        display: flex;\n        flex-direction: row-reverse;\n\n        .upload-action {\n            display: block;\n            background: map-get($colors, \"dark\");\n            padding: .4rem .8rem;\n            border: 1px solid #2E2E2E;\n            border-width: 0 0 1px;\n            color: map-get($map: $colors, $key: \"light\");\n            cursor: pointer;\n\n            &:last-child {\n                margin: 0;\n            }\n\n            &:first-child {\n                border-radius: 0  0 .3rem 0;\n                border-width: 0 1px 1px;\n            }\n\n            &:last-child {\n                border-radius: 0  0 0 .3rem;\n                border-width: 0 1px 1px;\n            }\n\n            &[disabled] {\n                border-color: lighten(#2E2E2E, 40%);\n                background: lighten(#3E3E3E, 40%);\n            }\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Drag/Drop files here or click                                                    Cancel    Clean Up    Upload'\n    var COMPONENTS = [{'name': 'NgxFileUploadComponent', 'selector': 'ngx-fileupload'},{'name': 'NgxFileUploadItemComponent', 'selector': 'ngx-fileupload-item'}];\n    var DIRECTIVES = [{'name': 'NgxFileUploadDirective', 'selector': '[ngxFileUpload]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxFileUploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxFileUploadDirective.html":{"url":"directives/NgxFileUploadDirective.html","title":"directive - NgxFileUploadDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxFileUploadDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/directives/ngx-fileuplad.ts\n        \n\n            \n                Description\n            \n            \n                directive to add uploads with drag / drop\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n            \n                Example\n            \n            \n                        \n                            \nUpload\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxFileUpload]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancelAll\n                            \n                            \n                                    Public\n                                cleanAll\n                            \n                            \n                                    Public\n                                uploadAll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formDataName\n                            \n                            \n                                ngxFileUpload\n                            \n                            \n                                useFormData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                dragover\n                            \n                            \n                                drop\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, renderer: Renderer2, validation: NgxFileUploadValidator | NgxFileUploadValidator[])\n                    \n                \n                        \n                            \n                                Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:75\n                            \n                        \n\n                \n                    \n                            Creates an instance of NgxFileUploadDirective.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        validation\n                                                  \n                                                        \n                                                                        NgxFileUploadValidator | NgxFileUploadValidator[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        formDataName\n                    \n                \n                \n                    \n                        Default value : \"file\"\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:55\n                            \n                        \n                \n                    \n                        form data field name with which form data will be send\nby default this will be file\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxFileUpload\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:41\n                            \n                        \n                \n                    \n                        url which should be used as endpoint for the file upload\nthis field is mandatory\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        useFormData\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:48\n                            \n                        \n                \n                    \n                        if set to false upload post request body will use\nplain file object in body\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        add\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:31\n                            \n                        \n                \n                    \n                        upload has been added\n\n                    \n                \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nclick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:157\n                \n            \n\n\n            \n                \n                    add click host listener\nto get notified we have a click event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragover\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndragover(event: DragEvent)\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:134\n                \n            \n\n\n            \n                \n                    handle drag over event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drop\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndrop(event: DragEvent)\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:143\n                \n            \n\n\n            \n                \n                    handle drop event\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancelAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelAll()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:111\n                \n            \n\n\n            \n                \n                    cancel all downloads at once\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cleanAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cleanAll()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:121\n                \n            \n\n\n            \n                \n                    search for broken uploads (error / invalid) and cancel\nthem\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            uploadAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAll()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:104\n                \n            \n\n\n            \n                \n                    begin all uploads at once\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, HostListener, Input, Output, EventEmitter, OnDestroy, Optional, Inject, Renderer2, ElementRef } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { Subject } from \"rxjs\";\nimport { UploadModel, UploadState } from \"../model/upload\";\nimport { FileUpload } from \"../services/file-upload\";\nimport { NGX_FILEUPLOAD_VALIDATOR, NgxFileUploadValidator } from \"../services/validation\";\n\n/**\n * directive to add uploads with drag / drop\n *\n * @example\n *\n * \n * Upload\n */\n@Directive({\n  selector: \"[ngxFileUpload]\",\n  exportAs: \"ngxFileUploadRef\"\n})\nexport class NgxFileUploadDirective implements OnDestroy {\n\n    /**\n     * upload has been added\n     *\n     * @example\n     *\n     * \n     */\n    @Output()\n    public add: EventEmitter;\n\n    /**\n     * url which should be used as endpoint for the file upload\n     * this field is mandatory\n     *\n     * @example\n     * \n     */\n    @Input(\"ngxFileUpload\")\n    public url: string;\n\n    /**\n     * if set to false upload post request body will use\n     * plain file object in body\n     */\n    @Input()\n    public useFormData = true;\n\n    /**\n     * form data field name with which form data will be send\n     * by default this will be file\n     */\n    @Input()\n    public formDataName = \"file\";\n\n    /**\n     * remove from subscribtions if component gets destroyed\n     */\n    private destroyed$: Subject = new Subject();\n\n    /**\n     * upload file queue\n     */\n    private uploads: FileUpload[] = [];\n\n    /**\n     * injected validators\n     */\n    private validators: NgxFileUploadValidator[] = [];\n\n    /**\n     * input file field to trigger file window\n     */\n    private fileSelect: HTMLInputElement;\n\n    /**\n     * Creates an instance of NgxFileUploadDirective.\n     */\n    constructor(\n        private httpClient: HttpClient,\n        private renderer: Renderer2,\n        @Optional() @Inject(NGX_FILEUPLOAD_VALIDATOR) validation: NgxFileUploadValidator | NgxFileUploadValidator[]\n    ) {\n        if (validation) {\n            this.validators = Array.isArray(validation) ? validation : [validation];\n        }\n        this.add = new EventEmitter();\n        this.fileSelect = this.createFieldInputField();\n    }\n\n    /**\n     * directive gets destroyed\n     */\n    public ngOnDestroy() {\n        this.destroyed$.next(true);\n        this.uploads = [];\n        this.destroyed$.complete();\n    }\n\n    /**\n     * begin all uploads at once\n     */\n    public uploadAll() {\n        this.uploads.forEach((upload: FileUpload) => upload.start());\n    }\n\n    /**\n     * cancel all downloads at once\n     */\n    public cancelAll() {\n        for ( let i = this.uploads.length - 1; i >= 0; i --) {\n            this.uploads[i].cancel();\n        }\n    }\n\n    /**\n     * search for broken uploads (error / invalid) and cancel\n     * them\n     */\n    public cleanAll() {\n        for ( let i = this.uploads.length - 1; i >= 0; i --) {\n            const upload = this.uploads[i];\n            if (upload.isInvalid() || upload.hasError()) {\n                upload.cancel();\n            }\n        }\n    }\n\n    /**\n     * handle drag over event\n     */\n    @HostListener(\"dragover\", [\"$event\"])\n    public onFileDragOver(event: DragEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    /**\n     * handle drop event\n     */\n    @HostListener(\"drop\", [\"$event\"])\n    public onFileDrop(event: DragEvent) {\n\n        event.stopPropagation();\n        event.preventDefault();\n\n        const files = Array.from(event.dataTransfer.files);\n        this.handleFileSelect(files);\n    }\n\n    /**\n     * add click host listener\n     * to get notified we have a click event\n     */\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(event: MouseEvent) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        if (!this.uploads.length) {\n            this.fileSelect.click();\n        }\n    }\n\n    /**\n     * files has been selected via drag drop\n     * or with input type=\"file\"\n     */\n    private handleFileSelect(files: File[]) {\n        const uploads = files.map((file) => this.createUpload(file));\n        this.add.emit(uploads);\n    }\n\n    /**\n     * create upload from file, listen to complete\n     * to remove upload from uploads list\n     *\n     * remove uplaod from uploads repository if upload completed\n     * or canceled\n     */\n    private createUpload(file: File): FileUpload {\n        const uploadOptions = {\n            url: this.url,\n            formData: {\n                enabled: this.useFormData,\n                name   : this.formDataName\n            }\n        };\n\n        const fileModel = new UploadModel(file);\n        const upload    = new FileUpload(this.httpClient, fileModel, uploadOptions);\n\n        this.preValidateUpload(fileModel);\n        this.uploads.push(upload);\n\n        const sub = upload.change\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe({\n                complete: () => {\n                    this.uploads.splice(this.uploads.indexOf(upload), 1);\n                    sub.unsubscribe();\n                }\n            });\n\n        return upload;\n    }\n\n    /**\n     * pre validate upload, if validation result is invalid\n     * fill could not uploaded anymore\n     */\n    private preValidateUpload(upload: UploadModel) {\n\n        for (let i = 0, ln = this.validators.length; i  this.onFileSelect(e));\n        return inputField;\n    }\n\n    /**\n     * register on change event on input[type=\"file\"] field\n     * and create the uploads\n     */\n    private onFileSelect(event: Event) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const files = Array.from(this.fileSelect.files);\n        this.handleFileSelect(files);\n\n        /**\n         * clear value otherwise change will not trigger again\n         */\n        this.fileSelect.value = null;\n        this.fileSelect.files = null;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxFileUploadItemComponent.html":{"url":"components/NgxFileUploadItemComponent.html","title":"component - NgxFileUploadItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxFileUploadItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    lib/ngx-fileupload/components/ngx-fileupload-item.component.ts\n\n\n    \n        Description\n    \n    \n        view for upload\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-fileupload-item\n            \n\n            \n                styleUrls\n                ./ngx-fileupload-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ngx-fileupload-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                context\n                            \n                            \n                                    Public\n                                itemTpl\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                template\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    upload\n                                \n                                \n                                    template\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        template\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload-item.component.ts:69\n                            \n                        \n                \n                    \n                        sets template which should used to render file data\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        upload\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload-item.component.ts:47\n                            \n                        \n                \n                    \n                        sets upload we want to bind with current view\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload-item.component.ts:31\n                            \n                        \n                \n                    \n                        upload state has been changed\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nclick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/components/ngx-fileupload-item.component.ts:60\n                \n            \n\n\n            \n                \n                    ensure all click events will canceled\nso we dont affect anything other\n\n\n                \n            \n        \n    \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FileUploadItemContext\n\n                        \n                    \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload-item.component.ts:36\n                            \n                        \n\n                \n                    \n                        template context which is bound to rendered template\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemTpl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload-item.component.ts:25\n                            \n                        \n\n                \n                    \n                        item template which should used to render upload data\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        upload\n                    \n                \n\n\n                \n                    \n                        setupload(fileUpload)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload-item.component.ts:47\n                                \n                            \n                    \n                        \n                                sets upload we want to bind with current view\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            fileUpload\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        template\n                    \n                \n\n\n                \n                    \n                        settemplate(tpl)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload-item.component.ts:69\n                                \n                            \n                    \n                        \n                                sets template which should used to render file data\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tpl\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, TemplateRef, EventEmitter, Output, HostListener } from \"@angular/core\";\nimport { FileUpload } from \"../services/file-upload\";\nimport { UploadControl } from \"../services/upload-control\";\nimport { UploadModel, UploadData } from \"../model/upload\";\n\nexport interface FileUploadItemContext {\n    data: UploadData;\n    ctrl: UploadControl;\n}\n\n/**\n * view for upload\n */\n@Component({\n    selector: \"ngx-fileupload-item\",\n    templateUrl: \"ngx-fileupload-item.component.html\",\n    styleUrls: [\"./ngx-fileupload-item.component.scss\"],\n})\nexport class NgxFileUploadItemComponent implements OnInit {\n\n    /**\n     * item template which should used to render upload data\n     */\n    public itemTpl: TemplateRef;\n\n    /**\n     * upload state has been changed\n     */\n    @Output()\n    public changed: EventEmitter = new EventEmitter();\n\n    /**\n     * template context which is bound to rendered template\n     */\n    public context: FileUploadItemContext;\n\n    /**\n     * file upload which should bound to this view\n     */\n    private fileUpload: FileUpload;\n\n    /**\n     * sets upload we want to bind with current view\n     */\n    @Input()\n    public set upload(fileUpload: FileUpload) {\n        this.fileUpload = fileUpload;\n        this.context = {\n            data: null,\n            ctrl: new UploadControl(fileUpload)\n        };\n    }\n\n    /**\n     * ensure all click events will canceled\n     * so we dont affect anything other\n     */\n    @HostListener(\"click\", [\"$event\"])\n    public onItemClick(event: MouseEvent) {\n        event.stopPropagation();\n    }\n\n    /**\n     * sets template which should used to render file data\n     */\n    @ViewChild(\"defaultUploadItem\", {static: true})\n    @Input()\n    public set template(tpl: TemplateRef) {\n        if (tpl !== undefined) {\n            this.itemTpl = tpl;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.fileUpload.change.subscribe({\n            next: (upload: UploadModel) => {\n                this.context.data = upload.toJson();\n                this.changed.emit(upload);\n            }\n        });\n    }\n}\n\n    \n\n    \n        \n\n    \n        {{uploadData.name}}\n\n        \n            \n            \n                \n            \n\n            \n            \n                \n                    {{uploadData.size | bytes : 2}}\n                    \n                \n            \n\n            \n            \n\n                \n                \n                    \n                \n\n                \n                \n                    \n                \n\n                \n                \n                    \n                \n\n            \n        \n\n        \n            {{uploadData.message}}\n        \n    \n\n\n\n\n\n    \n\n    \n                \n                    ./ngx-fileupload-item.component.scss\n                \n                $ngx-fileupload-icons--font-path: '../assets/fonts' !default;\n\n@import '../assets//scss/variables';\n@import '../assets/scss/icons';\n\n:host {\n\n    display: block;\n    color: map-get($colors, 'dark');\n\n    .upload-item {\n        display: flex;\n        flex-direction: column;\n        padding: .25rem .5rem;\n        border-radius: .4rem;\n        border: 1px solid #E4E4E4;\n\n        /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#ffffff+50,f7f7f7+100 */\n        background: #FDFDFD; /* Old browsers */\n        background: -moz-linear-gradient(top,  #FDFDFD 50%, #F7F7F7 100%); /* FF3.6-15 */\n        background: -webkit-linear-gradient(top,  #FDFDFD 50%,#F7F7F7 100%); /* Chrome10-25,Safari5.1-6 */\n        background: linear-gradient(to bottom,  #FDFDFD 50%,#F7F7F7 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\n    }\n\n    /*\n       Upload Item Header\n    */\n    .upload-item--header {\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        overflow: hidden;\n    }\n\n    /*\n       Upload Item Body\n    */\n    .upload-item--body {\n        align-items: center;\n        display: flex;\n        flex-direction: row;\n    }\n\n    .upload-item--actions,\n    .upload-item--state {\n        flex: 0;\n    }\n\n    .upload-item--progress {\n        flex: 1;\n        display: flex;\n        margin: 0 .5rem;\n        padding: 0 .5rem;\n        border: 1px solid #E4E4E4;\n        border-width: 0 1px;\n\n        .progressbar {\n            flex: 1;\n            height: .75rem;\n            border-radius: .5rem;\n            overflow: hidden;\n            padding: 1px;\n            border: 1px solid #E4E4E4;\n            position: relative;\n        }\n\n        .label-size {\n            position: absolute;\n            z-index: 5;\n            left: 50%;\n            transform: translateX(-50%);\n            font-size: .8rem;\n        }\n\n        .progressbar-inner {\n            height: 100%;\n            background: map-get($colors, 'progress');\n            border-radius: .5rem;\n        }\n    }\n\n    .upload-item--actions {\n\n        padding: .25rem;\n        display: flex;\n\n        button {\n            padding: 0;\n            background: lighten(map-get($colors, 'dark'), 25%);\n            color: map-get($colors, 'white');\n            border-radius: 50%;\n            border: 0;\n            height: 1rem; \n            width: 1rem; \n            cursor: pointer;\n            font-size: .75rem;\n            outline: none;\n\n            margin-right: .25rem;\n\n            &:last-child {\n                margin: 0;\n            }\n\n            &:disabled {\n                background: lighten(map-get($colors, 'dark'), 50%);\n                cursor: not-allowed;\n            }\n        }\n    }\n\n    /**\n     * Upload Item Footer\n     */\n    .upload-item--notification {\n        font-size: .8rem;\n        color: map-get($map: $colors, $key: 'green');\n        margin-left: 2rem;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n\n        &.error {\n            color: map-get($map: $colors, $key: 'red');\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{uploadData.name}}                                                                                                                        {{uploadData.size | bytes : 2}}                                                                                                                                                                                                                                                                                                                            {{uploadData.message}}            '\n    var COMPONENTS = [{'name': 'NgxFileUploadComponent', 'selector': 'ngx-fileupload'},{'name': 'NgxFileUploadItemComponent', 'selector': 'ngx-fileupload-item'}];\n    var DIRECTIVES = [{'name': 'NgxFileUploadDirective', 'selector': '[ngxFileUpload]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxFileUploadItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxFileUploadModule.html":{"url":"modules/NgxFileUploadModule.html","title":"module - NgxFileUploadModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxFileUploadModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxFileUploadModule\n\n\n\ncluster_NgxFileUploadModule_declarations\n\n\n\ncluster_NgxFileUploadModule_exports\n\n\n\n\nNgxFileUploadComponent\n\nNgxFileUploadComponent\n\n\n\nNgxFileUploadModule\n\nNgxFileUploadModule\n\nNgxFileUploadModule -->\n\nNgxFileUploadComponent->NgxFileUploadModule\n\n\n\n\n\nNgxFileUploadDirective\n\nNgxFileUploadDirective\n\nNgxFileUploadModule -->\n\nNgxFileUploadDirective->NgxFileUploadModule\n\n\n\n\n\nNgxFileUploadItemComponent\n\nNgxFileUploadItemComponent\n\nNgxFileUploadModule -->\n\nNgxFileUploadItemComponent->NgxFileUploadModule\n\n\n\n\n\nNgxFileUploadComponent \n\nNgxFileUploadComponent \n\nNgxFileUploadComponent  -->\n\nNgxFileUploadModule->NgxFileUploadComponent \n\n\n\n\n\nNgxFileUploadDirective \n\nNgxFileUploadDirective \n\nNgxFileUploadDirective  -->\n\nNgxFileUploadModule->NgxFileUploadDirective \n\n\n\n\n\nNgxFileUploadItemComponent \n\nNgxFileUploadItemComponent \n\nNgxFileUploadItemComponent  -->\n\nNgxFileUploadModule->NgxFileUploadItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/ngx-fileupload/ngx-file-upload.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxFileUploadComponent\n                        \n                        \n                            NgxFileUploadDirective\n                        \n                        \n                            NgxFileUploadItemComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxFileUploadComponent\n                        \n                        \n                            NgxFileUploadDirective\n                        \n                        \n                            NgxFileUploadItemComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { NgMathPipesModule } from \"angular-pipes\";\n\nimport { NgxFileUploadItemComponent } from \"./components/ngx-fileupload-item.component\";\nimport { NgxFileUploadDirective } from \"./directives/ngx-fileuplad\";\nimport { NgxFileUploadComponent } from \"./components/ngx-fileupload.component\";\n\n@NgModule({\n    declarations: [\n        NgxFileUploadDirective,\n        NgxFileUploadItemComponent,\n        NgxFileUploadComponent,\n    ],\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        NgMathPipesModule\n    ],\n    exports: [\n        NgxFileUploadDirective,\n        NgxFileUploadItemComponent,\n        NgxFileUploadComponent\n    ]\n})\nexport class NgxFileUploadModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxFileUploadValidator.html":{"url":"interfaces/NgxFileUploadValidator.html","title":"interface - NgxFileUploadValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxFileUploadValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/services/validation.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    validate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(file: File)\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/validation.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidationResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from \"@angular/core\";\n\nexport const NGX_FILEUPLOAD_VALIDATOR = new InjectionToken(\"Upload validation Service\");\n\nexport interface ValidationResult {\n    valid: boolean;\n    error: string;\n}\n\nexport interface NgxFileUploadValidator {\n    validate(file: File): ValidationResult;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/model/upload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        code\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         IDataNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDataNode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum UploadState {\n    QUEUED    = \"queued\",\n    START     = \"start\",\n    PROGRESS  = \"progress\",\n    UPLOADED  = \"uploaded\",\n    CANCELED  = \"canceled\",\n    ERROR     = \"error\",\n    INVALID   = \"invalid\"\n}\n\nexport interface UploadData {\n    state: UploadState;\n    uploaded: number;\n    size: number;\n    name: string;\n    progress: number;\n    hasError: boolean;\n    isSuccess: boolean;\n    isValid: boolean;\n    message: string;\n}\n\nexport interface IDataNode {\n    [key: string]: any;\n}\n\ninterface Response {\n    code: number;\n    body: IDataNode;\n}\n\n/**\n * Represents a file which will be uploaded\n */\nexport class UploadModel {\n\n    private uploadFile: File;\n\n    private uploadedSize = 0;\n\n    private uploadedState: UploadState = UploadState.QUEUED;\n\n    private uploadError = false;\n\n    private uploadSuccess = false;\n\n    private uploadResponse: Response = null;\n\n    private uploadValid = true;\n\n    private uploadMessage = \"\";\n\n    /**\n     * Creates an instance of UploadFile.\n     */\n    public constructor(file: File) {\n        this.uploadFile = file;\n    }\n\n    /**\n     * get raw file\n     */\n    public get file(): File {\n        return this.uploadFile;\n    }\n\n    /**\n     * returns filesize in byte\n     */\n    public get fileSize(): number {\n        return this.file.size;\n    }\n\n    /**\n     * returns filename\n     */\n    public get fileName(): string {\n        return this.file.name;\n    }\n\n    /**\n     * returns mime type of file\n     */\n    public get fileType(): string {\n        return this.file.type;\n    }\n\n    /**\n     * set response data if upload has been completed\n     */\n    public set response(response: Response) {\n        this.uploadResponse = response;\n    }\n\n    /**\n     * get response data if upload has been completed\n     */\n    public get response(): Response {\n        return this.uploadResponse;\n    }\n\n    /**\n     * set current upload state\n     */\n    public set state(state: UploadState) {\n        this.uploadedState = state;\n    }\n\n    /**\n     * get current upload state\n     */\n    public get state(): UploadState {\n        return this.uploadedState;\n    }\n\n    /**\n     * set uploaded size\n     */\n    public set uploaded(bytes: number) {\n        this.uploadedSize = bytes;\n    }\n\n    /**\n     * get uploaded size\n     */\n    public get uploaded(): number {\n        return this.uploadedSize;\n    }\n\n    /**\n     * set upload was successful\n     */\n    public set error(isError: boolean) {\n        this.uploadError = isError;\n    }\n\n    /**\n     * get upload was successful\n     */\n    public get error(): boolean {\n        return this.uploadError;\n    }\n\n    /**\n     * set upload was successful\n     */\n    public set success(isSuccess: boolean) {\n        this.uploadSuccess = isSuccess;\n    }\n\n    /**\n     * get upload was successful\n     */\n    public get success(): boolean {\n        return this.uploadSuccess;\n    }\n\n    public set isValid(valid: boolean) {\n        this.uploadValid = valid;\n    }\n\n    /**\n     * returns true if upload is valid\n     */\n    public get isValid(): boolean {\n        return this.uploadValid;\n    }\n\n    public set message(msg: string) {\n        this.uploadMessage = msg;\n    }\n\n    public get message(): string {\n        return this.uploadMessage;\n    }\n\n    public get progress(): number {\n        const progress = this.uploaded * 100 / this.fileSize;\n        return Math.round(progress > 100 ? 100 : progress);\n    }\n\n    /**\n     * return file upload data\n     * @todo move to model\n     */\n    public toJson(): UploadData {\n        return {\n            state     : this.state,\n            uploaded  : this.uploaded,\n            size      : this.fileSize,\n            name      : this.fileName,\n            progress  : this.progress,\n            hasError  : this.error,\n            isSuccess : this.success,\n            isValid   : this.isValid,\n            message   : this.message\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadControl.html":{"url":"classes/UploadControl.html","title":"class - UploadControl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/services/upload-control.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                retry\n                            \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(fileUpload: FileUpload)\n                    \n                \n                        \n                            \n                                Defined in lib/ngx-fileupload/services/upload-control.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileUpload\n                                                  \n                                                        \n                                                                        FileUpload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            retry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    retry()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/upload-control.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/upload-control.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/upload-control.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileUpload } from \"./file-upload\";\n\nexport class UploadControl {\n\n    public constructor(\n        private fileUpload: FileUpload\n    ) {}\n\n    public retry() {\n        this.fileUpload.retry();\n    }\n\n    public start() {\n        this.fileUpload.start();\n    }\n\n    public stop() {\n        this.fileUpload.cancel();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadData.html":{"url":"interfaces/UploadData.html","title":"interface - UploadData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UploadData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/model/upload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hasError\n                                \n                                \n                                        isSuccess\n                                \n                                \n                                        isValid\n                                \n                                \n                                        message\n                                \n                                \n                                        name\n                                \n                                \n                                        progress\n                                \n                                \n                                        size\n                                \n                                \n                                        state\n                                \n                                \n                                        uploaded\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasError\n                                    \n                                \n                                \n                                    \n                                        hasError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSuccess\n                                    \n                                \n                                \n                                    \n                                        isSuccess:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isValid\n                                    \n                                \n                                \n                                    \n                                        isValid:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                    \n                                \n                                \n                                    \n                                        progress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         UploadState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UploadState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uploaded\n                                    \n                                \n                                \n                                    \n                                        uploaded:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum UploadState {\n    QUEUED    = \"queued\",\n    START     = \"start\",\n    PROGRESS  = \"progress\",\n    UPLOADED  = \"uploaded\",\n    CANCELED  = \"canceled\",\n    ERROR     = \"error\",\n    INVALID   = \"invalid\"\n}\n\nexport interface UploadData {\n    state: UploadState;\n    uploaded: number;\n    size: number;\n    name: string;\n    progress: number;\n    hasError: boolean;\n    isSuccess: boolean;\n    isValid: boolean;\n    message: string;\n}\n\nexport interface IDataNode {\n    [key: string]: any;\n}\n\ninterface Response {\n    code: number;\n    body: IDataNode;\n}\n\n/**\n * Represents a file which will be uploaded\n */\nexport class UploadModel {\n\n    private uploadFile: File;\n\n    private uploadedSize = 0;\n\n    private uploadedState: UploadState = UploadState.QUEUED;\n\n    private uploadError = false;\n\n    private uploadSuccess = false;\n\n    private uploadResponse: Response = null;\n\n    private uploadValid = true;\n\n    private uploadMessage = \"\";\n\n    /**\n     * Creates an instance of UploadFile.\n     */\n    public constructor(file: File) {\n        this.uploadFile = file;\n    }\n\n    /**\n     * get raw file\n     */\n    public get file(): File {\n        return this.uploadFile;\n    }\n\n    /**\n     * returns filesize in byte\n     */\n    public get fileSize(): number {\n        return this.file.size;\n    }\n\n    /**\n     * returns filename\n     */\n    public get fileName(): string {\n        return this.file.name;\n    }\n\n    /**\n     * returns mime type of file\n     */\n    public get fileType(): string {\n        return this.file.type;\n    }\n\n    /**\n     * set response data if upload has been completed\n     */\n    public set response(response: Response) {\n        this.uploadResponse = response;\n    }\n\n    /**\n     * get response data if upload has been completed\n     */\n    public get response(): Response {\n        return this.uploadResponse;\n    }\n\n    /**\n     * set current upload state\n     */\n    public set state(state: UploadState) {\n        this.uploadedState = state;\n    }\n\n    /**\n     * get current upload state\n     */\n    public get state(): UploadState {\n        return this.uploadedState;\n    }\n\n    /**\n     * set uploaded size\n     */\n    public set uploaded(bytes: number) {\n        this.uploadedSize = bytes;\n    }\n\n    /**\n     * get uploaded size\n     */\n    public get uploaded(): number {\n        return this.uploadedSize;\n    }\n\n    /**\n     * set upload was successful\n     */\n    public set error(isError: boolean) {\n        this.uploadError = isError;\n    }\n\n    /**\n     * get upload was successful\n     */\n    public get error(): boolean {\n        return this.uploadError;\n    }\n\n    /**\n     * set upload was successful\n     */\n    public set success(isSuccess: boolean) {\n        this.uploadSuccess = isSuccess;\n    }\n\n    /**\n     * get upload was successful\n     */\n    public get success(): boolean {\n        return this.uploadSuccess;\n    }\n\n    public set isValid(valid: boolean) {\n        this.uploadValid = valid;\n    }\n\n    /**\n     * returns true if upload is valid\n     */\n    public get isValid(): boolean {\n        return this.uploadValid;\n    }\n\n    public set message(msg: string) {\n        this.uploadMessage = msg;\n    }\n\n    public get message(): string {\n        return this.uploadMessage;\n    }\n\n    public get progress(): number {\n        const progress = this.uploaded * 100 / this.fileSize;\n        return Math.round(progress > 100 ? 100 : progress);\n    }\n\n    /**\n     * return file upload data\n     * @todo move to model\n     */\n    public toJson(): UploadData {\n        return {\n            state     : this.state,\n            uploaded  : this.uploaded,\n            size      : this.fileSize,\n            name      : this.fileName,\n            progress  : this.progress,\n            hasError  : this.error,\n            isSuccess : this.success,\n            isValid   : this.isValid,\n            message   : this.message\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadModel.html":{"url":"classes/UploadModel.html","title":"class - UploadModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/model/upload.ts\n        \n\n            \n                Description\n            \n            \n                Represents a file which will be uploaded\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    file\n                                \n                                \n                                    fileSize\n                                \n                                \n                                    fileName\n                                \n                                \n                                    fileType\n                                \n                                \n                                    response\n                                \n                                \n                                    state\n                                \n                                \n                                    uploaded\n                                \n                                \n                                    error\n                                \n                                \n                                    success\n                                \n                                \n                                    isValid\n                                \n                                \n                                    message\n                                \n                                \n                                    progress\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(file: File)\n                    \n                \n                        \n                            \n                                Defined in lib/ngx-fileupload/model/upload.ts:51\n                            \n                        \n\n                \n                    \n                            Creates an instance of UploadFile.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        file\n                                                  \n                                                        \n                                                                    File\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toJson()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/model/upload.ts:186\n                \n            \n\n\n            \n                \n                    return file upload data\n\n\n                    \n                        Returns :         UploadData\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        file\n                    \n                \n\n                \n                    \n                        getfile()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:63\n                                \n                            \n                    \n                        \n                                get raw file\n\n\n                                \n                                    Returns :     File\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fileSize\n                    \n                \n\n                \n                    \n                        getfileSize()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:70\n                                \n                            \n                    \n                        \n                                returns filesize in byte\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fileName\n                    \n                \n\n                \n                    \n                        getfileName()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:77\n                                \n                            \n                    \n                        \n                                returns filename\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fileType\n                    \n                \n\n                \n                    \n                        getfileType()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:84\n                                \n                            \n                    \n                        \n                                returns mime type of file\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        response\n                    \n                \n\n                \n                    \n                        getresponse()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:98\n                                \n                            \n                    \n                        \n                                get response data if upload has been completed\n\n\n                                \n                                    Returns :         Response\n\n                                \n                        \n                    \n\n                \n                    \n                        setresponse(response)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:91\n                                \n                            \n                    \n                        \n                                set response data if upload has been completed\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            response\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:112\n                                \n                            \n                    \n                        \n                                get current upload state\n\n\n                                \n                                    Returns :         UploadState\n\n                                \n                        \n                    \n\n                \n                    \n                        setstate(state)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:105\n                                \n                            \n                    \n                        \n                                set current upload state\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            state\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        uploaded\n                    \n                \n\n                \n                    \n                        getuploaded()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:126\n                                \n                            \n                    \n                        \n                                get uploaded size\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setuploaded(bytes: number)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:119\n                                \n                            \n                    \n                        \n                                set uploaded size\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            bytes\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n\n                \n                    \n                        geterror()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:140\n                                \n                            \n                    \n                        \n                                get upload was successful\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        seterror(isError: boolean)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:133\n                                \n                            \n                    \n                        \n                                set upload was successful\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isError\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n\n                \n                    \n                        getsuccess()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:154\n                                \n                            \n                    \n                        \n                                get upload was successful\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setsuccess(isSuccess: boolean)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:147\n                                \n                            \n                    \n                        \n                                set upload was successful\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isSuccess\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:165\n                                \n                            \n                    \n                        \n                                returns true if upload is valid\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setisValid(valid: boolean)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:158\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            valid\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n\n                \n                    \n                        getmessage()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:173\n                                \n                            \n\n                \n                    \n                        setmessage(msg: string)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:169\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            msg\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        progress\n                    \n                \n\n                \n                    \n                        getprogress()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:177\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export enum UploadState {\n    QUEUED    = \"queued\",\n    START     = \"start\",\n    PROGRESS  = \"progress\",\n    UPLOADED  = \"uploaded\",\n    CANCELED  = \"canceled\",\n    ERROR     = \"error\",\n    INVALID   = \"invalid\"\n}\n\nexport interface UploadData {\n    state: UploadState;\n    uploaded: number;\n    size: number;\n    name: string;\n    progress: number;\n    hasError: boolean;\n    isSuccess: boolean;\n    isValid: boolean;\n    message: string;\n}\n\nexport interface IDataNode {\n    [key: string]: any;\n}\n\ninterface Response {\n    code: number;\n    body: IDataNode;\n}\n\n/**\n * Represents a file which will be uploaded\n */\nexport class UploadModel {\n\n    private uploadFile: File;\n\n    private uploadedSize = 0;\n\n    private uploadedState: UploadState = UploadState.QUEUED;\n\n    private uploadError = false;\n\n    private uploadSuccess = false;\n\n    private uploadResponse: Response = null;\n\n    private uploadValid = true;\n\n    private uploadMessage = \"\";\n\n    /**\n     * Creates an instance of UploadFile.\n     */\n    public constructor(file: File) {\n        this.uploadFile = file;\n    }\n\n    /**\n     * get raw file\n     */\n    public get file(): File {\n        return this.uploadFile;\n    }\n\n    /**\n     * returns filesize in byte\n     */\n    public get fileSize(): number {\n        return this.file.size;\n    }\n\n    /**\n     * returns filename\n     */\n    public get fileName(): string {\n        return this.file.name;\n    }\n\n    /**\n     * returns mime type of file\n     */\n    public get fileType(): string {\n        return this.file.type;\n    }\n\n    /**\n     * set response data if upload has been completed\n     */\n    public set response(response: Response) {\n        this.uploadResponse = response;\n    }\n\n    /**\n     * get response data if upload has been completed\n     */\n    public get response(): Response {\n        return this.uploadResponse;\n    }\n\n    /**\n     * set current upload state\n     */\n    public set state(state: UploadState) {\n        this.uploadedState = state;\n    }\n\n    /**\n     * get current upload state\n     */\n    public get state(): UploadState {\n        return this.uploadedState;\n    }\n\n    /**\n     * set uploaded size\n     */\n    public set uploaded(bytes: number) {\n        this.uploadedSize = bytes;\n    }\n\n    /**\n     * get uploaded size\n     */\n    public get uploaded(): number {\n        return this.uploadedSize;\n    }\n\n    /**\n     * set upload was successful\n     */\n    public set error(isError: boolean) {\n        this.uploadError = isError;\n    }\n\n    /**\n     * get upload was successful\n     */\n    public get error(): boolean {\n        return this.uploadError;\n    }\n\n    /**\n     * set upload was successful\n     */\n    public set success(isSuccess: boolean) {\n        this.uploadSuccess = isSuccess;\n    }\n\n    /**\n     * get upload was successful\n     */\n    public get success(): boolean {\n        return this.uploadSuccess;\n    }\n\n    public set isValid(valid: boolean) {\n        this.uploadValid = valid;\n    }\n\n    /**\n     * returns true if upload is valid\n     */\n    public get isValid(): boolean {\n        return this.uploadValid;\n    }\n\n    public set message(msg: string) {\n        this.uploadMessage = msg;\n    }\n\n    public get message(): string {\n        return this.uploadMessage;\n    }\n\n    public get progress(): number {\n        const progress = this.uploaded * 100 / this.fileSize;\n        return Math.round(progress > 100 ? 100 : progress);\n    }\n\n    /**\n     * return file upload data\n     * @todo move to model\n     */\n    public toJson(): UploadData {\n        return {\n            state     : this.state,\n            uploaded  : this.uploaded,\n            size      : this.fileSize,\n            name      : this.fileName,\n            progress  : this.progress,\n            hasError  : this.error,\n            isSuccess : this.success,\n            isValid   : this.isValid,\n            message   : this.message\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadOptions.html":{"url":"interfaces/UploadOptions.html","title":"interface - UploadOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UploadOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/services/file-upload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        formData\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        formData\n                                    \n                                \n                                \n                                    \n                                        formData:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpEvent, HttpEventType, HttpProgressEvent, HttpResponse, HttpErrorResponse } from \"@angular/common/http\";\nimport { Subject, BehaviorSubject, Observable } from \"rxjs\";\nimport { takeUntil, filter } from \"rxjs/operators\";\nimport { UploadModel, UploadState} from \"../model/upload\";\n\nexport interface UploadOptions {\n    url: string;\n\n    formData?: {\n        enabled: boolean;\n        name?: string;\n    };\n}\n\n/**\n * represents a single fileupload\n */\nexport class FileUpload {\n\n    /**\n     * if cancel$ emits true, current upload will stopped\n     */\n    private cancel$: Subject = new Subject();\n\n    /**\n     * upload stream to notify observers if something has been changed\n     */\n    private upload$: BehaviorSubject;\n\n    private options: UploadOptions = {\n        url: \"\",\n        formData: { enabled: true, name: \"file\" }\n    };\n\n    /**\n     * create FileUpload service\n     */\n    public constructor(\n        private http: HttpClient,\n        private upload: UploadModel,\n        options: UploadOptions\n    ) {\n        this.upload$ = new BehaviorSubject(this.upload);\n        this.options = {...this.options, ...options};\n    }\n\n    /**\n     * upload file to server but only\n     * if file is not queued, abort request on cancel\n     */\n    public start() {\n        /** only start upload if state is not queued and is valid */\n        if (this.upload.state === UploadState.QUEUED && this.upload.isValid) {\n            this.uploadFile().pipe(\n                takeUntil(this.cancel$),\n                filter(() => this.upload.state !== UploadState.CANCELED)\n            )\n            .subscribe({\n                next: (event: HttpEvent) => this.handleHttpEvent(event),\n                error: (error: HttpErrorResponse) => this.handleHttpError(error)\n            });\n        }\n    }\n\n    /**\n     * restart download again\n     * reset state, and reset errors\n     */\n    public retry() {\n        if (this.upload.state === UploadState.ERROR) {\n            this.upload.state   = UploadState.QUEUED;\n            this.upload.error   = null;\n            this.upload.success = null;\n            this.upload.message = \"\";\n            this.start();\n        }\n    }\n\n    /**\n     * cancel current file upload, this will complete change subject\n     */\n    public cancel() {\n        let isCancelAble = this.upload.state !== UploadState.CANCELED;\n        isCancelAble     = isCancelAble && this.upload.state !== UploadState.UPLOADED;\n\n        if (isCancelAble) {\n            this.upload.state = UploadState.CANCELED;\n            this.notifyObservers();\n            this.cancel$.next(true);\n            this.completeUpload();\n        }\n    }\n\n    /**\n     * returns observable which notify if file upload state\n     * has been changed\n     */\n    public get change(): Observable {\n        return this.upload$.asObservable();\n    }\n\n    /**\n     * returns true if upload contains an error or is invalid\n     */\n    public hasError(): boolean {\n        return this.upload.error;\n    }\n\n    public isInvalid(): boolean {\n        return this.upload.isValid === false;\n    }\n\n    /**\n     * build form data and send request to server\n     */\n    private uploadFile(): Observable> {\n\n        const uploadBody = this.createUploadBody();\n        return this.http.post(this.options.url, uploadBody, {\n            reportProgress: true,\n            observe: \"events\"\n        });\n    }\n\n    /**\n     * create upload body which will should be send\n     */\n    private createUploadBody(): FormData | File {\n        if (this.options.formData.enabled) {\n            const formData = new FormData();\n            const label    = this.options.formData.name;\n            formData.append(label, this.upload.file, this.upload.fileName);\n            return formData;\n        }\n        return this.upload.file;\n    }\n\n    /**\n     * handle all http events\n     */\n    private handleHttpEvent(event: HttpEvent) {\n        switch (event.type) {\n            case HttpEventType.Sent: this.handleSent(); break;\n            case HttpEventType.UploadProgress: this.handleProgress(event); break;\n            case HttpEventType.Response: this.handleResponse(event); break;\n        }\n    }\n\n    /**\n     * got http error, this not completes the upload\n     * since the user can try do the same upload again\n     */\n    private handleHttpError(error: HttpErrorResponse) {\n        this.upload.state = UploadState.ERROR;\n        this.upload.error = true;\n        this.upload.message = error.message;\n        this.notifyObservers();\n    }\n\n    /**\n     * handle file upload in progress\n     */\n    private handleProgress(event: HttpProgressEvent) {\n        this.upload.state = UploadState.PROGRESS;\n        this.upload.uploaded = event.loaded;\n        this.notifyObservers();\n    }\n\n    /**\n     * upload has been started\n     */\n    private handleSent() {\n        this.upload.state = UploadState.START;\n        this.notifyObservers();\n    }\n\n    /**\n     * upload has been completed\n     */\n    private handleResponse(res: HttpResponse) {\n\n        this.upload.state   = UploadState.UPLOADED;\n        this.upload.success = res.ok;\n        this.upload.response = {\n            code: res.status,\n            body: res.body\n        };\n\n        this.notifyObservers();\n        this.completeUpload();\n    }\n\n    /**\n     * complete download, complete streams and delete them\n     * notify observers\n     */\n    private completeUpload() {\n        this.upload$.complete();\n        this.cancel$.complete();\n        this.cancel$ = null;\n        this.upload$ = null;\n    }\n\n    /**\n     * send notification to observers\n     */\n    private notifyObservers() {\n        this.upload$.next(this.upload);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationResult.html":{"url":"interfaces/ValidationResult.html","title":"interface - ValidationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValidationResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/services/validation.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        valid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valid\n                                    \n                                \n                                \n                                    \n                                        valid:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from \"@angular/core\";\n\nexport const NGX_FILEUPLOAD_VALIDATOR = new InjectionToken(\"Upload validation Service\");\n\nexport interface ValidationResult {\n    valid: boolean;\n    error: string;\n}\n\nexport interface NgxFileUploadValidator {\n    validate(file: File): ValidationResult;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                lib/ngx-fileupload/components/ngx-fileupload-item.component.ts\n            \n            component\n            NgxFileUploadItemComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/components/ngx-fileupload-item.component.ts\n            \n            interface\n            FileUploadItemContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/components/ngx-fileupload.component.ts\n            \n            component\n            NgxFileUploadComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/directives/ngx-fileuplad.ts\n            \n            directive\n            NgxFileUploadDirective\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/model/upload.ts\n            \n            class\n            UploadModel\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/model/upload.ts\n            \n            interface\n            IDataNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/model/upload.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/model/upload.ts\n            \n            interface\n            UploadData\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/services/file-upload.ts\n            \n            class\n            FileUpload\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/services/file-upload.ts\n            \n            interface\n            UploadOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/services/upload-control.ts\n            \n            class\n            UploadControl\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/services/validation.ts\n            \n            interface\n            NgxFileUploadValidator\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/services/validation.ts\n            \n            interface\n            ValidationResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/services/validation.ts\n            \n            variable\n            NGX_FILEUPLOAD_VALIDATOR\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 8.1.0\n        \n            @angular/common : 8.1.0\n        \n            @angular/compiler : 8.1.0\n        \n            @angular/core : 8.1.0\n        \n            @angular/forms : 8.1.0\n        \n            @angular/platform-browser : 8.1.0\n        \n            @angular/platform-browser-dynamic : 8.1.0\n        \n            @angular/router : 8.1.0\n        \n            angular-pipes : 9.0.2\n        \n            rxjs : 6.5.2\n        \n            tslib : 1.10.0\n        \n            webdriver-manager : ^12.1.5\n        \n            zone.js : 0.9.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UploadState   (lib/.../upload.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/ngx-fileupload/model/upload.ts\n    \n        \n            \n                \n                    \n                        \n                        UploadState\n                    \n                \n                        \n                            \n                                 QUEUED\n                            \n                        \n                        \n                            \n                                Value : queued\n                            \n                        \n                        \n                            \n                                 START\n                            \n                        \n                        \n                            \n                                Value : start\n                            \n                        \n                        \n                            \n                                 PROGRESS\n                            \n                        \n                        \n                            \n                                Value : progress\n                            \n                        \n                        \n                            \n                                 UPLOADED\n                            \n                        \n                        \n                            \n                                Value : uploaded\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : canceled\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 INVALID\n                            \n                        \n                        \n                            \n                                Value : invalid\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxFileUploadModule\n\n\n\ncluster_NgxFileUploadModule_declarations\n\n\n\ncluster_NgxFileUploadModule_exports\n\n\n\n\nNgxFileUploadComponent\n\nNgxFileUploadComponent\n\n\n\nNgxFileUploadModule\n\nNgxFileUploadModule\n\nNgxFileUploadModule -->\n\nNgxFileUploadComponent->NgxFileUploadModule\n\n\n\n\n\nNgxFileUploadDirective\n\nNgxFileUploadDirective\n\nNgxFileUploadModule -->\n\nNgxFileUploadDirective->NgxFileUploadModule\n\n\n\n\n\nNgxFileUploadItemComponent\n\nNgxFileUploadItemComponent\n\nNgxFileUploadModule -->\n\nNgxFileUploadItemComponent->NgxFileUploadModule\n\n\n\n\n\nNgxFileUploadComponent \n\nNgxFileUploadComponent \n\nNgxFileUploadComponent  -->\n\nNgxFileUploadModule->NgxFileUploadComponent \n\n\n\n\n\nNgxFileUploadDirective \n\nNgxFileUploadDirective \n\nNgxFileUploadDirective  -->\n\nNgxFileUploadModule->NgxFileUploadDirective \n\n\n\n\n\nNgxFileUploadItemComponent \n\nNgxFileUploadItemComponent \n\nNgxFileUploadItemComponent  -->\n\nNgxFileUploadModule->NgxFileUploadItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxFileUploadModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NGX_FILEUPLOAD_VALIDATOR   (lib/.../validation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/ngx-fileupload/services/validation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_FILEUPLOAD_VALIDATOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\"Upload validation Service\")\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
