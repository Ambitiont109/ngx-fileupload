var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/FileUpload.html",[0,0.248,1,0.714]],["body/classes/FileUpload.html",[0,0.172,1,1.132,2,1.099,3,0.264,4,0.264,5,0.569,6,0.318,7,3.128,8,1.279,9,1.099,10,1.264,11,2.294,12,0.217,13,1.264,14,1.187,15,2.805,16,1.697,17,3.079,18,2.592,19,1.405,20,1.931,21,2.392,22,1.444,23,1.883,24,2.592,25,1.205,26,0.751,27,3.305,28,2.081,29,1.534,30,1.883,31,2.327,32,1.444,33,0.735,34,0.052,35,0.782,36,0.264,37,0.645,38,3.079,39,1.883,40,1.174,41,2.592,42,2.392,43,1.096,44,1.337,45,1.883,46,1.132,47,2.294,48,0.935,49,0.975,50,1.405,51,1.883,52,1.883,53,2.294,54,2.763,55,2.763,56,2.229,57,1.232,58,2.294,59,1.883,60,2.763,61,1.337,62,2.294,63,2,64,1.883,65,1.883,66,3.476,67,3.079,68,2,69,1.003,70,2.763,71,1.519,72,2.294,73,2.294,74,2.763,75,1.099,76,2.294,77,0.956,78,1.279,79,2.294,80,1.099,81,0.566,82,0.837,83,0.399,84,0.09,85,1.66,86,0.747,87,2.926,88,1.931,89,1.279,90,1.519,91,1.153,92,0.9,93,1.519,94,2.763,95,1.519,96,2.294,97,1.519,98,2.294,99,0.645,100,3.937,101,1.264,102,2.294,103,1.519,104,1.519,105,2.327,106,1.099,107,1.099,108,0.837,109,1.519,110,1.519,111,2.294,112,2.763,113,1.308,114,2.294,115,2.294,116,1.519,117,3.079,118,1.931,119,3.305,120,1.519,121,2.294,122,1.477,123,1.519,124,0.645,125,1.519,126,1.099,127,0.495,128,2,129,0.837,130,0.9,131,2.294,132,1.519,133,1.519,134,1.519,135,1.519,136,1.66,137,0.855,138,1.519,139,1.519,140,1.279,141,1.519,142,1.519,143,2.294,144,1.519,145,1.66,146,1.519,147,1.519,148,1.519,149,2.327,150,1.519,151,1.519,152,2.763,153,1.519,154,1.519,155,1.519,156,1.519,157,1.519,158,1.519,159,1.519,160,1.519,161,1.519,162,1.519,163,0.645,164,1.519,165,1.519,166,1.519,167,1.519,168,1.519,169,1.519,170,1.519,171,0.645,172,1.519,173,1.519,174,1.519,175,0.837,176,1.519,177,1.519,178,1.519,179,1.519,180,1.519,181,1.519,182,1.519,183,1.519,184,1.279,185,1.519,186,1.519,187,0.017,188,0.026,189,0.017]],["title/interfaces/FileUploadItemContext.html",[84,0.13,190,1.586]],["body/interfaces/FileUploadItemContext.html",[0,0.271,1,1.378,3,0.417,4,0.417,5,0.507,6,0.205,12,0.342,14,1.143,25,1.166,26,0.772,34,0.052,36,0.551,40,1.017,44,1.158,46,0.78,57,0.892,68,2.293,69,1.231,82,1.319,83,0.551,84,0.143,91,0.677,92,1.032,107,1.733,108,1.319,113,1.017,127,1.342,136,1.733,187,0.027,188,0.036,189,0.027,190,2.57,191,1.017,192,1.733,193,2.015,194,1.533,195,3.931,196,2.379,197,1.606,198,1.533,199,3.168,200,2.57,201,2.394,202,2.989,203,2.989,204,2.667,205,2.015,206,1.017,207,1.733,208,2.394,209,2.394,210,2.989,211,1.733,212,2.989,213,2.667,214,2.015,215,2.394,216,2.015,217,2.394,218,1.158,219,2.015,220,3.181,221,2.293,222,3.168,223,2.394,224,3.168,225,3.168,226,2.394,227,3.168,228,2.394,229,2.394,230,1.346,231,2.394,232,2.394,233,2.394,234,2.394,235,2.394,236,1.733,237,0.892,238,2.394,239,2.394,240,2.394,241,2.015,242,2.394,243,2.015,244,2.015,245,2.394,246,2.394,247,2.394,248,3.168,249,2.394,250,2.394,251,2.394,252,2.394,253,2.394,254,2.394,255,2.394,256,2.394]],["title/interfaces/IDataNode.html",[84,0.13,257,1.207]],["body/interfaces/IDataNode.html",[0,0.211,3,0.324,4,0.324,5,0.58,6,0.228,10,1.026,14,1.236,16,1.468,19,1.132,25,1.15,26,0.454,29,0.791,34,0.052,35,0.754,36,0.324,40,1.132,43,0.961,46,0.868,48,0.88,49,1.132,50,1.703,57,1.393,61,1.289,81,1.339,83,0.591,84,0.185,86,1.282,91,1.114,99,1.132,101,1.026,113,0.791,122,1.795,124,1.132,127,1.013,129,1.468,130,0.606,137,0.694,163,1.636,171,1.132,175,1.026,187,0.021,188,0.03,189,0.021,191,0.791,197,1.132,230,1.767,237,0.993,257,1.714,258,1.026,259,2.308,260,1.468,261,2.308,262,1.347,263,2.169,264,2.849,265,1.871,266,2.252,267,2.252,268,2.252,269,2.169,270,1.347,271,0.791,272,1.347,273,1.347,274,1.347,275,1.347,276,1.347,277,1.347,278,1.172,279,1.172,280,1.347,281,1.928,282,1.347,283,1.928,284,1.347,285,1.347,286,1.928,287,1.347,288,1.347,289,1.347,290,1.347,291,1.347,292,1.928,293,1.347,294,1.928,295,1.347,296,1.928,297,1.172,298,2.458,299,1.347,300,1.928,301,1.347,302,1.347,303,1.928,304,1.347,305,1.347,306,1.928,307,1.347,308,1.928,309,1.347,310,1.928,311,1.505,312,1.928,313,1.347,314,1.347,315,1.347,316,1.347,317,1.347,318,1.347,319,1.347,320,1.347,321,1.347,322,1.347,323,1.347,324,1.347]],["title/components/NgxFileUploadComponent.html",[198,1.06,325,1.207]],["body/components/NgxFileUploadComponent.html",[0,0.151,1,1.355,3,0.444,4,0.233,5,0.553,6,0.314,12,0.191,13,1.146,14,1.146,15,1.505,21,1.505,25,1.177,26,0.702,29,1.516,33,1.235,34,0.052,35,1.009,36,0.575,37,1.326,42,1.847,43,0.722,44,1.509,46,0.938,57,0.498,63,1.505,69,1.161,77,0.841,80,0.967,81,0.498,82,0.736,83,0.233,85,2.258,86,0.677,89,1.125,91,0.588,92,0.831,105,1.125,106,0.967,108,1.406,118,1.125,122,0.568,124,0.884,126,2.084,127,0.938,128,1.505,130,0.435,137,1.073,145,1.505,149,1.751,171,1.224,187,0.015,188,0.024,189,0.015,192,2.651,194,1.006,198,1.509,200,2.496,202,2.149,206,0.568,207,0.967,210,2.149,211,2.258,212,3.261,213,2.424,214,1.751,216,1.751,218,0.647,220,1.125,221,2.084,230,0.884,236,1.505,237,0.775,260,0.736,265,0.736,271,1.747,311,0.647,325,1.587,326,1.751,327,1.336,328,1.336,329,1.336,330,1.336,331,1.125,332,3.165,333,2.578,334,3.304,335,2.578,336,2.578,337,2.578,338,1.751,339,2.552,340,3.869,341,2.552,342,2.391,343,1.847,344,1.657,345,2.88,346,1.657,347,2.578,348,2.578,349,1.657,350,2.88,351,2.079,352,1.657,353,2.079,354,1.751,355,2.079,356,2.079,357,2.578,358,3.571,359,1.657,360,2.578,361,4.542,362,3.571,363,2.578,364,2.578,365,2.578,366,2.578,367,2.578,368,2.578,369,2.578,370,2.578,371,2.578,372,1.657,373,2.578,374,2.552,375,2.079,376,2.578,377,1.657,378,2.88,379,2.079,380,2.079,381,1.657,382,2.578,383,1.336,384,3.165,385,1.657,386,1.657,387,1.336,388,1.657,389,1.657,390,2.578,391,1.657,392,1.657,393,1.657,394,2.578,395,2.258,396,1.657,397,1.657,398,1.657,399,1.125,400,1.657,401,1.657,402,1.657,403,1.657,404,1.657,405,1.657,406,1.657,407,2.578,408,1.657,409,2.079,410,1.657,411,1.657,412,1.657,413,1.657,414,1.657,415,1.657,416,1.657,417,1.657,418,1.657,419,2.578,420,2.578,421,2.578,422,2.578,423,1.336,424,2.079,425,1.336,426,1.336,427,1.336,428,1.336,429,1.125,430,3.304,431,4.012,432,2.88,433,2.079,434,2.079,435,1.657,436,2.079,437,2.578,438,3.814,439,3.566,440,2.079,441,1.657,442,2.578,443,1.657,444,1.657,445,1.336,446,1.657,447,1.657,448,1.657,449,2.079,450,2.552,451,1.336,452,2.88,453,2.552,454,2.552,455,2.88,456,1.657,457,2.079,458,2.079,459,2.552,460,2.079,461,2.88,462,1.657,463,1.657,464,2.552,465,2.552,466,2.552,467,2.552,468,1.657,469,1.336,470,1.657,471,1.657,472,1.336,473,3.165,474,2.88,475,2.552,476,1.657,477,1.336,478,1.336,479,2.552,480,1.336,481,1.336,482,1.657,483,1.336,484,2.079,485,1.336,486,1.657,487,1.336,488,1.336,489,1.657,490,1.657,491,2.578,492,1.336,493,1.657,494,1.657,495,0.967,496,2.079,497,2.079,498,0.736,499,2.88,500,1.336,501,1.336,502,1.125,503,0.647,504,1.125,505,1.336]],["title/directives/NgxFileUploadDirective.html",[498,1.207,503,1.06]],["body/directives/NgxFileUploadDirective.html",[0,0.157,1,0.956,3,0.241,4,0.241,5,0.577,6,0.335,9,1.002,12,0.198,13,1.178,14,1.162,15,2.124,21,1.002,22,1.345,24,2.822,25,1.162,26,0.521,28,1.345,29,1.636,31,1.799,33,0.67,34,0.052,35,0.83,36,0.454,37,1.109,41,1.799,42,1.889,43,0.738,44,1.263,46,0.696,48,0.605,49,1.109,63,1.547,69,1.138,75,1.002,77,0.872,78,1.166,80,1.002,81,0.516,82,0.763,83,0.241,85,2.124,86,0.696,87,1.166,88,1.166,91,1.07,92,0.956,106,1.002,108,2.205,122,0.908,124,0.908,126,2.124,127,0.956,128,1.547,130,1.175,137,1.094,145,2.124,171,0.588,187,0.024,188,0.024,189,0.016,198,0.67,200,2.295,203,2.471,204,1.799,205,1.166,206,0.588,207,1.002,211,1.547,219,1.799,221,1.547,230,0.908,236,2.426,237,0.516,241,1.166,243,1.799,244,2.471,263,0.763,271,1.109,278,1.345,279,1.345,331,1.166,334,3.849,338,1.799,339,2.61,341,2.61,342,2.124,343,1.547,345,3.352,350,2.61,351,2.137,353,2.137,354,1.799,355,2.137,356,2.137,374,2.61,375,1.384,378,2.137,379,3.171,380,3.493,383,1.384,395,1.889,409,1.384,429,1.799,469,3.493,498,1.748,502,1.166,503,1.42,504,2.471,506,3.907,507,1.384,508,3.236,509,3.639,510,3.639,511,3.639,512,3.639,513,2.137,514,2.137,515,2.65,516,1.717,517,3.236,518,3.639,519,2.529,520,2.271,521,1.717,522,1.717,523,1.717,524,2.65,525,1.717,526,1.717,527,2.61,528,1.384,529,1.717,530,2.65,531,2.65,532,1.717,533,3.639,534,1.717,535,2.65,536,1.717,537,1.717,538,1.717,539,2.65,540,3.639,541,1.717,542,2.65,543,2.65,544,1.717,545,2.65,546,1.717,547,1.717,548,0.872,549,1.717,550,1.717,551,1.717,552,1.717,553,1.717,554,2.65,555,3.236,556,1.717,557,2.65,558,1.717,559,1.717,560,1.717,561,1.717,562,1.717,563,1.717,564,1.717,565,1.717,566,1.717,567,1.717,568,1.717,569,1.717,570,1.717,571,1.717,572,1.717,573,3.236,574,1.717,575,1.717,576,1.717,577,1.717,578,1.717,579,1.717,580,1.717,581,3.639,582,1.717,583,1.717,584,1.717,585,2.65,586,1.717,587,1.717,588,1.717,589,1.717,590,1.717,591,1.717,592,1.717,593,1.717,594,1.717,595,1.717,596,1.717,597,1.717,598,1.717,599,1.717,600,1.717,601,1.717,602,2.65,603,1.717,604,1.717,605,1.717,606,1.717,607,1.717,608,1.717,609,1.717,610,1.717,611,1.717,612,1.717,613,1.384,614,1.717,615,1.717,616,1.717,617,1.717,618,1.717,619,1.717,620,1.717,621,1.717,622,1.717,623,1.717,624,1.717]],["title/components/NgxFileUploadItemComponent.html",[198,1.06,218,1.06]],["body/components/NgxFileUploadItemComponent.html",[0,0.157,1,1.387,3,0.241,4,0.241,5,0.453,6,0.317,9,1.002,12,0.305,14,1.07,20,1.799,25,1.217,26,0.521,29,1.533,33,1.034,34,0.052,35,0.897,36,0.454,37,0.908,40,1.109,43,0.605,44,1.263,46,0.451,48,0.392,57,0.973,68,2.295,69,1.092,82,0.763,83,0.372,84,0.082,91,0.392,92,0.696,107,1.002,108,1.178,113,0.588,127,1.138,136,1.547,137,0.797,140,1.166,163,0.908,184,1.166,187,0.016,188,0.024,189,0.016,190,1.889,192,2.68,193,1.166,194,1.034,195,2.137,196,1.345,197,0.908,198,1.263,199,2.61,200,1.889,201,1.384,202,2.471,203,2.471,204,1.799,205,1.166,206,0.588,207,1.002,208,1.384,209,1.384,210,2.822,211,2.295,212,3.184,213,3.431,214,1.799,215,2.137,216,1.799,217,2.61,218,1.42,219,1.799,220,3.369,221,2.295,222,3.171,223,2.61,224,3.171,225,2.61,226,2.137,227,3.352,228,2.61,229,2.61,230,0.908,231,1.384,232,1.384,233,1.384,234,1.384,235,2.137,236,2.124,237,0.797,238,2.137,239,2.137,240,2.137,241,1.166,242,1.384,243,1.799,244,1.166,245,1.384,246,1.384,247,1.384,248,2.61,249,1.384,250,1.384,251,1.384,252,1.384,253,1.384,254,1.384,255,1.384,256,1.384,260,1.178,265,1.617,271,1.485,297,1.345,311,1.42,325,0.763,326,1.799,327,1.384,328,1.384,329,1.384,331,1.166,338,1.799,342,1.002,354,1.166,395,1.547,423,1.384,424,2.935,425,1.384,426,1.384,427,1.384,428,1.384,429,1.166,430,3.171,431,3.702,432,2.137,433,1.384,434,2.935,436,1.384,438,3.702,439,3.171,440,2.61,445,2.137,449,3.171,450,3.171,451,2.137,452,2.935,453,1.384,454,1.384,455,1.384,457,2.137,458,1.384,459,1.384,460,1.384,461,1.384,464,2.935,465,3.171,466,3.171,467,2.61,472,2.137,474,2.137,475,1.384,477,2.61,478,2.137,479,2.935,480,3.171,481,1.384,483,1.384,484,3.493,485,2.137,487,2.137,488,2.137,492,1.384,495,1.002,496,2.137,497,2.137,498,0.763,499,2.935,500,1.384,501,1.384,502,1.166,503,0.67,504,1.166,505,1.384,513,2.137,514,2.137,527,1.384,528,1.384,625,2.65,626,2.65,627,1.717,628,1.717,629,1.717,630,1.717,631,1.717,632,1.717,633,2.65,634,2.65,635,2.137,636,2.65,637,3.236,638,3.236,639,1.717,640,1.717,641,1.717,642,1.717,643,1.717,644,1.717,645,3.639,646,1.717,647,1.717,648,1.717,649,3.236,650,2.65,651,1.717,652,1.717,653,1.717,654,1.717,655,2.65,656,1.717,657,1.717,658,1.717,659,1.717,660,1.717,661,1.717,662,1.717,663,1.717,664,1.717,665,1.717,666,2.65,667,3.236,668,2.65,669,2.65,670,2.65,671,2.65,672,2.65,673,2.65,674,2.65,675,1.717,676,1.717,677,1.717,678,1.717,679,2.65,680,1.717,681,1.717,682,1.717,683,1.717,684,1.717,685,1.717,686,1.717,687,1.717,688,1.717,689,1.717,690,1.717,691,1.717]],["title/modules/NgxFileUploadModule.html",[692,1.844,693,1.586]],["body/modules/NgxFileUploadModule.html",[0,0.311,1,0.895,3,0.478,4,0.478,5,0.494,6,0.235,34,0.052,56,1.989,69,1.402,75,1.989,83,0.478,187,0.031,188,0.039,189,0.031,206,1.168,218,2.14,325,2.437,399,2.313,495,1.989,503,2.14,692,2.313,693,3.215,694,2.313,695,1.989,696,3.792,697,2.747,698,2.747,699,3.792,700,2.747,701,2.747,702,2.747,703,3.463,704,3.407,705,3.407,706,4.294,707,4.294,708,2.747,709,4.294,710,4.294,711,2.747,712,3.407,713,4.294,714,2.747,715,2.747,716,4.294,717,3.407,718,3.407,719,3.407,720,3.407,721,3.407]],["title/interfaces/NgxFileUploadValidator.html",[84,0.13,520,1.379]],["body/interfaces/NgxFileUploadValidator.html",[3,0.553,4,0.553,5,0.61,6,0.324,12,0.453,13,2.085,29,1.35,32,1.999,33,1.536,34,0.051,35,0.899,36,0.553,37,1.35,43,0.899,48,0.899,50,1.35,69,1.034,83,0.704,84,0.225,86,1.034,92,1.034,99,1.35,130,1.034,187,0.036,188,0.043,189,0.036,191,1.35,206,1.35,519,2.299,520,2.382,548,1.999,613,3.784,722,2.299,723,3.784,724,3.938,725,2.926,726,3.176,727,2.674]],["title/interfaces/Response.html",[84,0.13,269,1.207]],["body/interfaces/Response.html",[0,0.208,3,0.32,4,0.32,5,0.579,6,0.158,10,1.013,12,0.262,14,1.234,16,1.455,19,1.122,25,1.147,26,0.448,34,0.052,35,0.747,36,0.538,40,1.122,43,0.956,46,0.86,48,0.874,49,1.122,50,1.698,57,1.388,61,1.278,81,1.333,83,0.588,84,0.184,86,1.249,91,1.11,99,1.122,101,1.013,113,0.782,122,1.792,124,1.122,127,1.006,129,1.455,130,0.599,137,1.259,163,1.63,171,1.122,175,1.861,187,0.021,188,0.03,189,0.021,191,0.782,194,1.278,197,1.122,230,1.763,237,0.984,257,1.861,258,1.013,260,1.013,262,1.331,263,2.162,264,2.935,265,1.861,266,2.237,267,2.237,268,2.237,269,2.202,270,1.331,271,0.782,272,1.331,273,1.331,274,1.331,275,1.331,276,1.331,277,1.331,278,1.158,279,1.158,280,1.331,281,1.912,282,1.331,283,1.912,284,1.331,285,1.331,286,1.912,287,1.331,288,1.331,289,1.331,290,1.331,291,1.331,292,1.912,293,1.331,294,1.912,295,1.331,296,1.912,297,1.158,298,2.444,299,1.331,300,1.912,301,1.331,302,1.331,303,1.912,304,1.331,305,1.331,306,1.912,307,1.331,308,1.912,309,1.331,310,1.912,311,1.495,312,1.912,313,1.331,314,1.331,315,1.331,316,1.331,317,1.331,318,1.331,319,1.331,320,1.331,321,1.331,322,1.331,323,1.331,324,1.331]],["title/classes/UploadControl.html",[0,0.248,196,1.379]],["body/classes/UploadControl.html",[0,0.336,1,1.391,2,2.145,3,0.516,4,0.516,5,0.518,6,0.359,12,0.423,13,2,14,1.258,18,3.443,19,1.738,22,2.285,25,0.839,29,1.738,33,1.434,34,0.051,35,0.839,36,0.516,37,1.26,43,1.11,44,1.898,69,0.965,83,0.516,91,0.839,187,0.034,188,0.041,189,0.034,196,2.285,728,4.196,729,2.964,730,5.071,731,3.676,732,3.676,733,3.676,734,3.676,735,3.676,736,3.676,737,3.676,738,3.676]],["title/interfaces/UploadData.html",[84,0.13,197,0.931]],["body/interfaces/UploadData.html",[0,0.198,3,0.304,4,0.304,5,0.572,6,0.15,10,0.962,12,0.249,14,1.227,16,1.931,19,1.081,25,1.134,26,0.426,34,0.052,35,0.991,36,0.698,40,1.081,43,0.933,46,0.828,48,0.849,49,1.081,50,1.789,57,1.47,61,1.231,81,1.407,83,0.574,84,0.179,86,1.323,91,1.095,99,1.081,101,0.962,113,0.742,122,1.776,124,1.081,127,0.977,129,1.402,130,0.569,137,0.651,163,1.703,171,1.081,175,0.962,187,0.02,188,0.029,189,0.02,191,0.742,194,1.231,197,1.275,230,1.745,237,0.948,257,1.402,258,0.962,260,0.962,262,1.264,263,2.238,264,3.026,265,2.08,266,2.647,267,2.647,268,2.647,269,2.132,270,1.264,271,0.742,272,1.264,273,1.264,274,1.264,275,1.264,276,1.264,277,1.264,278,1.099,279,1.099,280,1.264,281,1.841,282,1.264,283,1.841,284,1.264,285,1.264,286,1.841,287,1.264,288,1.264,289,1.264,290,1.264,291,1.264,292,1.841,293,1.264,294,1.841,295,1.264,296,1.841,297,1.099,298,2.386,299,1.264,300,1.841,301,1.264,302,1.264,303,1.841,304,1.264,305,1.264,306,1.841,307,1.264,308,1.841,309,1.264,310,1.841,311,1.452,312,1.841,313,1.264,314,1.264,315,1.264,316,1.264,317,1.264,318,1.264,319,1.264,320,1.264,321,1.264,322,1.264,323,1.264,324,1.264]],["title/classes/UploadModel.html",[0,0.248,26,0.534]],["body/classes/UploadModel.html",[0,0.161,2,1.028,3,0.247,4,0.247,5,0.599,6,0.363,9,1.028,10,1.201,12,0.203,13,1.201,14,1.209,16,1.201,19,0.926,20,1.835,22,0.894,25,1.188,26,0.531,29,1.794,33,1.76,34,0.052,35,1.077,36,0.633,37,1.546,40,1.264,43,1.217,44,1.706,46,0.864,48,0.908,49,0.926,50,1.765,57,1.444,61,1.055,81,1.262,83,0.518,84,0.158,86,1.262,91,1.029,99,1.264,101,0.783,113,0.604,122,1.726,124,0.926,127,1.103,129,1.461,130,0.463,137,0.529,163,1.585,171,1.264,175,0.783,187,0.016,188,0.025,189,0.016,197,1.127,230,1.753,237,0.812,257,1.201,258,0.783,260,0.783,262,1.028,263,2.193,264,2.845,265,1.866,266,2.153,267,2.322,268,2.322,269,2.216,270,1.028,271,0.604,272,1.028,273,1.028,274,1.028,275,1.028,276,1.028,277,1.028,278,1.372,279,1.372,280,1.578,281,1.578,282,1.578,283,2.322,284,1.578,285,1.028,286,2.322,287,1.028,288,1.578,289,1.92,290,1.028,291,1.028,292,1.578,293,1.028,294,1.578,295,1.028,296,1.578,297,1.372,298,2.633,299,1.028,300,1.578,301,1.578,302,1.028,303,1.578,304,1.92,305,1.028,306,1.578,307,1.028,308,1.578,309,1.578,310,1.578,311,1.283,312,1.578,313,1.028,314,1.028,315,1.028,316,1.028,317,2.153,318,1.028,319,1.028,320,1.028,321,1.028,322,1.028,323,1.028,324,1.028,739,1.762,740,1.762,741,1.762,742,1.762,743,1.762,744,1.762,745,1.762,746,1.762,747,1.762,748,1.762,749,1.762,750,1.762,751,1.762,752,1.762,753,1.762,754,1.762,755,1.762,756,1.762,757,1.762,758,1.762,759,1.762,760,1.762,761,1.762,762,1.762,763,1.762,764,1.762,765,1.762,766,1.762,767,1.762,768,1.762,769,1.762,770,1.762,771,1.762,772,1.762,773,1.762,774,1.762,775,1.762,776,1.762,777,1.762,778,1.762]],["title/interfaces/UploadOptions.html",[28,1.379,84,0.13]],["body/interfaces/UploadOptions.html",[0,0.193,1,0.962,3,0.296,4,0.296,5,0.548,6,0.146,7,1.432,8,1.432,10,0.937,11,1.7,12,0.243,14,1.059,15,2.509,16,0.937,17,1.7,18,1.432,19,1.06,21,1.806,22,1.07,24,2.1,25,1.186,26,0.608,27,2.955,28,2.049,31,2.1,32,1.07,34,0.052,35,0.706,36,0.566,37,1.06,38,2.955,40,1.06,41,2.488,42,2.356,43,0.706,46,1.129,47,1.7,48,0.921,49,0.723,50,1.256,53,1.7,54,2.495,55,2.495,56,1.806,57,1.101,58,1.7,60,2.495,61,1.207,62,1.7,63,1.806,66,3.255,67,2.955,68,1.806,69,1.06,70,2.955,71,1.7,72,2.495,73,2.495,74,2.955,75,1.231,76,2.495,77,1.07,78,1.432,79,2.495,80,1.231,81,0.634,82,0.937,83,0.434,84,0.101,85,2.509,86,1.06,87,3.299,88,2.1,89,1.432,90,1.7,91,1.177,92,0.962,93,1.7,94,2.955,95,1.7,96,2.495,97,1.7,98,2.495,99,0.723,100,4.038,101,1.375,102,2.495,103,1.7,104,1.7,105,2.488,106,1.231,107,1.231,108,0.937,109,1.7,110,1.7,111,2.495,112,2.955,113,1.383,114,2.495,115,2.495,116,1.7,117,3.255,118,2.1,119,3.466,120,1.7,121,2.495,122,1.54,123,1.7,124,0.723,125,1.7,126,1.231,127,0.554,128,2.139,129,0.937,130,0.962,131,2.495,132,1.7,133,1.7,134,1.7,135,1.7,136,1.806,137,0.93,138,1.7,139,1.7,140,1.432,141,1.7,142,1.7,143,2.495,144,1.7,145,1.806,146,1.7,147,1.7,148,1.7,149,2.488,150,1.7,151,1.7,152,2.955,153,1.7,154,1.7,155,1.7,156,1.7,157,1.7,158,1.7,159,1.7,160,1.7,161,1.7,162,1.7,163,0.723,164,1.7,165,1.7,166,1.7,167,1.7,168,1.7,169,1.7,170,1.7,171,0.723,172,1.7,173,1.7,174,1.7,175,0.937,176,1.7,177,1.7,178,1.7,179,1.7,180,1.7,181,1.7,182,1.7,183,1.7,184,1.432,185,1.7,186,1.7,187,0.019,188,0.028,189,0.019,191,0.723,194,1.207,779,3.094]],["title/interfaces/ValidationResult.html",[84,0.13,725,1.586]],["body/interfaces/ValidationResult.html",[3,0.556,4,0.556,5,0.542,6,0.274,12,0.456,32,2.01,34,0.051,36,0.661,48,1.187,50,1.722,69,1.04,83,0.705,84,0.226,86,1.32,92,1.04,99,1.782,130,1.04,187,0.036,188,0.043,189,0.036,191,1.357,194,1.837,206,1.357,519,2.312,520,2.01,548,2.01,722,2.312,723,3.194,725,2.933,726,3.194,727,2.689]],["title/coverage.html",[780,2.985]],["body/coverage.html",[0,0.438,1,1.258,5,0.408,6,0.384,7,2.989,8,2.989,26,0.697,28,1.8,34,0.051,36,0.498,84,0.256,92,0.931,187,0.032,188,0.04,189,0.032,190,2.069,192,2.795,193,2.989,196,1.8,197,1.215,198,1.718,218,1.383,257,1.575,258,2.225,269,1.575,271,1.858,311,1.868,325,1.575,330,2.859,498,1.575,503,1.383,506,2.859,507,2.859,520,1.8,548,1.8,722,2.795,725,2.069,728,2.859,729,2.859,780,2.859,781,3.545,782,3.545,783,3.545,784,3.545,785,5.008,786,3.545,787,3.545,788,3.545,789,3.545,790,4.402,791,3.545,792,3.545,793,3.545,794,3.545,795,3.545,796,3.545,797,3.545,798,3.545]],["title/dependencies.html",[695,1.906,799,2.272]],["body/dependencies.html",[34,0.051,77,2.045,187,0.037,188,0.043,189,0.037,206,1.381,387,3.249,695,2.352,708,3.249,711,3.836,714,3.249,715,3.249,800,5.502,801,4.029,802,4.029,803,3.836,804,4.029,805,4.029,806,4.029,807,4.029,808,4.029,809,4.029,810,4.029,811,4.029,812,4.029,813,4.029,814,4.029]],["title/miscellaneous/enumerations.html",[815,1.326,816,2.633]],["body/miscellaneous/enumerations.html",[6,0.283,12,0.472,19,1.647,34,0.051,48,1.097,49,1.647,61,1.875,81,1.444,163,1.647,187,0.037,188,0.044,189,0.037,237,1.444,258,1.822,263,2.136,343,3.199,815,2.393,816,3.306,817,4.099]],["title/index.html",[12,0.313,818,2.191]],["body/index.html",[2,2.273,34,0.05,56,2.273,187,0.036,188,0.043,189,0.036,191,1.335,218,2.117,325,2.411,326,2.644,395,2.721,399,2.644,495,2.273,498,1.73,503,2.117,635,3.14,692,3.165,693,3.244,695,2.273,696,3.14,697,3.14,698,3.14,699,3.14,700,3.14,701,3.14,702,3.14,703,3.759,818,3.14,819,3.894,820,3.894]],["title/modules.html",[694,2.513]],["body/modules.html",[34,0.045,187,0.04,188,0.045,189,0.04,693,2.542,694,2.957,803,3.512,821,4.355,822,4.355,823,4.355]],["title/miscellaneous/variables.html",[815,1.326,824,2.633]],["body/miscellaneous/variables.html",[6,0.295,12,0.492,32,2.17,34,0.047,92,1.123,187,0.039,188,0.045,189,0.039,342,2.495,343,2.495,519,2.495,548,2.5,722,2.495,727,2.902,815,2.495,824,3.447,825,4.275]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":271,"title":{},"body":{"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"coverage.html":{}}}],["0.9.1",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":395,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"index.html":{}}}],["1.10.0",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":311,"title":{},"body":{"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"coverage.html":{}}}],["12.1.5",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["12/12",{"_index":788,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":653,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["1px",{"_index":439,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["1rem",{"_index":451,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["2",{"_index":635,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{},"index.html":{}}}],["2.5rem",{"_index":470,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["25",{"_index":684,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["25,safari5.1",{"_index":657,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["25rem",{"_index":637,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["2e2e2e",{"_index":486,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["2rem",{"_index":690,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["3",{"_index":819,"title":{},"body":{"index.html":{}}}],["3/3",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["3rem",{"_index":491,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["40",{"_index":473,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["4rem",{"_index":475,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["5",{"_index":678,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["50",{"_index":480,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["50%,#f7f7f7",{"_index":655,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["5rem",{"_index":450,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["6",{"_index":658,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["6.5.2",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":820,"title":{},"body":{"index.html":{}}}],["7/7",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["75rem",{"_index":673,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["8.1.0",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["8/9",{"_index":787,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["8rem",{"_index":485,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["9.0.2",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["abort",{"_index":62,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["absolute",{"_index":676,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["accessors",{"_index":20,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadItemComponent.html":{},"classes/UploadModel.html":{}}}],["action",{"_index":482,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["actions",{"_index":671,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["actual_component",{"_index":505,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["add",{"_index":469,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["added",{"_index":378,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["affect",{"_index":239,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["again",{"_index":55,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["align",{"_index":459,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["allowed",{"_index":688,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["angular",{"_index":714,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":387,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"dependencies.html":{}}}],["angular/common",{"_index":708,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":75,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/UploadOptions.html":{}}}],["angular/compiler",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":206,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":711,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":385,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["animate(\".5s",{"_index":397,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["animation",{"_index":361,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["animationend",{"_index":335,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["animationend($event",{"_index":357,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["animationevent",{"_index":358,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["animations",{"_index":391,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["anymore",{"_index":615,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["anything",{"_index":240,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["arguments",{"_index":527,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["array.from(event.datatransfer.files",{"_index":584,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["array.from(this.fileselect.files",{"_index":624,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["array.isarray(validation",{"_index":563,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["assets//scss/variables",{"_index":427,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["assets/fonts",{"_index":426,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["assets/scss/icons",{"_index":428,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["auto",{"_index":435,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["avoid",{"_index":366,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["background",{"_index":484,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["basis",{"_index":448,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["begin",{"_index":545,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["behaviorsubject",{"_index":76,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["behaviorsubject(this.upload",{"_index":97,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["bind",{"_index":229,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["block",{"_index":483,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["body",{"_index":137,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["boolean",{"_index":50,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["bootstrap",{"_index":697,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["border",{"_index":438,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["bottom",{"_index":453,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["bound",{"_index":225,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["box",{"_index":442,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["break",{"_index":152,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["broken",{"_index":543,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["browse",{"_index":823,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":803,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":712,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["browseranimationsmodule",{"_index":710,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["browsers",{"_index":647,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["build",{"_index":125,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["button",{"_index":683,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["byte",{"_index":284,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["bytes",{"_index":297,"title":{},"body":{"interfaces/IDataNode.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["cancel",{"_index":15,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["cancelall",{"_index":510,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["canceled",{"_index":237,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"miscellaneous/enumerations.html":{}}}],["case",{"_index":149,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"interfaces/UploadOptions.html":{}}}],["causes",{"_index":410,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["center",{"_index":461,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["change",{"_index":21,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["changed",{"_index":68,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/UploadOptions.html":{}}}],["child",{"_index":455,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["chrome10",{"_index":656,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["chrome26",{"_index":663,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["class",{"_index":0,"title":{"classes/FileUpload.html":{},"classes/UploadControl.html":{},"classes/UploadModel.html":{}},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/FileUpload.html":{},"classes/UploadControl.html":{},"classes/UploadModel.html":{},"index.html":{}}}],["clean",{"_index":421,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["cleanall",{"_index":511,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["click",{"_index":236,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["click(event",{"_index":528,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["cluster_ngxfileuploadmodule",{"_index":700,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["cluster_ngxfileuploadmodule_declarations",{"_index":701,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["cluster_ngxfileuploadmodule_exports",{"_index":702,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["code",{"_index":175,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["color",{"_index":464,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["colors",{"_index":488,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["column",{"_index":433,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["commonmodule",{"_index":707,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["complete",{"_index":41,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["completed",{"_index":171,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["completes",{"_index":157,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["completeupload",{"_index":180,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["component",{"_index":198,"title":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":500,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["components",{"_index":326,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"index.html":{}}}],["components/ngx",{"_index":716,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["const",{"_index":130,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"classes/UploadControl.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["constructor(file",{"_index":280,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["constructor(fileupload",{"_index":731,"title":{},"body":{"classes/UploadControl.html":{}}}],["constructor(http",{"_index":23,"title":{},"body":{"classes/FileUpload.html":{}}}],["constructor(httpclient",{"_index":516,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["contains",{"_index":47,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["content",{"_index":463,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["context",{"_index":224,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["control",{"_index":209,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["control.ts",{"_index":729,"title":{},"body":{"classes/UploadControl.html":{},"coverage.html":{}}}],["control.ts:13",{"_index":734,"title":{},"body":{"classes/UploadControl.html":{}}}],["control.ts:17",{"_index":735,"title":{},"body":{"classes/UploadControl.html":{}}}],["control.ts:3",{"_index":732,"title":{},"body":{"classes/UploadControl.html":{}}}],["control.ts:9",{"_index":733,"title":{},"body":{"classes/UploadControl.html":{}}}],["coverage",{"_index":780,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":31,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["creates",{"_index":278,"title":{},"body":{"interfaces/IDataNode.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["createupload(file",{"_index":598,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["createuploadbody",{"_index":138,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["ctrl",{"_index":195,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["current",{"_index":40,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["cursor",{"_index":457,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["d2d2d2",{"_index":441,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["dark",{"_index":467,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["dashed",{"_index":471,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["data",{"_index":127,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["declarations",{"_index":696,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["default",{"_index":342,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"classes/UploadControl.html":{},"classes/UploadModel.html":{}}}],["delay",{"_index":389,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["delay(1500",{"_index":414,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["delete",{"_index":179,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["dependencies",{"_index":695,"title":{"dependencies.html":{}},"body":{"modules/NgxFileUploadModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"classes/UploadModel.html":{}}}],["destroyed",{"_index":555,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["diffrent",{"_index":348,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["direction",{"_index":432,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["directive",{"_index":498,"title":{"directives/NgxFileUploadDirective.html":{}},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"coverage.html":{},"index.html":{}}}],["directives",{"_index":502,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["directives/ngx",{"_index":718,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["disabled",{"_index":492,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["display",{"_index":430,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["documentation",{"_index":781,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":328,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["done",{"_index":362,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["dont",{"_index":238,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["download",{"_index":54,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["downloads",{"_index":539,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["drag",{"_index":379,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["drag/drop",{"_index":419,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["dragevent",{"_index":533,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["dragover",{"_index":515,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["dragover(event",{"_index":532,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["drop",{"_index":380,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["drop(event",{"_index":536,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["dynamic",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["e4e4e4",{"_index":638,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["ease",{"_index":398,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["edit",{"_index":640,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["editor/#ffffff+50,f7f7f7+100",{"_index":644,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["element",{"_index":497,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["elementref",{"_index":547,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["ellipsis",{"_index":670,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["emits",{"_index":89,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"interfaces/UploadOptions.html":{}}}],["enabled",{"_index":88,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["endpoint",{"_index":524,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["ensure",{"_index":235,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["enter",{"_index":365,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["enum",{"_index":262,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["enumerations",{"_index":816,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":48,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"miscellaneous/enumerations.html":{}}}],["error(iserror",{"_index":299,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["error.message",{"_index":162,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["errors",{"_index":58,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["event",{"_index":108,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/UploadOptions.html":{}}}],["event.loaded",{"_index":167,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["event.preventdefault",{"_index":581,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["event.stoppropagation",{"_index":244,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["event.totaltime",{"_index":404,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["event.type",{"_index":148,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["eventemitter",{"_index":203,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["events",{"_index":136,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/UploadOptions.html":{}}}],["example",{"_index":509,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["export",{"_index":83,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["exportas",{"_index":550,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["exports",{"_index":699,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["f7f7f7",{"_index":651,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["false",{"_index":124,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["fdfdfd",{"_index":645,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["ff16",{"_index":662,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["ff3.6",{"_index":652,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["field",{"_index":345,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["filemodel",{"_index":602,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["filename",{"_index":286,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["files",{"_index":350,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["files.map((file",{"_index":592,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileselect",{"_index":559,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["filesize",{"_index":283,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["filetype",{"_index":289,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["fileuplad",{"_index":719,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["fileuplad.ts",{"_index":507,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"coverage.html":{}}}],["fileuplad.ts:104",{"_index":544,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:111",{"_index":538,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:121",{"_index":541,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:134",{"_index":534,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:143",{"_index":537,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:157",{"_index":529,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:31",{"_index":526,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:41",{"_index":523,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:48",{"_index":525,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:55",{"_index":522,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileuplad.ts:75",{"_index":521,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileupload",{"_index":1,"title":{"classes/FileUpload.html":{}},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"classes/UploadControl.html":{},"interfaces/UploadOptions.html":{},"coverage.html":{}}}],["fileupload'},{'name",{"_index":501,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["fileupload(this.httpclient",{"_index":604,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["fileupload.component",{"_index":720,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["fileupload.component.html",{"_index":333,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.scss",{"_index":332,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.ts",{"_index":330,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"coverage.html":{}}}],["fileupload.component.ts:27",{"_index":346,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.ts:34",{"_index":349,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.ts:41",{"_index":352,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.ts:48",{"_index":344,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.ts:53",{"_index":381,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.ts:68",{"_index":359,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.ts:77",{"_index":377,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload.component.ts:85",{"_index":372,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["fileupload/components/ngx",{"_index":192,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"coverage.html":{}}}],["fileupload/directives/ngx",{"_index":506,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"coverage.html":{}}}],["fileupload/model/upload.ts",{"_index":258,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["fileupload/model/upload.ts:105",{"_index":756,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:112",{"_index":754,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:119",{"_index":760,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:126",{"_index":758,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:133",{"_index":764,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:140",{"_index":762,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:147",{"_index":768,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:154",{"_index":766,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:158",{"_index":772,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:165",{"_index":770,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:169",{"_index":776,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:173",{"_index":774,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:177",{"_index":778,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:186",{"_index":740,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:23",{"_index":261,"title":{},"body":{"interfaces/IDataNode.html":{}}}],["fileupload/model/upload.ts:51",{"_index":739,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:63",{"_index":742,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:70",{"_index":744,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:77",{"_index":746,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:84",{"_index":748,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:91",{"_index":752,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/model/upload.ts:98",{"_index":750,"title":{},"body":{"classes/UploadModel.html":{}}}],["fileupload/ngx",{"_index":704,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["fileupload/services/file",{"_index":7,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{},"coverage.html":{}}}],["fileupload/services/upload",{"_index":728,"title":{},"body":{"classes/UploadControl.html":{},"coverage.html":{}}}],["fileupload/services/validation.ts",{"_index":722,"title":{},"body":{"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fileupload/services/validation.ts:11",{"_index":724,"title":{},"body":{"interfaces/NgxFileUploadValidator.html":{}}}],["fileuploaditemcontext",{"_index":190,"title":{"interfaces/FileUploadItemContext.html":{}},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{},"coverage.html":{}}}],["fill",{"_index":614,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["filter",{"_index":79,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["first",{"_index":490,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["flex",{"_index":431,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["font",{"_index":424,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["footer",{"_index":481,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["form",{"_index":126,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["formdata",{"_index":87,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["formdata.append(label",{"_index":142,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["formdataname",{"_index":339,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["fromstate",{"_index":367,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["get($colors",{"_index":466,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["get($map",{"_index":487,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["getchange",{"_index":64,"title":{},"body":{"classes/FileUpload.html":{}}}],["geterror",{"_index":761,"title":{},"body":{"classes/UploadModel.html":{}}}],["getfile",{"_index":741,"title":{},"body":{"classes/UploadModel.html":{}}}],["getfilename",{"_index":745,"title":{},"body":{"classes/UploadModel.html":{}}}],["getfilesize",{"_index":743,"title":{},"body":{"classes/UploadModel.html":{}}}],["getfiletype",{"_index":747,"title":{},"body":{"classes/UploadModel.html":{}}}],["getisvalid",{"_index":769,"title":{},"body":{"classes/UploadModel.html":{}}}],["getmessage",{"_index":773,"title":{},"body":{"classes/UploadModel.html":{}}}],["getprogress",{"_index":777,"title":{},"body":{"classes/UploadModel.html":{}}}],["getresponse",{"_index":749,"title":{},"body":{"classes/UploadModel.html":{}}}],["gets",{"_index":554,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["getstate",{"_index":753,"title":{},"body":{"classes/UploadModel.html":{}}}],["getsuccess",{"_index":765,"title":{},"body":{"classes/UploadModel.html":{}}}],["getuploaded",{"_index":757,"title":{},"body":{"classes/UploadModel.html":{}}}],["gradient",{"_index":642,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["gradient(to",{"_index":659,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["gradient(top",{"_index":650,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["green",{"_index":689,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["grow",{"_index":447,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["handle",{"_index":145,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["handlefileselect(files",{"_index":591,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["handlehttperror(error",{"_index":161,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["handlehttpevent(event",{"_index":146,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["handleprogress(event",{"_index":164,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["handleresponse(res",{"_index":172,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["handlesent",{"_index":169,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["handleuploadchange",{"_index":336,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["handleuploadchange(upload",{"_index":371,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["haserror",{"_index":16,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["header",{"_index":666,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["height",{"_index":477,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["here",{"_index":420,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["hidden",{"_index":445,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["host",{"_index":429,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["hostlistener",{"_index":205,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["hostlistener(\"click",{"_index":241,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["hostlistener(\"dragover",{"_index":579,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["hostlistener(\"drop",{"_index":582,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["hostlisteners",{"_index":514,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["html",{"_index":496,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["htmlinputelement",{"_index":560,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["http",{"_index":38,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["httpclient",{"_index":24,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["httpclientmodule",{"_index":709,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["httperrorresponse",{"_index":74,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["httpevent",{"_index":70,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["httpeventtype",{"_index":71,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["httpeventtype.response",{"_index":155,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["httpeventtype.sent",{"_index":150,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["httpeventtype.uploadprogress",{"_index":153,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["httpprogressevent",{"_index":72,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["httpresponse",{"_index":73,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["https://colorzilla.com/gradient",{"_index":643,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["https://github.com/angular/angular/issues/23535",{"_index":403,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["icon",{"_index":468,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["icons",{"_index":423,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["idatanode",{"_index":257,"title":{"interfaces/IDataNode.html":{}},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"coverage.html":{}}}],["identifier",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":415,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["ie10",{"_index":661,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["implements",{"_index":219,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["import",{"_index":69,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"classes/UploadControl.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["imports",{"_index":721,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":259,"title":{},"body":{"interfaces/IDataNode.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["inheritdoc",{"_index":251,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["inject",{"_index":546,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["inject(ngx_fileupload_validator",{"_index":561,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["injected",{"_index":556,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["injectiontoken",{"_index":726,"title":{},"body":{"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{}}}],["injectiontoken(\"upload",{"_index":727,"title":{},"body":{"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{},"miscellaneous/variables.html":{}}}],["inner",{"_index":682,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["input",{"_index":200,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["input(\"ngxfileupload",{"_index":552,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["input[type=\"file",{"_index":622,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["inputfield",{"_index":620,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["inputs",{"_index":338,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["instance",{"_index":279,"title":{},"body":{"interfaces/IDataNode.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["interface",{"_index":84,"title":{"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["interfaces",{"_index":191,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"index.html":{}}}],["invalid",{"_index":49,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"miscellaneous/enumerations.html":{}}}],["iscancelable",{"_index":117,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["iserror",{"_index":301,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["isinvalid",{"_index":17,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["issuccess",{"_index":266,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["isvalid",{"_index":267,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["isvalid(valid",{"_index":305,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["item",{"_index":213,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["item.component",{"_index":717,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["item.component.html",{"_index":215,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["item.component.scss",{"_index":217,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["item.component.ts",{"_index":193,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:25",{"_index":630,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["item.component.ts:31",{"_index":627,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["item.component.ts:36",{"_index":629,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["item.component.ts:47",{"_index":626,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["item.component.ts:60",{"_index":628,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["item.component.ts:69",{"_index":625,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["items",{"_index":460,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["itemtemplate",{"_index":340,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["itemtpl",{"_index":223,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["justify",{"_index":462,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["key",{"_index":260,"title":{},"body":{"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["label",{"_index":140,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/UploadOptions.html":{}}}],["last",{"_index":454,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["leave",{"_index":370,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["left",{"_index":679,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["legend",{"_index":495,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["lib/.../upload.ts",{"_index":817,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lib/.../validation.ts",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/ngx",{"_index":6,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["light",{"_index":489,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["lighten(#2e2e2e",{"_index":493,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["lighten(#3e3e3e",{"_index":494,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["lighten(map",{"_index":472,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["line",{"_index":476,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["linear",{"_index":649,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["list",{"_index":409,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["listen",{"_index":595,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["listener",{"_index":530,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["literal",{"_index":779,"title":{},"body":{"interfaces/UploadOptions.html":{}}}],["ln",{"_index":617,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["manager",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["mandatory",{"_index":351,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["map",{"_index":465,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["margin",{"_index":452,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["matching",{"_index":188,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["math.round(progress",{"_index":313,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["means",{"_index":369,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["message",{"_index":268,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["message(msg",{"_index":307,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["metadata",{"_index":331,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/NgxFileUploadValidator.html":{},"classes/UploadControl.html":{},"classes/UploadModel.html":{}}}],["mime",{"_index":288,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["miscellaneous",{"_index":815,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":316,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["model/upload",{"_index":82,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/UploadOptions.html":{}}}],["module",{"_index":692,"title":{"modules/NgxFileUploadModule.html":{}},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["modules",{"_index":694,"title":{"modules.html":{}},"body":{"modules/NgxFileUploadModule.html":{},"modules.html":{}}}],["mouseevent",{"_index":243,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["move",{"_index":315,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["moz",{"_index":648,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["msg",{"_index":309,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["new",{"_index":92,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":107,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/UploadOptions.html":{}}}],["ngmathpipesmodule",{"_index":713,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["ngmodule",{"_index":706,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["ngondestroy",{"_index":567,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["ngoninit",{"_index":252,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["ngx",{"_index":212,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["ngx_fileupload_validator",{"_index":548,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxfileupload",{"_index":504,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["ngxfileuploadcomponent",{"_index":325,"title":{"components/NgxFileUploadComponent.html":{}},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"coverage.html":{},"index.html":{}}}],["ngxfileuploaddirective",{"_index":503,"title":{"directives/NgxFileUploadDirective.html":{}},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"coverage.html":{},"index.html":{}}}],["ngxfileuploaditemcomponent",{"_index":218,"title":{"components/NgxFileUploadItemComponent.html":{}},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"coverage.html":{},"index.html":{}}}],["ngxfileuploadmodule",{"_index":693,"title":{"modules/NgxFileUploadModule.html":{}},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{},"modules.html":{}}}],["ngxfileuploadref",{"_index":551,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["ngxfileuploadvalidator",{"_index":520,"title":{"interfaces/NgxFileUploadValidator.html":{}},"body":{"directives/NgxFileUploadDirective.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["none",{"_index":686,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["notification",{"_index":184,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/UploadOptions.html":{}}}],["notified",{"_index":531,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["notify",{"_index":67,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["notifyobservers",{"_index":185,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["nowrap",{"_index":669,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["null",{"_index":113,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["number",{"_index":264,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["object",{"_index":356,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["observable",{"_index":66,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["observe",{"_index":135,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["observers",{"_index":94,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["of(upload).pipe",{"_index":413,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["old",{"_index":646,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["once",{"_index":540,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["onclick(event",{"_index":586,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["ondestroy",{"_index":508,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["onfiledragover(event",{"_index":580,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["onfiledrop(event",{"_index":583,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["onfileselect(event",{"_index":623,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["oninit",{"_index":199,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["onitemclick(event",{"_index":242,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["onuploadsadd",{"_index":337,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["onuploadsadd(uploads",{"_index":376,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["opacity",{"_index":394,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["opera12",{"_index":664,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["optional",{"_index":37,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"classes/UploadControl.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["options",{"_index":27,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["out",{"_index":399,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["outline",{"_index":685,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["output",{"_index":204,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["outputs",{"_index":513,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["over",{"_index":535,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["overflow",{"_index":434,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["overview",{"_index":818,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":799,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":449,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"classes/UploadControl.html":{},"classes/UploadModel.html":{}}}],["pass",{"_index":347,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["path",{"_index":425,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["permalink",{"_index":639,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["pipe(takeuntil(this.destroyed",{"_index":609,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["pipes",{"_index":715,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"dependencies.html":{}}}],["plain",{"_index":355,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["pointer",{"_index":458,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["position",{"_index":674,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["post",{"_index":353,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["pre",{"_index":612,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["prevalidateupload(upload",{"_index":616,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["private",{"_index":91,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["progress",{"_index":163,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"miscellaneous/enumerations.html":{}}}],["progressbar",{"_index":672,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["properties",{"_index":194,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["providers",{"_index":698,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}],["public",{"_index":14,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["push",{"_index":373,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["queue",{"_index":375,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["queued",{"_index":61,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"miscellaneous/enumerations.html":{}}}],["radius",{"_index":479,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["raw",{"_index":282,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["red",{"_index":691,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["register",{"_index":621,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["relative",{"_index":675,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["remove",{"_index":374,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["removeupload(upload",{"_index":412,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["render",{"_index":222,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["rendered",{"_index":226,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["renderer",{"_index":517,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["renderer2",{"_index":518,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["reportprogress",{"_index":134,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["repository",{"_index":597,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["represents",{"_index":10,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["request",{"_index":63,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["rerendering",{"_index":411,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["res.body",{"_index":177,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["res.ok",{"_index":173,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["res.status",{"_index":176,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["reset",{"_index":56,"title":{},"body":{"classes/FileUpload.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/UploadOptions.html":{},"index.html":{}}}],["response",{"_index":269,"title":{"interfaces/Response.html":{}},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"coverage.html":{}}}],["response(response",{"_index":291,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["restart",{"_index":53,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["result",{"_index":187,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":189,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":18,"title":{},"body":{"classes/FileUpload.html":{},"classes/UploadControl.html":{},"interfaces/UploadOptions.html":{}}}],["return",{"_index":122,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["returns",{"_index":43,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["reverse",{"_index":437,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["right",{"_index":687,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["row",{"_index":436,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["rxjs",{"_index":77,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":80,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["safari7",{"_index":665,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["same",{"_index":160,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["search",{"_index":542,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["see",{"_index":402,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["selected",{"_index":588,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["selector",{"_index":211,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["send",{"_index":128,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["sends",{"_index":401,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["server",{"_index":60,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["service",{"_index":32,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"miscellaneous/variables.html":{}}}],["services/file",{"_index":207,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["services/upload",{"_index":208,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["services/validation",{"_index":549,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["set",{"_index":230,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["seterror(iserror",{"_index":763,"title":{},"body":{"classes/UploadModel.html":{}}}],["setisvalid(valid",{"_index":771,"title":{},"body":{"classes/UploadModel.html":{}}}],["setmessage(msg",{"_index":775,"title":{},"body":{"classes/UploadModel.html":{}}}],["setresponse(response",{"_index":751,"title":{},"body":{"classes/UploadModel.html":{}}}],["sets",{"_index":227,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["setstate(state",{"_index":755,"title":{},"body":{"classes/UploadModel.html":{}}}],["setsuccess(issuccess",{"_index":767,"title":{},"body":{"classes/UploadModel.html":{}}}],["settemplate(tpl",{"_index":632,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["setupload(fileupload",{"_index":631,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["setuploaded(bytes",{"_index":759,"title":{},"body":{"classes/UploadModel.html":{}}}],["share",{"_index":641,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["shrink",{"_index":446,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["single",{"_index":11,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["size",{"_index":265,"title":{},"body":{"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["sizing",{"_index":443,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["skipped",{"_index":364,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["solid",{"_index":440,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["something",{"_index":95,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"modules/NgxFileUploadModule.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["space",{"_index":668,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["start",{"_index":19,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":168,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["state",{"_index":57,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["state(\"visible",{"_index":393,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["state(state",{"_index":293,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["statements",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":246,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["stop",{"_index":730,"title":{},"body":{"classes/UploadControl.html":{}}}],["stopped",{"_index":90,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["stream",{"_index":93,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["streams",{"_index":178,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["string",{"_index":86,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["style",{"_index":384,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["styles",{"_index":327,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["styleurls",{"_index":216,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["sub",{"_index":607,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["sub.unsubscribe",{"_index":611,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["subject",{"_index":42,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["subjects",{"_index":400,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["subscribe",{"_index":106,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["subscribtions",{"_index":553,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["success",{"_index":304,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["success(issuccess",{"_index":302,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["successful",{"_index":298,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["support",{"_index":821,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":822,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":147,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["switchmap",{"_index":390,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["table",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":388,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["takeuntil",{"_index":78,"title":{},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["takeuntil(this.cancel",{"_index":104,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["template",{"_index":220,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["template(tpl",{"_index":247,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["templateref",{"_index":202,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["templateurl",{"_index":214,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["text",{"_index":478,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["this.add",{"_index":564,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.add.emit(uploads",{"_index":594,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.animation$.next(true",{"_index":405,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["this.animation$.pipe(take(1",{"_index":418,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["this.cancel",{"_index":183,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.cancel$.complete",{"_index":182,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.cancel$.next(true",{"_index":120,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.changed.emit(upload",{"_index":256,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["this.completeupload",{"_index":121,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.context",{"_index":233,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["this.context.data",{"_index":254,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["this.createfieldinputfield",{"_index":566,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.createupload(file",{"_index":593,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.createuploadbody",{"_index":132,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.destroyed$.complete",{"_index":570,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.destroyed$.next(true",{"_index":568,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.error",{"_index":321,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.file.name",{"_index":287,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.file.size",{"_index":285,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.file.type",{"_index":290,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.filename",{"_index":319,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.fileselect",{"_index":565,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.fileselect.click",{"_index":587,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.filesize",{"_index":312,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.fileupload",{"_index":232,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["this.fileupload.cancel",{"_index":738,"title":{},"body":{"classes/UploadControl.html":{}}}],["this.fileupload.change.subscribe",{"_index":253,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["this.fileupload.retry",{"_index":736,"title":{},"body":{"classes/UploadControl.html":{}}}],["this.fileupload.start",{"_index":737,"title":{},"body":{"classes/UploadControl.html":{}}}],["this.formdataname",{"_index":601,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.handlefileselect(files",{"_index":585,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.handlehttperror(error",{"_index":110,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.handlehttpevent(event",{"_index":109,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.handleprogress(event",{"_index":154,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.handleresponse(event",{"_index":156,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.handlesent",{"_index":151,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.http.post(this.options.url",{"_index":133,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.isvalid",{"_index":323,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.itemtpl",{"_index":250,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["this.message",{"_index":324,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.notifyobservers",{"_index":119,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.onfileselect(e",{"_index":619,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.options",{"_index":98,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.options.formdata.enabled",{"_index":139,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.options.formdata.name",{"_index":141,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.prevalidateupload(filemodel",{"_index":605,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.progress",{"_index":320,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.removeupload(fileupload",{"_index":408,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["this.start",{"_index":116,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.state",{"_index":318,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.success",{"_index":322,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.upload",{"_index":96,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload$.asobservable",{"_index":123,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload$.complete",{"_index":181,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload$.next(this.upload",{"_index":186,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.error",{"_index":112,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.file",{"_index":143,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.filename",{"_index":144,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.isvalid",{"_index":102,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.message",{"_index":115,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.response",{"_index":174,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.state",{"_index":100,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.success",{"_index":114,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.upload.uploaded",{"_index":166,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.uploaded",{"_index":310,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.uploadedsize",{"_index":296,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.uploadedstate",{"_index":294,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.uploaderror",{"_index":300,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.uploadfile",{"_index":281,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.uploadfile().pipe",{"_index":103,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["this.uploadmessage",{"_index":308,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.uploadresponse",{"_index":292,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.uploads",{"_index":569,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.uploads.foreach((upload",{"_index":571,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.uploads.indexof(upload",{"_index":416,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["this.uploads.length",{"_index":573,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.uploads.push(...uploads",{"_index":406,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["this.uploads.push(upload",{"_index":606,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.uploads.splice(idx",{"_index":417,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["this.uploads.splice(this.uploads.indexof(upload",{"_index":610,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.uploads[i",{"_index":575,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.uploads[i].cancel",{"_index":574,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.uploadsuccess",{"_index":303,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.uploadvalid",{"_index":306,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["this.url",{"_index":599,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.useformdata",{"_index":600,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.validators",{"_index":562,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["this.validators.length",{"_index":618,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["time",{"_index":363,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["todo",{"_index":314,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["tojson",{"_index":317,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["tpl",{"_index":248,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["transform",{"_index":680,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["transition",{"_index":386,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["transition(\":leave",{"_index":396,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["translatex",{"_index":681,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["tree",{"_index":329,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["trigger",{"_index":383,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["trigger(\"removeupload",{"_index":392,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["triggers",{"_index":360,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["true",{"_index":46,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["try",{"_index":159,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["tslib",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":36,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["type=\"file",{"_index":590,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["undefined",{"_index":249,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["up",{"_index":422,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["uplaod",{"_index":596,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["upload",{"_index":25,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"classes/UploadControl.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["upload(fileupload",{"_index":231,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["upload.cancel",{"_index":578,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["upload.change",{"_index":608,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["upload.haserror",{"_index":577,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["upload.isinvalid",{"_index":576,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["upload.module.ts",{"_index":705,"title":{},"body":{"modules/NgxFileUploadModule.html":{}}}],["upload.start",{"_index":572,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["upload.state",{"_index":407,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["upload.tojson",{"_index":255,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["upload.ts",{"_index":8,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{},"coverage.html":{}}}],["upload.ts:105",{"_index":45,"title":{},"body":{"classes/FileUpload.html":{}}}],["upload.ts:109",{"_index":51,"title":{},"body":{"classes/FileUpload.html":{}}}],["upload.ts:33",{"_index":30,"title":{},"body":{"classes/FileUpload.html":{}}}],["upload.ts:51",{"_index":59,"title":{},"body":{"classes/FileUpload.html":{}}}],["upload.ts:69",{"_index":52,"title":{},"body":{"classes/FileUpload.html":{}}}],["upload.ts:82",{"_index":39,"title":{},"body":{"classes/FileUpload.html":{}}}],["upload.ts:98",{"_index":65,"title":{},"body":{"classes/FileUpload.html":{}}}],["uploadall",{"_index":512,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["uploadbody",{"_index":131,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["uploadcontrol",{"_index":196,"title":{"classes/UploadControl.html":{}},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{},"classes/UploadControl.html":{},"coverage.html":{}}}],["uploadcontrol(fileupload",{"_index":234,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["uploaddata",{"_index":197,"title":{"interfaces/UploadData.html":{}},"body":{"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"coverage.html":{}}}],["uploaddata.message",{"_index":636,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["uploaddata.name",{"_index":633,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["uploaddata.size",{"_index":634,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["uploaded",{"_index":263,"title":{},"body":{"interfaces/IDataNode.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"miscellaneous/enumerations.html":{}}}],["uploaded(bytes",{"_index":295,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["uploadedsize",{"_index":270,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["uploadedstate",{"_index":272,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["uploaderror",{"_index":273,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["uploades",{"_index":382,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["uploadfile",{"_index":129,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["uploadmessage",{"_index":277,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["uploadmodel",{"_index":26,"title":{"classes/UploadModel.html":{}},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"coverage.html":{}}}],["uploadmodel(file",{"_index":603,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["uploadoptions",{"_index":28,"title":{"interfaces/UploadOptions.html":{}},"body":{"classes/FileUpload.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{},"coverage.html":{}}}],["uploadresponse",{"_index":275,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["uploads",{"_index":334,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["uploadstate",{"_index":81,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"miscellaneous/enumerations.html":{}}}],["uploadstate.canceled",{"_index":105,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"interfaces/UploadOptions.html":{}}}],["uploadstate.error",{"_index":111,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["uploadstate.progress",{"_index":165,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["uploadstate.queued",{"_index":101,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{}}}],["uploadstate.start",{"_index":170,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["uploadstate.uploaded",{"_index":118,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"interfaces/UploadOptions.html":{}}}],["uploadsuccess",{"_index":274,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["uploadvalid",{"_index":276,"title":{},"body":{"interfaces/IDataNode.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{}}}],["url",{"_index":85,"title":{},"body":{"classes/FileUpload.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"interfaces/UploadOptions.html":{}}}],["use",{"_index":354,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["used",{"_index":221,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["useformdata",{"_index":341,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{}}}],["user",{"_index":158,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/UploadOptions.html":{}}}],["valid",{"_index":99,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/IDataNode.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/Response.html":{},"interfaces/UploadData.html":{},"classes/UploadModel.html":{},"interfaces/UploadOptions.html":{},"interfaces/ValidationResult.html":{}}}],["validate",{"_index":613,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"interfaces/NgxFileUploadValidator.html":{}}}],["validate(file",{"_index":723,"title":{},"body":{"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{}}}],["validation",{"_index":519,"title":{},"body":{"directives/NgxFileUploadDirective.html":{},"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{},"miscellaneous/variables.html":{}}}],["validationresult",{"_index":725,"title":{"interfaces/ValidationResult.html":{}},"body":{"interfaces/NgxFileUploadValidator.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["validators",{"_index":557,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["value",{"_index":343,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":499,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["variable",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":824,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":589,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["view",{"_index":210,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["viewchild",{"_index":201,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["viewchild(\"defaultuploaditem",{"_index":245,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["visible",{"_index":368,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["void",{"_index":44,"title":{},"body":{"classes/FileUpload.html":{},"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadComponent.html":{},"directives/NgxFileUploadDirective.html":{},"components/NgxFileUploadItemComponent.html":{},"classes/UploadControl.html":{},"classes/UploadModel.html":{}}}],["w3c",{"_index":660,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["want",{"_index":228,"title":{},"body":{"interfaces/FileUploadItemContext.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["webdriver",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["webkit",{"_index":654,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["white",{"_index":667,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["width",{"_index":474,"title":{},"body":{"components/NgxFileUploadComponent.html":{},"components/NgxFileUploadItemComponent.html":{}}}],["window",{"_index":558,"title":{},"body":{"directives/NgxFileUploadDirective.html":{}}}],["wrapper",{"_index":456,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["x",{"_index":444,"title":{},"body":{"components/NgxFileUploadComponent.html":{}}}],["z",{"_index":677,"title":{},"body":{"components/NgxFileUploadItemComponent.html":{}}}],["zone.js",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":703,"title":{},"body":{"modules/NgxFileUploadModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/FileUpload.html":{"url":"classes/FileUpload.html","title":"class - FileUpload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileUpload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/services/file-upload.ts\n        \n\n            \n                Description\n            \n            \n                represents a single fileupload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                hasError\n                            \n                            \n                                    Public\n                                isInvalid\n                            \n                            \n                                    Public\n                                retry\n                            \n                            \n                                    Public\n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    change\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(http: HttpClient, upload: UploadModel, options: UploadOptions)\n                    \n                \n                        \n                            \n                                Defined in lib/ngx-fileupload/services/file-upload.ts:33\n                            \n                        \n\n                \n                    \n                            create FileUpload service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        upload\n                                                  \n                                                        \n                                                                        UploadModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        UploadOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/file-upload.ts:82\n                \n            \n\n\n            \n                \n                    cancel current file upload, this will complete change subject\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasError()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/file-upload.ts:105\n                \n            \n\n\n            \n                \n                    returns true if upload contains an error or is invalid\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isInvalid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isInvalid()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/file-upload.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            retry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    retry()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/file-upload.ts:69\n                \n            \n\n\n            \n                \n                    restart download again\nreset state, and reset errors\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/file-upload.ts:51\n                \n            \n\n\n            \n                \n                    upload file to server but only\nif file is not queued, abort request on cancel\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n\n                \n                    \n                        getchange()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/services/file-upload.ts:98\n                                \n                            \n                    \n                        \n                                returns observable which notify if file upload state\nhas been changed\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpEvent, HttpEventType, HttpProgressEvent, HttpResponse, HttpErrorResponse } from \"@angular/common/http\";\nimport { Subject, BehaviorSubject, Observable } from \"rxjs\";\nimport { takeUntil, filter } from \"rxjs/operators\";\nimport { UploadModel, UploadState} from \"../model/upload\";\n\nexport interface UploadOptions {\n    url: string;\n\n    formData?: {\n        enabled: boolean;\n        name?: string;\n    };\n}\n\n/**\n * represents a single fileupload\n */\nexport class FileUpload {\n\n    /**\n     * if cancel$ emits true, current upload will stopped\n     */\n    private cancel$: Subject = new Subject();\n\n    /**\n     * upload stream to notify observers if something has been changed\n     */\n    private upload$: BehaviorSubject;\n\n    private options: UploadOptions = {\n        url: \"\",\n        formData: { enabled: true, name: \"file\" }\n    };\n\n    /**\n     * create FileUpload service\n     */\n    public constructor(\n        private http: HttpClient,\n        private upload: UploadModel,\n        options: UploadOptions\n    ) {\n        this.upload$ = new BehaviorSubject(this.upload);\n        this.options = {...this.options, ...options};\n    }\n\n    /**\n     * upload file to server but only\n     * if file is not queued, abort request on cancel\n     */\n    public start() {\n        /** only start upload if state is not queued and is valid */\n        if (this.upload.state === UploadState.QUEUED && this.upload.isValid) {\n            this.uploadFile().pipe(\n                takeUntil(this.cancel$),\n                filter(() => this.upload.state !== UploadState.CANCELED)\n            )\n            .subscribe({\n                next: (event: HttpEvent) => this.handleHttpEvent(event),\n                error: (error: HttpErrorResponse) => this.handleHttpError(error)\n            });\n        }\n    }\n\n    /**\n     * restart download again\n     * reset state, and reset errors\n     */\n    public retry() {\n        if (this.upload.state === UploadState.ERROR) {\n            this.upload.state   = UploadState.QUEUED;\n            this.upload.error   = null;\n            this.upload.success = null;\n            this.upload.message = \"\";\n            this.start();\n        }\n    }\n\n    /**\n     * cancel current file upload, this will complete change subject\n     */\n    public cancel() {\n        let isCancelAble = this.upload.state !== UploadState.CANCELED;\n        isCancelAble     = isCancelAble && this.upload.state !== UploadState.UPLOADED;\n\n        if (isCancelAble) {\n            this.upload.state = UploadState.CANCELED;\n            this.notifyObservers();\n            this.cancel$.next(true);\n            this.completeUpload();\n        }\n    }\n\n    /**\n     * returns observable which notify if file upload state\n     * has been changed\n     */\n    public get change(): Observable {\n        return this.upload$.asObservable();\n    }\n\n    /**\n     * returns true if upload contains an error or is invalid\n     */\n    public hasError(): boolean {\n        return this.upload.error;\n    }\n\n    public isInvalid(): boolean {\n        return this.upload.isValid === false;\n    }\n\n    /**\n     * build form data and send request to server\n     */\n    private uploadFile(): Observable> {\n\n        const uploadBody = this.createUploadBody();\n        return this.http.post(this.options.url, uploadBody, {\n            reportProgress: true,\n            observe: \"events\"\n        });\n    }\n\n    /**\n     * create upload body which will should be send\n     */\n    private createUploadBody(): FormData | File {\n        if (this.options.formData.enabled) {\n            const formData = new FormData();\n            const label    = this.options.formData.name;\n            formData.append(label, this.upload.file, this.upload.fileName);\n            return formData;\n        }\n        return this.upload.file;\n    }\n\n    /**\n     * handle all http events\n     */\n    private handleHttpEvent(event: HttpEvent) {\n        switch (event.type) {\n            case HttpEventType.Sent: this.handleSent(); break;\n            case HttpEventType.UploadProgress: this.handleProgress(event); break;\n            case HttpEventType.Response: this.handleResponse(event); break;\n        }\n    }\n\n    /**\n     * got http error, this not completes the upload\n     * since the user can try do the same upload again\n     */\n    private handleHttpError(error: HttpErrorResponse) {\n        this.upload.state = UploadState.ERROR;\n        this.upload.error = true;\n        this.upload.message = error.message;\n        this.notifyObservers();\n    }\n\n    /**\n     * handle file upload in progress\n     */\n    private handleProgress(event: HttpProgressEvent) {\n        this.upload.state = UploadState.PROGRESS;\n        this.upload.uploaded = event.loaded;\n        this.notifyObservers();\n    }\n\n    /**\n     * upload has been started\n     */\n    private handleSent() {\n        this.upload.state = UploadState.START;\n        this.notifyObservers();\n    }\n\n    /**\n     * upload has been completed\n     */\n    private handleResponse(res: HttpResponse) {\n\n        this.upload.state   = UploadState.UPLOADED;\n        this.upload.success = res.ok;\n        this.upload.response = {\n            code: res.status,\n            body: res.body\n        };\n\n        this.notifyObservers();\n        this.completeUpload();\n    }\n\n    /**\n     * complete download, complete streams and delete them\n     * notify observers\n     */\n    private completeUpload() {\n        this.upload$.complete();\n        this.cancel$.complete();\n        this.cancel$ = null;\n        this.upload$ = null;\n    }\n\n    /**\n     * send notification to observers\n     */\n    private notifyObservers() {\n        this.upload$.next(this.upload);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileUploadItemContext.html":{"url":"interfaces/FileUploadItemContext.html","title":"interface - FileUploadItemContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileUploadItemContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/components/ngx-fileupload-item.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ctrl\n                                \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ctrl\n                                    \n                                \n                                \n                                    \n                                        ctrl:         UploadControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UploadControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         UploadData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UploadData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, ViewChild, TemplateRef, EventEmitter, Output, HostListener } from \"@angular/core\";\nimport { FileUpload } from \"../services/file-upload\";\nimport { UploadControl } from \"../services/upload-control\";\nimport { UploadModel, UploadData } from \"../model/upload\";\n\nexport interface FileUploadItemContext {\n    data: UploadData;\n    ctrl: UploadControl;\n}\n\n/**\n * view for upload\n */\n@Component({\n    selector: \"ngx-fileupload-item\",\n    templateUrl: \"ngx-fileupload-item.component.html\",\n    styleUrls: [\"./ngx-fileupload-item.component.scss\"],\n})\nexport class NgxFileUploadItemComponent implements OnInit {\n\n    /**\n     * item template which should used to render upload data\n     */\n    public itemTpl: TemplateRef;\n\n    /**\n     * upload state has been changed\n     */\n    @Output()\n    public changed: EventEmitter = new EventEmitter();\n\n    /**\n     * template context which is bound to rendered template\n     */\n    public context: FileUploadItemContext;\n\n    /**\n     * file upload which should bound to this view\n     */\n    private fileUpload: FileUpload;\n\n    /**\n     * sets upload we want to bind with current view\n     */\n    @Input()\n    public set upload(fileUpload: FileUpload) {\n        this.fileUpload = fileUpload;\n        this.context = {\n            data: null,\n            ctrl: new UploadControl(fileUpload)\n        };\n    }\n\n    /**\n     * ensure all click events will canceled\n     * so we dont affect anything other\n     */\n    @HostListener(\"click\", [\"$event\"])\n    public onItemClick(event: MouseEvent) {\n        event.stopPropagation();\n    }\n\n    /**\n     * sets template which should used to render file data\n     */\n    @ViewChild(\"defaultUploadItem\", {static: true})\n    @Input()\n    public set template(tpl: TemplateRef) {\n        if (tpl !== undefined) {\n            this.itemTpl = tpl;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.fileUpload.change.subscribe({\n            next: (upload: UploadModel) => {\n                this.context.data = upload.toJson();\n                this.changed.emit(upload);\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDataNode.html":{"url":"interfaces/IDataNode.html","title":"interface - IDataNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDataNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/model/upload.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in lib/ngx-fileupload/model/upload.ts:23\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export enum UploadState {\n    QUEUED    = \"queued\",\n    START     = \"start\",\n    PROGRESS  = \"progress\",\n    UPLOADED  = \"uploaded\",\n    CANCELED  = \"canceled\",\n    ERROR     = \"error\",\n    INVALID   = \"invalid\"\n}\n\nexport interface UploadData {\n    state: UploadState;\n    uploaded: number;\n    size: number;\n    name: string;\n    progress: number;\n    hasError: boolean;\n    isSuccess: boolean;\n    isValid: boolean;\n    message: string;\n}\n\nexport interface IDataNode {\n    [key: string]: any;\n}\n\ninterface Response {\n    code: number;\n    body: IDataNode;\n}\n\n/**\n * Represents a file which will be uploaded\n */\nexport class UploadModel {\n\n    private uploadFile: File;\n\n    private uploadedSize = 0;\n\n    private uploadedState: UploadState = UploadState.QUEUED;\n\n    private uploadError = false;\n\n    private uploadSuccess = false;\n\n    private uploadResponse: Response = null;\n\n    private uploadValid = true;\n\n    private uploadMessage = \"\";\n\n    /**\n     * Creates an instance of UploadFile.\n     */\n    public constructor(file: File) {\n        this.uploadFile = file;\n    }\n\n    /**\n     * get raw file\n     */\n    public get file(): File {\n        return this.uploadFile;\n    }\n\n    /**\n     * returns filesize in byte\n     */\n    public get fileSize(): number {\n        return this.file.size;\n    }\n\n    /**\n     * returns filename\n     */\n    public get fileName(): string {\n        return this.file.name;\n    }\n\n    /**\n     * returns mime type of file\n     */\n    public get fileType(): string {\n        return this.file.type;\n    }\n\n    /**\n     * set response data if upload has been completed\n     */\n    public set response(response: Response) {\n        this.uploadResponse = response;\n    }\n\n    /**\n     * get response data if upload has been completed\n     */\n    public get response(): Response {\n        return this.uploadResponse;\n    }\n\n    /**\n     * set current upload state\n     */\n    public set state(state: UploadState) {\n        this.uploadedState = state;\n    }\n\n    /**\n     * get current upload state\n     */\n    public get state(): UploadState {\n        return this.uploadedState;\n    }\n\n    /**\n     * set uploaded size\n     */\n    public set uploaded(bytes: number) {\n        this.uploadedSize = bytes;\n    }\n\n    /**\n     * get uploaded size\n     */\n    public get uploaded(): number {\n        return this.uploadedSize;\n    }\n\n    /**\n     * set upload was successful\n     */\n    public set error(isError: boolean) {\n        this.uploadError = isError;\n    }\n\n    /**\n     * get upload was successful\n     */\n    public get error(): boolean {\n        return this.uploadError;\n    }\n\n    /**\n     * set upload was successful\n     */\n    public set success(isSuccess: boolean) {\n        this.uploadSuccess = isSuccess;\n    }\n\n    /**\n     * get upload was successful\n     */\n    public get success(): boolean {\n        return this.uploadSuccess;\n    }\n\n    public set isValid(valid: boolean) {\n        this.uploadValid = valid;\n    }\n\n    /**\n     * returns true if upload is valid\n     */\n    public get isValid(): boolean {\n        return this.uploadValid;\n    }\n\n    public set message(msg: string) {\n        this.uploadMessage = msg;\n    }\n\n    public get message(): string {\n        return this.uploadMessage;\n    }\n\n    public get progress(): number {\n        const progress = this.uploaded * 100 / this.fileSize;\n        return Math.round(progress > 100 ? 100 : progress);\n    }\n\n    /**\n     * return file upload data\n     * @todo move to model\n     */\n    public toJson(): UploadData {\n        return {\n            state     : this.state,\n            uploaded  : this.uploaded,\n            size      : this.fileSize,\n            name      : this.fileName,\n            progress  : this.progress,\n            hasError  : this.error,\n            isSuccess : this.success,\n            isValid   : this.isValid,\n            message   : this.message\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxFileUploadComponent.html":{"url":"components/NgxFileUploadComponent.html","title":"component - NgxFileUploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxFileUploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    lib/ngx-fileupload/components/ngx-fileupload.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-fileupload\n            \n\n            \n                styleUrls\n                ./ngx-fileupload.component.scss\n            \n\n\n\n            \n                templateUrl\n                ngx-fileupload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                uploads\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationEnd\n                            \n                            \n                                    Public\n                                handleUploadChange\n                            \n                            \n                                    Public\n                                onUploadsAdd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formDataName\n                            \n                            \n                                itemTemplate\n                            \n                            \n                                url\n                            \n                            \n                                useFormData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formDataName\n                    \n                \n                \n                    \n                        Default value : \"file\"\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload.component.ts:48\n                            \n                        \n                \n                    \n                        form data field name with which form data will be send\nby default this will be file\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemTemplate\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload.component.ts:27\n                            \n                        \n                \n                    \n                        optional pass diffrent itemtemplate\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload.component.ts:34\n                            \n                        \n                \n                    \n                        input which url should be used to upload files,\nthis field is mandatory\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        useFormData\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload.component.ts:41\n                            \n                        \n                \n                    \n                        if set to false upload post request body will use\nplain file object in body\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            animationEnd\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animationEnd($event: AnimationEvent)\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/components/ngx-fileupload.component.ts:68\n                \n            \n\n\n            \n                \n                    triggers on animation done, if time used is 0\nthen this is a skipped animation (in this case :enter)\nto avoid this fromState have to be visible to void\nthat means component leave animation has been completed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                AnimationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleUploadChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleUploadChange(upload: UploadModel, fileUpload: FileUpload)\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/components/ngx-fileupload.component.ts:85\n                \n            \n\n\n            \n                \n                    handle upload change event,\nif upload has been completed or canceled push them into remove queue\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    upload\n                                    \n                                                UploadModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileUpload\n                                    \n                                                FileUpload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onUploadsAdd\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onUploadsAdd(uploads: FileUpload[])\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/components/ngx-fileupload.component.ts:77\n                \n            \n\n\n            \n                \n                    new uploads added with drag and drop\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uploads\n                                    \n                                                FileUpload[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploads\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FileUpload[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload.component.ts:53\n                            \n                        \n\n                \n                    \n                        all file uploades, which will be added to upload-item view\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, TemplateRef, Input } from \"@angular/core\";\nimport { trigger, state, style, animate, transition, AnimationEvent } from \"@angular/animations\";\nimport { FileUpload } from \"../services/file-upload\";\nimport { UploadModel, UploadState } from \"../model/upload\";\nimport { Subject, of } from \"rxjs\";\nimport { take, delay, switchMap } from \"rxjs/operators\";\n\n@Component({\n    selector: \"ngx-fileupload\",\n    styleUrls: [\"./ngx-fileupload.component.scss\"],\n    templateUrl: \"ngx-fileupload.component.html\",\n    animations: [\n        trigger(\"removeUpload\", [\n            state(\"visible\", style({ opacity: 1 })),\n            transition(\":leave\" , [\n                animate(\".5s ease-out\", style({ opacity: 0 }))\n            ])\n        ])\n    ],\n})\nexport class NgxFileUploadComponent {\n\n    /**\n     * optional pass diffrent itemtemplate\n     */\n    @Input()\n    public itemTemplate: TemplateRef;\n\n    /**\n     * input which url should be used to upload files,\n     * this field is mandatory\n     */\n    @Input()\n    public url: string;\n\n    /**\n     * if set to false upload post request body will use\n     * plain file object in body\n     */\n    @Input()\n    public useFormData = true;\n\n    /**\n     * form data field name with which form data will be send\n     * by default this will be file\n     */\n    @Input()\n    public formDataName = \"file\";\n\n    /**\n     * all file uploades, which will be added to upload-item view\n     */\n    public uploads: FileUpload[] = [];\n\n    /**\n     * subjects sends true if an animation has been done\n     */\n    private animation$: Subject = new Subject();\n\n    /**\n     * triggers on animation done, if time used is 0\n     * then this is a skipped animation (in this case :enter)\n     * to avoid this fromState have to be visible to void\n     * that means component leave animation has been completed\n     *\n     * @see https://github.com/angular/angular/issues/23535\n     */\n    public animationEnd($event: AnimationEvent) {\n        if ($event.totalTime !== 0) {\n            this.animation$.next(true);\n        }\n    }\n\n    /**\n     * new uploads added with drag and drop\n     */\n    public onUploadsAdd(uploads: FileUpload[]) {\n        this.uploads.push(...uploads);\n    }\n\n    /**\n     * handle upload change event,\n     * if upload has been completed or canceled push them into remove queue\n     */\n    public handleUploadChange(upload: UploadModel, fileUpload: FileUpload) {\n        if (upload.state === UploadState.CANCELED || upload.state === UploadState.UPLOADED) {\n            this.removeUpload(fileUpload);\n        }\n    }\n\n    /**\n     * remove upload from list, this causes rerendering of the view\n     * which emits true after animation has been done.\n     */\n    private removeUpload(upload: FileUpload) {\n        of(upload).pipe(\n            delay(1500),\n            switchMap(() => {\n                const idx = this.uploads.indexOf(upload);\n                this.uploads.splice(idx, 1);\n                return this.animation$.pipe(take(1));\n            })\n        )\n        .subscribe();\n    }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n            Drag/Drop files here or click\n        \n    \n\n    \n        \n            \n        \n    \n\n\n    Cancel\n    Clean Up\n    Upload\n\n\n    \n\n    \n                \n                    ./ngx-fileupload.component.scss\n                \n                $ngx-fileupload-icons--font-path: '../assets/fonts' !default;\n\n@import '../assets//scss/variables';\n@import '../assets/scss/icons';\n\n:host {\n\n    display: flex;\n    flex-direction: column;\n\n    .fileupload {\n        overflow: auto;\n        display: flex;\n        flex-direction: row-reverse;\n        flex: 1;\n        border: 1px solid #D2D2D2;\n    }\n\n    .file-upload--list {\n        box-sizing: border-box;\n        flex: 1;\n        overflow-x: hidden;\n        flex-shrink: 0;\n        flex-grow: 0;\n        flex-basis: 100%;\n        padding: .5rem 1rem;\n    }\n\n    ngx-fileupload-item {\n        margin-bottom: .5rem;\n\n        &:last-child {\n            margin-bottom: 0;\n        }\n    }\n\n    .file-upload--info-wrapper {\n        cursor: pointer;\n        display: flex;\n        flex: 1;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .file-upload--info {\n\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        color: map-get($colors, \"dark\");\n\n        .ngx-fileupload-icon--add {\n            font-size: 2.5rem;\n            border: 1px dashed lighten(map-get($colors, \"dark\"), 40%);\n            width: 4rem;\n            line-height: 4rem;\n            text-align: center;\n            border-radius: 50%;\n            margin-bottom: .5rem;\n        }\n    }\n\n    .upload--footer {\n        display: flex;\n        flex-direction: row-reverse;\n\n        .upload-action {\n            display: block;\n            background: map-get($colors, \"dark\");\n            padding: .4rem .8rem;\n            border: 1px solid #2E2E2E;\n            border-width: 0 0 1px;\n            color: map-get($map: $colors, $key: \"light\");\n            cursor: pointer;\n\n            &:last-child {\n                margin: 0;\n            }\n\n            &:first-child {\n                border-radius: 0  0 .3rem 0;\n                border-width: 0 1px 1px;\n            }\n\n            &:last-child {\n                border-radius: 0  0 0 .3rem;\n                border-width: 0 1px 1px;\n            }\n\n            &[disabled] {\n                border-color: lighten(#2E2E2E, 40%);\n                background: lighten(#3E3E3E, 40%);\n            }\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Drag/Drop files here or click                                                    Cancel    Clean Up    Upload'\n    var COMPONENTS = [{'name': 'NgxFileUploadComponent', 'selector': 'ngx-fileupload'},{'name': 'NgxFileUploadItemComponent', 'selector': 'ngx-fileupload-item'}];\n    var DIRECTIVES = [{'name': 'NgxFileUploadDirective', 'selector': '[ngxFileUpload]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxFileUploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxFileUploadDirective.html":{"url":"directives/NgxFileUploadDirective.html","title":"directive - NgxFileUploadDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxFileUploadDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/directives/ngx-fileuplad.ts\n        \n\n            \n                Description\n            \n            \n                directive to add uploads with drag / drop\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n            \n                Example\n            \n            \n                        \n                            \nUpload\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxFileUpload]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancelAll\n                            \n                            \n                                    Public\n                                cleanAll\n                            \n                            \n                                    Public\n                                uploadAll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formDataName\n                            \n                            \n                                ngxFileUpload\n                            \n                            \n                                useFormData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                dragover\n                            \n                            \n                                drop\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, renderer: Renderer2, validation: NgxFileUploadValidator | NgxFileUploadValidator[])\n                    \n                \n                        \n                            \n                                Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:75\n                            \n                        \n\n                \n                    \n                            Creates an instance of NgxFileUploadDirective.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        validation\n                                                  \n                                                        \n                                                                        NgxFileUploadValidator | NgxFileUploadValidator[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        formDataName\n                    \n                \n                \n                    \n                        Default value : \"file\"\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:55\n                            \n                        \n                \n                    \n                        form data field name with which form data will be send\nby default this will be file\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxFileUpload\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:41\n                            \n                        \n                \n                    \n                        url which should be used as endpoint for the file upload\nthis field is mandatory\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        useFormData\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:48\n                            \n                        \n                \n                    \n                        if set to false upload post request body will use\nplain file object in body\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        add\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:31\n                            \n                        \n                \n                    \n                        upload has been added\n\n                    \n                \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nclick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:157\n                \n            \n\n\n            \n                \n                    add click host listener\nto get notified we have a click event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragover\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndragover(event: DragEvent)\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:134\n                \n            \n\n\n            \n                \n                    handle drag over event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drop\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndrop(event: DragEvent)\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:143\n                \n            \n\n\n            \n                \n                    handle drop event\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancelAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelAll()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:111\n                \n            \n\n\n            \n                \n                    cancel all downloads at once\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cleanAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cleanAll()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:121\n                \n            \n\n\n            \n                \n                    search for broken uploads (error / invalid) and cancel\nthem\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            uploadAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAll()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/directives/ngx-fileuplad.ts:104\n                \n            \n\n\n            \n                \n                    begin all uploads at once\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, HostListener, Input, Output, EventEmitter, OnDestroy, Optional, Inject, Renderer2, ElementRef } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { Subject } from \"rxjs\";\nimport { UploadModel, UploadState } from \"../model/upload\";\nimport { FileUpload } from \"../services/file-upload\";\nimport { NGX_FILEUPLOAD_VALIDATOR, NgxFileUploadValidator } from \"../services/validation\";\n\n/**\n * directive to add uploads with drag / drop\n *\n * @example\n *\n * \n * Upload\n */\n@Directive({\n  selector: \"[ngxFileUpload]\",\n  exportAs: \"ngxFileUploadRef\"\n})\nexport class NgxFileUploadDirective implements OnDestroy {\n\n    /**\n     * upload has been added\n     *\n     * @example\n     *\n     * \n     */\n    @Output()\n    public add: EventEmitter;\n\n    /**\n     * url which should be used as endpoint for the file upload\n     * this field is mandatory\n     *\n     * @example\n     * \n     */\n    @Input(\"ngxFileUpload\")\n    public url: string;\n\n    /**\n     * if set to false upload post request body will use\n     * plain file object in body\n     */\n    @Input()\n    public useFormData = true;\n\n    /**\n     * form data field name with which form data will be send\n     * by default this will be file\n     */\n    @Input()\n    public formDataName = \"file\";\n\n    /**\n     * remove from subscribtions if component gets destroyed\n     */\n    private destroyed$: Subject = new Subject();\n\n    /**\n     * upload file queue\n     */\n    private uploads: FileUpload[] = [];\n\n    /**\n     * injected validators\n     */\n    private validators: NgxFileUploadValidator[] = [];\n\n    /**\n     * input file field to trigger file window\n     */\n    private fileSelect: HTMLInputElement;\n\n    /**\n     * Creates an instance of NgxFileUploadDirective.\n     */\n    constructor(\n        private httpClient: HttpClient,\n        private renderer: Renderer2,\n        @Optional() @Inject(NGX_FILEUPLOAD_VALIDATOR) validation: NgxFileUploadValidator | NgxFileUploadValidator[]\n    ) {\n        if (validation) {\n            this.validators = Array.isArray(validation) ? validation : [validation];\n        }\n        this.add = new EventEmitter();\n        this.fileSelect = this.createFieldInputField();\n    }\n\n    /**\n     * directive gets destroyed\n     */\n    public ngOnDestroy() {\n        this.destroyed$.next(true);\n        this.uploads = [];\n        this.destroyed$.complete();\n    }\n\n    /**\n     * begin all uploads at once\n     */\n    public uploadAll() {\n        this.uploads.forEach((upload: FileUpload) => upload.start());\n    }\n\n    /**\n     * cancel all downloads at once\n     */\n    public cancelAll() {\n        for ( let i = this.uploads.length - 1; i >= 0; i --) {\n            this.uploads[i].cancel();\n        }\n    }\n\n    /**\n     * search for broken uploads (error / invalid) and cancel\n     * them\n     */\n    public cleanAll() {\n        for ( let i = this.uploads.length - 1; i >= 0; i --) {\n            const upload = this.uploads[i];\n            if (upload.isInvalid() || upload.hasError()) {\n                upload.cancel();\n            }\n        }\n    }\n\n    /**\n     * handle drag over event\n     */\n    @HostListener(\"dragover\", [\"$event\"])\n    public onFileDragOver(event: DragEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    /**\n     * handle drop event\n     */\n    @HostListener(\"drop\", [\"$event\"])\n    public onFileDrop(event: DragEvent) {\n\n        event.stopPropagation();\n        event.preventDefault();\n\n        const files = Array.from(event.dataTransfer.files);\n        this.handleFileSelect(files);\n    }\n\n    /**\n     * add click host listener\n     * to get notified we have a click event\n     */\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(event: MouseEvent) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        if (!this.uploads.length) {\n            this.fileSelect.click();\n        }\n    }\n\n    /**\n     * files has been selected via drag drop\n     * or with input type=\"file\"\n     */\n    private handleFileSelect(files: File[]) {\n        const uploads = files.map((file) => this.createUpload(file));\n        this.add.emit(uploads);\n    }\n\n    /**\n     * create upload from file, listen to complete\n     * to remove upload from uploads list\n     *\n     * remove uplaod from uploads repository if upload completed\n     * or canceled\n     */\n    private createUpload(file: File): FileUpload {\n        const uploadOptions = {\n            url: this.url,\n            formData: {\n                enabled: this.useFormData,\n                name   : this.formDataName\n            }\n        };\n\n        const fileModel = new UploadModel(file);\n        const upload    = new FileUpload(this.httpClient, fileModel, uploadOptions);\n\n        this.preValidateUpload(fileModel);\n        this.uploads.push(upload);\n\n        const sub = upload.change\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe({\n                complete: () => {\n                    this.uploads.splice(this.uploads.indexOf(upload), 1);\n                    sub.unsubscribe();\n                }\n            });\n\n        return upload;\n    }\n\n    /**\n     * pre validate upload, if validation result is invalid\n     * fill could not uploaded anymore\n     */\n    private preValidateUpload(upload: UploadModel) {\n\n        for (let i = 0, ln = this.validators.length; i  this.onFileSelect(e));\n        return inputField;\n    }\n\n    /**\n     * register on change event on input[type=\"file\"] field\n     * and create the uploads\n     */\n    private onFileSelect(event: Event) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const files = Array.from(this.fileSelect.files);\n        this.handleFileSelect(files);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxFileUploadItemComponent.html":{"url":"components/NgxFileUploadItemComponent.html","title":"component - NgxFileUploadItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxFileUploadItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    lib/ngx-fileupload/components/ngx-fileupload-item.component.ts\n\n\n    \n        Description\n    \n    \n        view for upload\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-fileupload-item\n            \n\n            \n                styleUrls\n                ./ngx-fileupload-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ngx-fileupload-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                context\n                            \n                            \n                                    Public\n                                itemTpl\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                template\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    upload\n                                \n                                \n                                    template\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        template\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload-item.component.ts:69\n                            \n                        \n                \n                    \n                        sets template which should used to render file data\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        upload\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload-item.component.ts:47\n                            \n                        \n                \n                    \n                        sets upload we want to bind with current view\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload-item.component.ts:31\n                            \n                        \n                \n                    \n                        upload state has been changed\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nclick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/components/ngx-fileupload-item.component.ts:60\n                \n            \n\n\n            \n                \n                    ensure all click events will canceled\nso we dont affect anything other\n\n\n                \n            \n        \n    \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FileUploadItemContext\n\n                        \n                    \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload-item.component.ts:36\n                            \n                        \n\n                \n                    \n                        template context which is bound to rendered template\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemTpl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload-item.component.ts:25\n                            \n                        \n\n                \n                    \n                        item template which should used to render upload data\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        upload\n                    \n                \n\n\n                \n                    \n                        setupload(fileUpload)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload-item.component.ts:47\n                                \n                            \n                    \n                        \n                                sets upload we want to bind with current view\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            fileUpload\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        template\n                    \n                \n\n\n                \n                    \n                        settemplate(tpl)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/components/ngx-fileupload-item.component.ts:69\n                                \n                            \n                    \n                        \n                                sets template which should used to render file data\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tpl\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, TemplateRef, EventEmitter, Output, HostListener } from \"@angular/core\";\nimport { FileUpload } from \"../services/file-upload\";\nimport { UploadControl } from \"../services/upload-control\";\nimport { UploadModel, UploadData } from \"../model/upload\";\n\nexport interface FileUploadItemContext {\n    data: UploadData;\n    ctrl: UploadControl;\n}\n\n/**\n * view for upload\n */\n@Component({\n    selector: \"ngx-fileupload-item\",\n    templateUrl: \"ngx-fileupload-item.component.html\",\n    styleUrls: [\"./ngx-fileupload-item.component.scss\"],\n})\nexport class NgxFileUploadItemComponent implements OnInit {\n\n    /**\n     * item template which should used to render upload data\n     */\n    public itemTpl: TemplateRef;\n\n    /**\n     * upload state has been changed\n     */\n    @Output()\n    public changed: EventEmitter = new EventEmitter();\n\n    /**\n     * template context which is bound to rendered template\n     */\n    public context: FileUploadItemContext;\n\n    /**\n     * file upload which should bound to this view\n     */\n    private fileUpload: FileUpload;\n\n    /**\n     * sets upload we want to bind with current view\n     */\n    @Input()\n    public set upload(fileUpload: FileUpload) {\n        this.fileUpload = fileUpload;\n        this.context = {\n            data: null,\n            ctrl: new UploadControl(fileUpload)\n        };\n    }\n\n    /**\n     * ensure all click events will canceled\n     * so we dont affect anything other\n     */\n    @HostListener(\"click\", [\"$event\"])\n    public onItemClick(event: MouseEvent) {\n        event.stopPropagation();\n    }\n\n    /**\n     * sets template which should used to render file data\n     */\n    @ViewChild(\"defaultUploadItem\", {static: true})\n    @Input()\n    public set template(tpl: TemplateRef) {\n        if (tpl !== undefined) {\n            this.itemTpl = tpl;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.fileUpload.change.subscribe({\n            next: (upload: UploadModel) => {\n                this.context.data = upload.toJson();\n                this.changed.emit(upload);\n            }\n        });\n    }\n}\n\n    \n\n    \n        \n\n    \n        {{uploadData.name}}\n\n        \n            \n            \n                \n            \n\n            \n            \n                \n                    {{uploadData.size | bytes : 2}}\n                    \n                \n            \n\n            \n            \n\n                \n                \n                    \n                \n\n                \n                \n                    \n                \n\n                \n                \n                    \n                \n\n            \n        \n\n        \n            {{uploadData.message}}\n        \n    \n\n\n\n\n\n    \n\n    \n                \n                    ./ngx-fileupload-item.component.scss\n                \n                $ngx-fileupload-icons--font-path: '../assets/fonts' !default;\n\n@import '../assets//scss/variables';\n@import '../assets/scss/icons';\n\n:host {\n\n    display: block;\n    color: map-get($colors, 'dark');\n\n    .upload-item {\n        display: flex;\n        flex-direction: column;\n        padding: .25rem .5rem;\n        border-radius: .4rem;\n        border: 1px solid #E4E4E4;\n\n        /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#ffffff+50,f7f7f7+100 */\n        background: #FDFDFD; /* Old browsers */\n        background: -moz-linear-gradient(top,  #FDFDFD 50%, #F7F7F7 100%); /* FF3.6-15 */\n        background: -webkit-linear-gradient(top,  #FDFDFD 50%,#F7F7F7 100%); /* Chrome10-25,Safari5.1-6 */\n        background: linear-gradient(to bottom,  #FDFDFD 50%,#F7F7F7 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\n    }\n\n    /*\n       Upload Item Header\n    */\n    .upload-item--header {\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        overflow: hidden;\n    }\n\n    /*\n       Upload Item Body\n    */\n    .upload-item--body {\n        align-items: center;\n        display: flex;\n        flex-direction: row;\n    }\n\n    .upload-item--actions,\n    .upload-item--state {\n        flex: 0;\n    }\n\n    .upload-item--progress {\n        flex: 1;\n        display: flex;\n        margin: 0 .5rem;\n        padding: 0 .5rem;\n        border: 1px solid #E4E4E4;\n        border-width: 0 1px;\n\n        .progressbar {\n            flex: 1;\n            height: .75rem;\n            border-radius: .5rem;\n            overflow: hidden;\n            padding: 1px;\n            border: 1px solid #E4E4E4;\n            position: relative;\n        }\n\n        .label-size {\n            position: absolute;\n            z-index: 5;\n            left: 50%;\n            transform: translateX(-50%);\n            font-size: .8rem;\n        }\n\n        .progressbar-inner {\n            height: 100%;\n            background: map-get($colors, 'progress');\n            border-radius: .5rem;\n        }\n    }\n\n    .upload-item--actions {\n\n        padding: .25rem;\n        display: flex;\n\n        button {\n            padding: 0;\n            background: lighten(map-get($colors, 'dark'), 25%);\n            color: map-get($colors, 'white');\n            border-radius: 50%;\n            border: 0;\n            height: 1rem; \n            width: 1rem; \n            cursor: pointer;\n            font-size: .75rem;\n            outline: none;\n\n            margin-right: .25rem;\n\n            &:last-child {\n                margin: 0;\n            }\n\n            &:disabled {\n                background: lighten(map-get($colors, 'dark'), 50%);\n                cursor: not-allowed;\n            }\n        }\n    }\n\n    /**\n     * Upload Item Footer\n     */\n    .upload-item--notification {\n        font-size: .8rem;\n        color: map-get($map: $colors, $key: 'green');\n        margin-left: 2rem;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n\n        &.error {\n            color: map-get($map: $colors, $key: 'red');\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{uploadData.name}}                                                                                                                        {{uploadData.size | bytes : 2}}                                                                                                                                                                                                                                                                                                                            {{uploadData.message}}            '\n    var COMPONENTS = [{'name': 'NgxFileUploadComponent', 'selector': 'ngx-fileupload'},{'name': 'NgxFileUploadItemComponent', 'selector': 'ngx-fileupload-item'}];\n    var DIRECTIVES = [{'name': 'NgxFileUploadDirective', 'selector': '[ngxFileUpload]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxFileUploadItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxFileUploadModule.html":{"url":"modules/NgxFileUploadModule.html","title":"module - NgxFileUploadModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxFileUploadModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxFileUploadModule\n\n\n\ncluster_NgxFileUploadModule_declarations\n\n\n\ncluster_NgxFileUploadModule_exports\n\n\n\n\nNgxFileUploadComponent\n\nNgxFileUploadComponent\n\n\n\nNgxFileUploadModule\n\nNgxFileUploadModule\n\nNgxFileUploadModule -->\n\nNgxFileUploadComponent->NgxFileUploadModule\n\n\n\n\n\nNgxFileUploadDirective\n\nNgxFileUploadDirective\n\nNgxFileUploadModule -->\n\nNgxFileUploadDirective->NgxFileUploadModule\n\n\n\n\n\nNgxFileUploadItemComponent\n\nNgxFileUploadItemComponent\n\nNgxFileUploadModule -->\n\nNgxFileUploadItemComponent->NgxFileUploadModule\n\n\n\n\n\nNgxFileUploadComponent \n\nNgxFileUploadComponent \n\nNgxFileUploadComponent  -->\n\nNgxFileUploadModule->NgxFileUploadComponent \n\n\n\n\n\nNgxFileUploadDirective \n\nNgxFileUploadDirective \n\nNgxFileUploadDirective  -->\n\nNgxFileUploadModule->NgxFileUploadDirective \n\n\n\n\n\nNgxFileUploadItemComponent \n\nNgxFileUploadItemComponent \n\nNgxFileUploadItemComponent  -->\n\nNgxFileUploadModule->NgxFileUploadItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/ngx-fileupload/ngx-file-upload.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxFileUploadComponent\n                        \n                        \n                            NgxFileUploadDirective\n                        \n                        \n                            NgxFileUploadItemComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxFileUploadComponent\n                        \n                        \n                            NgxFileUploadDirective\n                        \n                        \n                            NgxFileUploadItemComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { NgMathPipesModule } from \"angular-pipes\";\n\nimport { NgxFileUploadItemComponent } from \"./components/ngx-fileupload-item.component\";\nimport { NgxFileUploadDirective } from \"./directives/ngx-fileuplad\";\nimport { NgxFileUploadComponent } from \"./components/ngx-fileupload.component\";\n\n@NgModule({\n    declarations: [\n        NgxFileUploadDirective,\n        NgxFileUploadItemComponent,\n        NgxFileUploadComponent,\n    ],\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        NgMathPipesModule\n    ],\n    exports: [\n        NgxFileUploadDirective,\n        NgxFileUploadItemComponent,\n        NgxFileUploadComponent\n    ]\n})\nexport class NgxFileUploadModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxFileUploadValidator.html":{"url":"interfaces/NgxFileUploadValidator.html","title":"interface - NgxFileUploadValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxFileUploadValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/services/validation.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    validate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(file: File)\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/validation.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidationResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from \"@angular/core\";\n\nexport const NGX_FILEUPLOAD_VALIDATOR = new InjectionToken(\"Upload validation Service\");\n\nexport interface ValidationResult {\n    valid: boolean;\n    error: string;\n}\n\nexport interface NgxFileUploadValidator {\n    validate(file: File): ValidationResult;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/model/upload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        code\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         IDataNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDataNode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum UploadState {\n    QUEUED    = \"queued\",\n    START     = \"start\",\n    PROGRESS  = \"progress\",\n    UPLOADED  = \"uploaded\",\n    CANCELED  = \"canceled\",\n    ERROR     = \"error\",\n    INVALID   = \"invalid\"\n}\n\nexport interface UploadData {\n    state: UploadState;\n    uploaded: number;\n    size: number;\n    name: string;\n    progress: number;\n    hasError: boolean;\n    isSuccess: boolean;\n    isValid: boolean;\n    message: string;\n}\n\nexport interface IDataNode {\n    [key: string]: any;\n}\n\ninterface Response {\n    code: number;\n    body: IDataNode;\n}\n\n/**\n * Represents a file which will be uploaded\n */\nexport class UploadModel {\n\n    private uploadFile: File;\n\n    private uploadedSize = 0;\n\n    private uploadedState: UploadState = UploadState.QUEUED;\n\n    private uploadError = false;\n\n    private uploadSuccess = false;\n\n    private uploadResponse: Response = null;\n\n    private uploadValid = true;\n\n    private uploadMessage = \"\";\n\n    /**\n     * Creates an instance of UploadFile.\n     */\n    public constructor(file: File) {\n        this.uploadFile = file;\n    }\n\n    /**\n     * get raw file\n     */\n    public get file(): File {\n        return this.uploadFile;\n    }\n\n    /**\n     * returns filesize in byte\n     */\n    public get fileSize(): number {\n        return this.file.size;\n    }\n\n    /**\n     * returns filename\n     */\n    public get fileName(): string {\n        return this.file.name;\n    }\n\n    /**\n     * returns mime type of file\n     */\n    public get fileType(): string {\n        return this.file.type;\n    }\n\n    /**\n     * set response data if upload has been completed\n     */\n    public set response(response: Response) {\n        this.uploadResponse = response;\n    }\n\n    /**\n     * get response data if upload has been completed\n     */\n    public get response(): Response {\n        return this.uploadResponse;\n    }\n\n    /**\n     * set current upload state\n     */\n    public set state(state: UploadState) {\n        this.uploadedState = state;\n    }\n\n    /**\n     * get current upload state\n     */\n    public get state(): UploadState {\n        return this.uploadedState;\n    }\n\n    /**\n     * set uploaded size\n     */\n    public set uploaded(bytes: number) {\n        this.uploadedSize = bytes;\n    }\n\n    /**\n     * get uploaded size\n     */\n    public get uploaded(): number {\n        return this.uploadedSize;\n    }\n\n    /**\n     * set upload was successful\n     */\n    public set error(isError: boolean) {\n        this.uploadError = isError;\n    }\n\n    /**\n     * get upload was successful\n     */\n    public get error(): boolean {\n        return this.uploadError;\n    }\n\n    /**\n     * set upload was successful\n     */\n    public set success(isSuccess: boolean) {\n        this.uploadSuccess = isSuccess;\n    }\n\n    /**\n     * get upload was successful\n     */\n    public get success(): boolean {\n        return this.uploadSuccess;\n    }\n\n    public set isValid(valid: boolean) {\n        this.uploadValid = valid;\n    }\n\n    /**\n     * returns true if upload is valid\n     */\n    public get isValid(): boolean {\n        return this.uploadValid;\n    }\n\n    public set message(msg: string) {\n        this.uploadMessage = msg;\n    }\n\n    public get message(): string {\n        return this.uploadMessage;\n    }\n\n    public get progress(): number {\n        const progress = this.uploaded * 100 / this.fileSize;\n        return Math.round(progress > 100 ? 100 : progress);\n    }\n\n    /**\n     * return file upload data\n     * @todo move to model\n     */\n    public toJson(): UploadData {\n        return {\n            state     : this.state,\n            uploaded  : this.uploaded,\n            size      : this.fileSize,\n            name      : this.fileName,\n            progress  : this.progress,\n            hasError  : this.error,\n            isSuccess : this.success,\n            isValid   : this.isValid,\n            message   : this.message\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadControl.html":{"url":"classes/UploadControl.html","title":"class - UploadControl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/services/upload-control.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                retry\n                            \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(fileUpload: FileUpload)\n                    \n                \n                        \n                            \n                                Defined in lib/ngx-fileupload/services/upload-control.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileUpload\n                                                  \n                                                        \n                                                                        FileUpload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            retry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    retry()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/upload-control.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/upload-control.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/services/upload-control.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileUpload } from \"./file-upload\";\n\nexport class UploadControl {\n\n    public constructor(\n        private fileUpload: FileUpload\n    ) {}\n\n    public retry() {\n        this.fileUpload.retry();\n    }\n\n    public start() {\n        this.fileUpload.start();\n    }\n\n    public stop() {\n        this.fileUpload.cancel();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadData.html":{"url":"interfaces/UploadData.html","title":"interface - UploadData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UploadData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/model/upload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hasError\n                                \n                                \n                                        isSuccess\n                                \n                                \n                                        isValid\n                                \n                                \n                                        message\n                                \n                                \n                                        name\n                                \n                                \n                                        progress\n                                \n                                \n                                        size\n                                \n                                \n                                        state\n                                \n                                \n                                        uploaded\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasError\n                                    \n                                \n                                \n                                    \n                                        hasError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSuccess\n                                    \n                                \n                                \n                                    \n                                        isSuccess:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isValid\n                                    \n                                \n                                \n                                    \n                                        isValid:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                    \n                                \n                                \n                                    \n                                        progress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         UploadState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UploadState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uploaded\n                                    \n                                \n                                \n                                    \n                                        uploaded:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum UploadState {\n    QUEUED    = \"queued\",\n    START     = \"start\",\n    PROGRESS  = \"progress\",\n    UPLOADED  = \"uploaded\",\n    CANCELED  = \"canceled\",\n    ERROR     = \"error\",\n    INVALID   = \"invalid\"\n}\n\nexport interface UploadData {\n    state: UploadState;\n    uploaded: number;\n    size: number;\n    name: string;\n    progress: number;\n    hasError: boolean;\n    isSuccess: boolean;\n    isValid: boolean;\n    message: string;\n}\n\nexport interface IDataNode {\n    [key: string]: any;\n}\n\ninterface Response {\n    code: number;\n    body: IDataNode;\n}\n\n/**\n * Represents a file which will be uploaded\n */\nexport class UploadModel {\n\n    private uploadFile: File;\n\n    private uploadedSize = 0;\n\n    private uploadedState: UploadState = UploadState.QUEUED;\n\n    private uploadError = false;\n\n    private uploadSuccess = false;\n\n    private uploadResponse: Response = null;\n\n    private uploadValid = true;\n\n    private uploadMessage = \"\";\n\n    /**\n     * Creates an instance of UploadFile.\n     */\n    public constructor(file: File) {\n        this.uploadFile = file;\n    }\n\n    /**\n     * get raw file\n     */\n    public get file(): File {\n        return this.uploadFile;\n    }\n\n    /**\n     * returns filesize in byte\n     */\n    public get fileSize(): number {\n        return this.file.size;\n    }\n\n    /**\n     * returns filename\n     */\n    public get fileName(): string {\n        return this.file.name;\n    }\n\n    /**\n     * returns mime type of file\n     */\n    public get fileType(): string {\n        return this.file.type;\n    }\n\n    /**\n     * set response data if upload has been completed\n     */\n    public set response(response: Response) {\n        this.uploadResponse = response;\n    }\n\n    /**\n     * get response data if upload has been completed\n     */\n    public get response(): Response {\n        return this.uploadResponse;\n    }\n\n    /**\n     * set current upload state\n     */\n    public set state(state: UploadState) {\n        this.uploadedState = state;\n    }\n\n    /**\n     * get current upload state\n     */\n    public get state(): UploadState {\n        return this.uploadedState;\n    }\n\n    /**\n     * set uploaded size\n     */\n    public set uploaded(bytes: number) {\n        this.uploadedSize = bytes;\n    }\n\n    /**\n     * get uploaded size\n     */\n    public get uploaded(): number {\n        return this.uploadedSize;\n    }\n\n    /**\n     * set upload was successful\n     */\n    public set error(isError: boolean) {\n        this.uploadError = isError;\n    }\n\n    /**\n     * get upload was successful\n     */\n    public get error(): boolean {\n        return this.uploadError;\n    }\n\n    /**\n     * set upload was successful\n     */\n    public set success(isSuccess: boolean) {\n        this.uploadSuccess = isSuccess;\n    }\n\n    /**\n     * get upload was successful\n     */\n    public get success(): boolean {\n        return this.uploadSuccess;\n    }\n\n    public set isValid(valid: boolean) {\n        this.uploadValid = valid;\n    }\n\n    /**\n     * returns true if upload is valid\n     */\n    public get isValid(): boolean {\n        return this.uploadValid;\n    }\n\n    public set message(msg: string) {\n        this.uploadMessage = msg;\n    }\n\n    public get message(): string {\n        return this.uploadMessage;\n    }\n\n    public get progress(): number {\n        const progress = this.uploaded * 100 / this.fileSize;\n        return Math.round(progress > 100 ? 100 : progress);\n    }\n\n    /**\n     * return file upload data\n     * @todo move to model\n     */\n    public toJson(): UploadData {\n        return {\n            state     : this.state,\n            uploaded  : this.uploaded,\n            size      : this.fileSize,\n            name      : this.fileName,\n            progress  : this.progress,\n            hasError  : this.error,\n            isSuccess : this.success,\n            isValid   : this.isValid,\n            message   : this.message\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadModel.html":{"url":"classes/UploadModel.html","title":"class - UploadModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/model/upload.ts\n        \n\n            \n                Description\n            \n            \n                Represents a file which will be uploaded\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    file\n                                \n                                \n                                    fileSize\n                                \n                                \n                                    fileName\n                                \n                                \n                                    fileType\n                                \n                                \n                                    response\n                                \n                                \n                                    state\n                                \n                                \n                                    uploaded\n                                \n                                \n                                    error\n                                \n                                \n                                    success\n                                \n                                \n                                    isValid\n                                \n                                \n                                    message\n                                \n                                \n                                    progress\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(file: File)\n                    \n                \n                        \n                            \n                                Defined in lib/ngx-fileupload/model/upload.ts:51\n                            \n                        \n\n                \n                    \n                            Creates an instance of UploadFile.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        file\n                                                  \n                                                        \n                                                                    File\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toJson()\n                \n            \n\n\n            \n                \n                    Defined in lib/ngx-fileupload/model/upload.ts:186\n                \n            \n\n\n            \n                \n                    return file upload data\n\n\n                    \n                        Returns :         UploadData\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        file\n                    \n                \n\n                \n                    \n                        getfile()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:63\n                                \n                            \n                    \n                        \n                                get raw file\n\n\n                                \n                                    Returns :     File\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fileSize\n                    \n                \n\n                \n                    \n                        getfileSize()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:70\n                                \n                            \n                    \n                        \n                                returns filesize in byte\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fileName\n                    \n                \n\n                \n                    \n                        getfileName()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:77\n                                \n                            \n                    \n                        \n                                returns filename\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fileType\n                    \n                \n\n                \n                    \n                        getfileType()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:84\n                                \n                            \n                    \n                        \n                                returns mime type of file\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        response\n                    \n                \n\n                \n                    \n                        getresponse()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:98\n                                \n                            \n                    \n                        \n                                get response data if upload has been completed\n\n\n                                \n                                    Returns :         Response\n\n                                \n                        \n                    \n\n                \n                    \n                        setresponse(response)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:91\n                                \n                            \n                    \n                        \n                                set response data if upload has been completed\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            response\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:112\n                                \n                            \n                    \n                        \n                                get current upload state\n\n\n                                \n                                    Returns :         UploadState\n\n                                \n                        \n                    \n\n                \n                    \n                        setstate(state)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:105\n                                \n                            \n                    \n                        \n                                set current upload state\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            state\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        uploaded\n                    \n                \n\n                \n                    \n                        getuploaded()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:126\n                                \n                            \n                    \n                        \n                                get uploaded size\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setuploaded(bytes: number)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:119\n                                \n                            \n                    \n                        \n                                set uploaded size\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            bytes\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n\n                \n                    \n                        geterror()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:140\n                                \n                            \n                    \n                        \n                                get upload was successful\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        seterror(isError: boolean)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:133\n                                \n                            \n                    \n                        \n                                set upload was successful\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isError\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n\n                \n                    \n                        getsuccess()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:154\n                                \n                            \n                    \n                        \n                                get upload was successful\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setsuccess(isSuccess: boolean)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:147\n                                \n                            \n                    \n                        \n                                set upload was successful\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isSuccess\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:165\n                                \n                            \n                    \n                        \n                                returns true if upload is valid\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setisValid(valid: boolean)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:158\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            valid\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n\n                \n                    \n                        getmessage()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:173\n                                \n                            \n\n                \n                    \n                        setmessage(msg: string)\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:169\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            msg\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        progress\n                    \n                \n\n                \n                    \n                        getprogress()\n                    \n                \n                            \n                                \n                                    Defined in lib/ngx-fileupload/model/upload.ts:177\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export enum UploadState {\n    QUEUED    = \"queued\",\n    START     = \"start\",\n    PROGRESS  = \"progress\",\n    UPLOADED  = \"uploaded\",\n    CANCELED  = \"canceled\",\n    ERROR     = \"error\",\n    INVALID   = \"invalid\"\n}\n\nexport interface UploadData {\n    state: UploadState;\n    uploaded: number;\n    size: number;\n    name: string;\n    progress: number;\n    hasError: boolean;\n    isSuccess: boolean;\n    isValid: boolean;\n    message: string;\n}\n\nexport interface IDataNode {\n    [key: string]: any;\n}\n\ninterface Response {\n    code: number;\n    body: IDataNode;\n}\n\n/**\n * Represents a file which will be uploaded\n */\nexport class UploadModel {\n\n    private uploadFile: File;\n\n    private uploadedSize = 0;\n\n    private uploadedState: UploadState = UploadState.QUEUED;\n\n    private uploadError = false;\n\n    private uploadSuccess = false;\n\n    private uploadResponse: Response = null;\n\n    private uploadValid = true;\n\n    private uploadMessage = \"\";\n\n    /**\n     * Creates an instance of UploadFile.\n     */\n    public constructor(file: File) {\n        this.uploadFile = file;\n    }\n\n    /**\n     * get raw file\n     */\n    public get file(): File {\n        return this.uploadFile;\n    }\n\n    /**\n     * returns filesize in byte\n     */\n    public get fileSize(): number {\n        return this.file.size;\n    }\n\n    /**\n     * returns filename\n     */\n    public get fileName(): string {\n        return this.file.name;\n    }\n\n    /**\n     * returns mime type of file\n     */\n    public get fileType(): string {\n        return this.file.type;\n    }\n\n    /**\n     * set response data if upload has been completed\n     */\n    public set response(response: Response) {\n        this.uploadResponse = response;\n    }\n\n    /**\n     * get response data if upload has been completed\n     */\n    public get response(): Response {\n        return this.uploadResponse;\n    }\n\n    /**\n     * set current upload state\n     */\n    public set state(state: UploadState) {\n        this.uploadedState = state;\n    }\n\n    /**\n     * get current upload state\n     */\n    public get state(): UploadState {\n        return this.uploadedState;\n    }\n\n    /**\n     * set uploaded size\n     */\n    public set uploaded(bytes: number) {\n        this.uploadedSize = bytes;\n    }\n\n    /**\n     * get uploaded size\n     */\n    public get uploaded(): number {\n        return this.uploadedSize;\n    }\n\n    /**\n     * set upload was successful\n     */\n    public set error(isError: boolean) {\n        this.uploadError = isError;\n    }\n\n    /**\n     * get upload was successful\n     */\n    public get error(): boolean {\n        return this.uploadError;\n    }\n\n    /**\n     * set upload was successful\n     */\n    public set success(isSuccess: boolean) {\n        this.uploadSuccess = isSuccess;\n    }\n\n    /**\n     * get upload was successful\n     */\n    public get success(): boolean {\n        return this.uploadSuccess;\n    }\n\n    public set isValid(valid: boolean) {\n        this.uploadValid = valid;\n    }\n\n    /**\n     * returns true if upload is valid\n     */\n    public get isValid(): boolean {\n        return this.uploadValid;\n    }\n\n    public set message(msg: string) {\n        this.uploadMessage = msg;\n    }\n\n    public get message(): string {\n        return this.uploadMessage;\n    }\n\n    public get progress(): number {\n        const progress = this.uploaded * 100 / this.fileSize;\n        return Math.round(progress > 100 ? 100 : progress);\n    }\n\n    /**\n     * return file upload data\n     * @todo move to model\n     */\n    public toJson(): UploadData {\n        return {\n            state     : this.state,\n            uploaded  : this.uploaded,\n            size      : this.fileSize,\n            name      : this.fileName,\n            progress  : this.progress,\n            hasError  : this.error,\n            isSuccess : this.success,\n            isValid   : this.isValid,\n            message   : this.message\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadOptions.html":{"url":"interfaces/UploadOptions.html","title":"interface - UploadOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UploadOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/services/file-upload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        formData\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        formData\n                                    \n                                \n                                \n                                    \n                                        formData:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpEvent, HttpEventType, HttpProgressEvent, HttpResponse, HttpErrorResponse } from \"@angular/common/http\";\nimport { Subject, BehaviorSubject, Observable } from \"rxjs\";\nimport { takeUntil, filter } from \"rxjs/operators\";\nimport { UploadModel, UploadState} from \"../model/upload\";\n\nexport interface UploadOptions {\n    url: string;\n\n    formData?: {\n        enabled: boolean;\n        name?: string;\n    };\n}\n\n/**\n * represents a single fileupload\n */\nexport class FileUpload {\n\n    /**\n     * if cancel$ emits true, current upload will stopped\n     */\n    private cancel$: Subject = new Subject();\n\n    /**\n     * upload stream to notify observers if something has been changed\n     */\n    private upload$: BehaviorSubject;\n\n    private options: UploadOptions = {\n        url: \"\",\n        formData: { enabled: true, name: \"file\" }\n    };\n\n    /**\n     * create FileUpload service\n     */\n    public constructor(\n        private http: HttpClient,\n        private upload: UploadModel,\n        options: UploadOptions\n    ) {\n        this.upload$ = new BehaviorSubject(this.upload);\n        this.options = {...this.options, ...options};\n    }\n\n    /**\n     * upload file to server but only\n     * if file is not queued, abort request on cancel\n     */\n    public start() {\n        /** only start upload if state is not queued and is valid */\n        if (this.upload.state === UploadState.QUEUED && this.upload.isValid) {\n            this.uploadFile().pipe(\n                takeUntil(this.cancel$),\n                filter(() => this.upload.state !== UploadState.CANCELED)\n            )\n            .subscribe({\n                next: (event: HttpEvent) => this.handleHttpEvent(event),\n                error: (error: HttpErrorResponse) => this.handleHttpError(error)\n            });\n        }\n    }\n\n    /**\n     * restart download again\n     * reset state, and reset errors\n     */\n    public retry() {\n        if (this.upload.state === UploadState.ERROR) {\n            this.upload.state   = UploadState.QUEUED;\n            this.upload.error   = null;\n            this.upload.success = null;\n            this.upload.message = \"\";\n            this.start();\n        }\n    }\n\n    /**\n     * cancel current file upload, this will complete change subject\n     */\n    public cancel() {\n        let isCancelAble = this.upload.state !== UploadState.CANCELED;\n        isCancelAble     = isCancelAble && this.upload.state !== UploadState.UPLOADED;\n\n        if (isCancelAble) {\n            this.upload.state = UploadState.CANCELED;\n            this.notifyObservers();\n            this.cancel$.next(true);\n            this.completeUpload();\n        }\n    }\n\n    /**\n     * returns observable which notify if file upload state\n     * has been changed\n     */\n    public get change(): Observable {\n        return this.upload$.asObservable();\n    }\n\n    /**\n     * returns true if upload contains an error or is invalid\n     */\n    public hasError(): boolean {\n        return this.upload.error;\n    }\n\n    public isInvalid(): boolean {\n        return this.upload.isValid === false;\n    }\n\n    /**\n     * build form data and send request to server\n     */\n    private uploadFile(): Observable> {\n\n        const uploadBody = this.createUploadBody();\n        return this.http.post(this.options.url, uploadBody, {\n            reportProgress: true,\n            observe: \"events\"\n        });\n    }\n\n    /**\n     * create upload body which will should be send\n     */\n    private createUploadBody(): FormData | File {\n        if (this.options.formData.enabled) {\n            const formData = new FormData();\n            const label    = this.options.formData.name;\n            formData.append(label, this.upload.file, this.upload.fileName);\n            return formData;\n        }\n        return this.upload.file;\n    }\n\n    /**\n     * handle all http events\n     */\n    private handleHttpEvent(event: HttpEvent) {\n        switch (event.type) {\n            case HttpEventType.Sent: this.handleSent(); break;\n            case HttpEventType.UploadProgress: this.handleProgress(event); break;\n            case HttpEventType.Response: this.handleResponse(event); break;\n        }\n    }\n\n    /**\n     * got http error, this not completes the upload\n     * since the user can try do the same upload again\n     */\n    private handleHttpError(error: HttpErrorResponse) {\n        this.upload.state = UploadState.ERROR;\n        this.upload.error = true;\n        this.upload.message = error.message;\n        this.notifyObservers();\n    }\n\n    /**\n     * handle file upload in progress\n     */\n    private handleProgress(event: HttpProgressEvent) {\n        this.upload.state = UploadState.PROGRESS;\n        this.upload.uploaded = event.loaded;\n        this.notifyObservers();\n    }\n\n    /**\n     * upload has been started\n     */\n    private handleSent() {\n        this.upload.state = UploadState.START;\n        this.notifyObservers();\n    }\n\n    /**\n     * upload has been completed\n     */\n    private handleResponse(res: HttpResponse) {\n\n        this.upload.state   = UploadState.UPLOADED;\n        this.upload.success = res.ok;\n        this.upload.response = {\n            code: res.status,\n            body: res.body\n        };\n\n        this.notifyObservers();\n        this.completeUpload();\n    }\n\n    /**\n     * complete download, complete streams and delete them\n     * notify observers\n     */\n    private completeUpload() {\n        this.upload$.complete();\n        this.cancel$.complete();\n        this.cancel$ = null;\n        this.upload$ = null;\n    }\n\n    /**\n     * send notification to observers\n     */\n    private notifyObservers() {\n        this.upload$.next(this.upload);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationResult.html":{"url":"interfaces/ValidationResult.html","title":"interface - ValidationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValidationResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/ngx-fileupload/services/validation.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        valid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valid\n                                    \n                                \n                                \n                                    \n                                        valid:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from \"@angular/core\";\n\nexport const NGX_FILEUPLOAD_VALIDATOR = new InjectionToken(\"Upload validation Service\");\n\nexport interface ValidationResult {\n    valid: boolean;\n    error: string;\n}\n\nexport interface NgxFileUploadValidator {\n    validate(file: File): ValidationResult;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                lib/ngx-fileupload/components/ngx-fileupload-item.component.ts\n            \n            component\n            NgxFileUploadItemComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/components/ngx-fileupload-item.component.ts\n            \n            interface\n            FileUploadItemContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/components/ngx-fileupload.component.ts\n            \n            component\n            NgxFileUploadComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/directives/ngx-fileuplad.ts\n            \n            directive\n            NgxFileUploadDirective\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/model/upload.ts\n            \n            class\n            UploadModel\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/model/upload.ts\n            \n            interface\n            IDataNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/model/upload.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/model/upload.ts\n            \n            interface\n            UploadData\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/services/file-upload.ts\n            \n            class\n            FileUpload\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/services/file-upload.ts\n            \n            interface\n            UploadOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/services/upload-control.ts\n            \n            class\n            UploadControl\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/services/validation.ts\n            \n            interface\n            NgxFileUploadValidator\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/services/validation.ts\n            \n            interface\n            ValidationResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                lib/ngx-fileupload/services/validation.ts\n            \n            variable\n            NGX_FILEUPLOAD_VALIDATOR\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 8.1.0\n        \n            @angular/common : 8.1.0\n        \n            @angular/compiler : 8.1.0\n        \n            @angular/core : 8.1.0\n        \n            @angular/forms : 8.1.0\n        \n            @angular/platform-browser : 8.1.0\n        \n            @angular/platform-browser-dynamic : 8.1.0\n        \n            @angular/router : 8.1.0\n        \n            angular-pipes : 9.0.2\n        \n            rxjs : 6.5.2\n        \n            tslib : 1.10.0\n        \n            webdriver-manager : ^12.1.5\n        \n            zone.js : 0.9.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UploadState   (lib/.../upload.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/ngx-fileupload/model/upload.ts\n    \n        \n            \n                \n                    \n                        \n                        UploadState\n                    \n                \n                        \n                            \n                                 QUEUED\n                            \n                        \n                        \n                            \n                                Value : queued\n                            \n                        \n                        \n                            \n                                 START\n                            \n                        \n                        \n                            \n                                Value : start\n                            \n                        \n                        \n                            \n                                 PROGRESS\n                            \n                        \n                        \n                            \n                                Value : progress\n                            \n                        \n                        \n                            \n                                 UPLOADED\n                            \n                        \n                        \n                            \n                                Value : uploaded\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : canceled\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 INVALID\n                            \n                        \n                        \n                            \n                                Value : invalid\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxFileUploadModule\n\n\n\ncluster_NgxFileUploadModule_declarations\n\n\n\ncluster_NgxFileUploadModule_exports\n\n\n\n\nNgxFileUploadComponent\n\nNgxFileUploadComponent\n\n\n\nNgxFileUploadModule\n\nNgxFileUploadModule\n\nNgxFileUploadModule -->\n\nNgxFileUploadComponent->NgxFileUploadModule\n\n\n\n\n\nNgxFileUploadDirective\n\nNgxFileUploadDirective\n\nNgxFileUploadModule -->\n\nNgxFileUploadDirective->NgxFileUploadModule\n\n\n\n\n\nNgxFileUploadItemComponent\n\nNgxFileUploadItemComponent\n\nNgxFileUploadModule -->\n\nNgxFileUploadItemComponent->NgxFileUploadModule\n\n\n\n\n\nNgxFileUploadComponent \n\nNgxFileUploadComponent \n\nNgxFileUploadComponent  -->\n\nNgxFileUploadModule->NgxFileUploadComponent \n\n\n\n\n\nNgxFileUploadDirective \n\nNgxFileUploadDirective \n\nNgxFileUploadDirective  -->\n\nNgxFileUploadModule->NgxFileUploadDirective \n\n\n\n\n\nNgxFileUploadItemComponent \n\nNgxFileUploadItemComponent \n\nNgxFileUploadItemComponent  -->\n\nNgxFileUploadModule->NgxFileUploadItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxFileUploadModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NGX_FILEUPLOAD_VALIDATOR   (lib/.../validation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/ngx-fileupload/services/validation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_FILEUPLOAD_VALIDATOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\"Upload validation Service\")\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
